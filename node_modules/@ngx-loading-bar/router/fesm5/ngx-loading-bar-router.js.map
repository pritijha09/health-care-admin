{"version":3,"file":"ngx-loading-bar-router.js","sources":["ng:/@ngx-loading-bar/router/router.module.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA;AACgB,IAcd,gCAAY,MAAc,EAAE,UAA6B;AAC3D,QADE,iBAeC;AACH,QAfI,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,UAAA,KAAK;AAAI;AACV,gBAAf,KAAK,GAAG,KAAI,CAAC,yBAAyB,CAAC,MAAM,CAAC;AAC1D,YAAM,IAAI,KAAK,IAAI,KAAK,CAAC,gBAAgB,EAAE;AAC3C,gBAAQ,OAAO;AACf,aAAO;AACP,YACM,IAAI,KAAK,YAAY,eAAe,EAAE;AAC5C,gBAAQ,UAAU,CAAC,KAAK,EAAE,CAAC;AAC3B,aAAO;AACP,YACM,KAAK,KAAK,YAAY,eAAe,IAAI,KAAK,YAAY,aAAa,IAAI,KAAK,YAAY,gBAAgB,GAAG;AACrH,gBAAQ,UAAU,CAAC,QAAQ,EAAE,CAAC;AAC9B,aAAO;AACP,SAAK,CAAC,CAAC;AACP,KAAG;AACH;AACO;AAAgB;AAAyB;AAChC;AAAQ,IADd,0DAAyB;AAAO;AACnC;AAAyB;AAAmB;AAAQ,IADzD,UAAkC,MAAW;AAC/C;AACI;AAAyB,YAAnB,iBAAiB,GAAG,MAAM,CAAC,oBAAoB,IAAI,MAAM,CAAC,oBAAoB,EAAE;AAC1F,QAAI,IAAI,iBAAiB,IAAI,iBAAiB,CAAC,MAAM,EAAE;AACvD,YAAM,OAAO,iBAAiB,CAAC,MAAM,CAAC,KAAK,CAAC;AAC5C,SAAK;AACL,QACI,OAAO,EAAE,CAAC;AACd,KAAG,CA1BM;AAAC;mCAVT,QAAQ,SAAC,pDAUuB;OAT/B,OAAO,EAAE,hBAUmD,gBAdvC,MAAM;gBAKzB,YAAY,5BALiB,gBACN,iBAAiB;AAAG;QAK3C,gBAAgB,uBACjB,sBACD,OAAO,EAAE;eACP,YAAY,0BACZ,gBAAgB,uBACjB,mBACF;;;;;;;;;;;;;;;;;;;;;2GAXuD;AAAC,IAuCzD,6BAAC;AACA,CAtCD;AAAK;AAAC;AAAI;AAGT;AAOa;AAAI;AAAC;AAAI;AACJ;AAED;AAAI;AAAC;;AAjBA,AAeA,AAAA,AAAA,AAAA,AAAA,AAAA,AAeA,AAdA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AACA,AApCA,AAAA,AAAA,AACA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AACA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AACA,AAZA,AAAA,AACA,AAAA,AAuCA,AAAA,AArCA","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Router, NavigationStart, NavigationError, NavigationEnd, NavigationCancel } from '@angular/router';\nimport { LoadingBarModule, LoadingBarService } from '@ngx-loading-bar/core';\n\n@NgModule({\n  imports: [\n    RouterModule,\n    LoadingBarModule,\n  ],\n  exports: [\n    RouterModule,\n    LoadingBarModule,\n  ],\n})\nexport class LoadingBarRouterModule {\n  constructor(router: Router, loadingBar: LoadingBarService) {\n    router.events.subscribe(event => {\n      const state = this.getCurrentNavigationState(router);\n      if (state && state.ignoreLoadingBar) {\n        return;\n      }\n\n      if (event instanceof NavigationStart) {\n        loadingBar.start();\n      }\n\n      if ((event instanceof NavigationError || event instanceof NavigationEnd || event instanceof NavigationCancel)) {\n        loadingBar.complete();\n      }\n    });\n  }\n\n  private getCurrentNavigationState(router: any) {\n    // `getCurrentNavigation` only available in angular `7.2`\n    const currentNavigation = router.getCurrentNavigation && router.getCurrentNavigation();\n    if (currentNavigation && currentNavigation.extras) {\n      return currentNavigation.extras.state;\n    }\n\n    return {};\n  }\n}\n"]}