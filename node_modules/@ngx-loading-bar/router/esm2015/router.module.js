/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { RouterModule, Router, NavigationStart, NavigationError, NavigationEnd, NavigationCancel } from '@angular/router';
import { LoadingBarModule, LoadingBarService } from '@ngx-loading-bar/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/router';
import * as ɵngcc2 from '@ngx-loading-bar/core';
export class LoadingBarRouterModule {
    /**
     * @param {?} router
     * @param {?} loadingBar
     */
    constructor(router, loadingBar) {
        router.events.subscribe(event => {
            /** @type {?} */
            const state = this.getCurrentNavigationState(router);
            if (state && state.ignoreLoadingBar) {
                return;
            }
            if (event instanceof NavigationStart) {
                loadingBar.start();
            }
            if ((event instanceof NavigationError || event instanceof NavigationEnd || event instanceof NavigationCancel)) {
                loadingBar.complete();
            }
        });
    }
    /**
     * @private
     * @param {?} router
     * @return {?}
     */
    getCurrentNavigationState(router) {
        // `getCurrentNavigation` only available in angular `7.2`
        /** @type {?} */
        const currentNavigation = router.getCurrentNavigation && router.getCurrentNavigation();
        if (currentNavigation && currentNavigation.extras) {
            return currentNavigation.extras.state;
        }
        return {};
    }
}
LoadingBarRouterModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: LoadingBarRouterModule });
LoadingBarRouterModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function LoadingBarRouterModule_Factory(t) { return new (t || LoadingBarRouterModule)(ɵngcc0.ɵɵinject(ɵngcc1.Router), ɵngcc0.ɵɵinject(ɵngcc2.LoadingBarService)); }, imports: [[
            RouterModule,
            LoadingBarModule,
        ],
        RouterModule,
        LoadingBarModule] });
/** @nocollapse */
LoadingBarRouterModule.ctorParameters = () => [
    { type: Router },
    { type: LoadingBarService }
];
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(LoadingBarRouterModule, { imports: function () { return [RouterModule,
        LoadingBarModule]; }, exports: function () { return [RouterModule,
        LoadingBarModule]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LoadingBarRouterModule, [{
        type: NgModule,
        args: [{
                imports: [
                    RouterModule,
                    LoadingBarModule,
                ],
                exports: [
                    RouterModule,
                    LoadingBarModule,
                ]
            }]
    }], function () { return [{ type: ɵngcc1.Router }, { type: ɵngcc2.LoadingBarService }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGVyLm1vZHVsZS5qcyIsInNvdXJjZXMiOlsibmc6L0BuZ3gtbG9hZGluZy1iYXIvcm91dGVyL3JvdXRlci5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLEVBQUUsZUFBZSxFQUFFLGVBQWUsRUFBRSxhQUFhLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMxSCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQzs7OztBQVk1RSxNQUFNLE9BQU8sc0JBQXNCO0FBQ25DO0FBQVE7QUFBeUI7QUFBNkI7QUFDdkQsSUFETCxZQUFZLE1BQWMsRUFBRSxVQUE2QjtBQUMzRCxRQUFJLE1BQU0sQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxFQUFFO0FBQ3BDO0FBQTZCLGtCQUFqQixLQUFLLEdBQUcsSUFBSSxDQUFDLHlCQUF5QixDQUFDLE1BQU0sQ0FBQztBQUMxRCxZQUFNLElBQUksS0FBSyxJQUFJLEtBQUssQ0FBQyxnQkFBZ0IsRUFBRTtBQUMzQyxnQkFBUSxPQUFPO0FBQ2YsYUFBTztBQUNQLFlBQ00sSUFBSSxLQUFLLFlBQVksZUFBZSxFQUFFO0FBQzVDLGdCQUFRLFVBQVUsQ0FBQyxLQUFLLEVBQUUsQ0FBQztBQUMzQixhQUFPO0FBQ1AsWUFDTSxJQUFJLENBQUMsS0FBSyxZQUFZLGVBQWUsSUFBSSxLQUFLLFlBQVksYUFBYSxJQUFJLEtBQUssWUFBWSxnQkFBZ0IsQ0FBQyxFQUFFO0FBQ3JILGdCQUFRLFVBQVUsQ0FBQyxRQUFRLEVBQUUsQ0FBQztBQUM5QixhQUFPO0FBQ1AsUUFBSSxDQUFDLENBQUMsQ0FBQztBQUNQLElBQUUsQ0FBQztBQUNIO0FBQ087QUFBZ0I7QUFBeUI7QUFDaEM7QUFBUSxJQURkLHlCQUF5QixDQUFDLE1BQVc7QUFDL0M7QUFDSTtBQUF5QixjQUFuQixpQkFBaUIsR0FBRyxNQUFNLENBQUMsb0JBQW9CLElBQUksTUFBTSxDQUFDLG9CQUFvQixFQUFFO0FBQzFGLFFBQUksSUFBSSxpQkFBaUIsSUFBSSxpQkFBaUIsQ0FBQyxNQUFNLEVBQUU7QUFDdkQsWUFBTSxPQUFPLGlCQUFpQixDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUM7QUFDNUMsU0FBSztBQUNMLFFBQ0ksT0FBTyxFQUFFLENBQUM7QUFDZCxJQUFFLENBQUM7QUFDSDtrREFyQ0MsUUFBUSxTQUFDLGtCQUNSO0dBQU8sRUFBRSxzQkFDUCxZQUFZLHNCQUNaLGdCQUFnQixtQkFDakIsa0JBQ0QsT0FBTyxFQUFFLHNCQUNQLFlBQVksc0JBQ1osZ0JBQWdCLG1CQUNqQixlQUNGOzs7Ozs2QkFDSTtBQUFDO0FBQW1CO0FBQ1UsWUFkWixNQUFNO0FBQUksWUFDTixpQkFBaUI7QUFBRzs7Ozs7Ozs7Ozs7Ozs7OzsyR0FBRTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFJvdXRlck1vZHVsZSwgUm91dGVyLCBOYXZpZ2F0aW9uU3RhcnQsIE5hdmlnYXRpb25FcnJvciwgTmF2aWdhdGlvbkVuZCwgTmF2aWdhdGlvbkNhbmNlbCB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5pbXBvcnQgeyBMb2FkaW5nQmFyTW9kdWxlLCBMb2FkaW5nQmFyU2VydmljZSB9IGZyb20gJ0BuZ3gtbG9hZGluZy1iYXIvY29yZSc7XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtcbiAgICBSb3V0ZXJNb2R1bGUsXG4gICAgTG9hZGluZ0Jhck1vZHVsZSxcbiAgXSxcbiAgZXhwb3J0czogW1xuICAgIFJvdXRlck1vZHVsZSxcbiAgICBMb2FkaW5nQmFyTW9kdWxlLFxuICBdLFxufSlcbmV4cG9ydCBjbGFzcyBMb2FkaW5nQmFyUm91dGVyTW9kdWxlIHtcbiAgY29uc3RydWN0b3Iocm91dGVyOiBSb3V0ZXIsIGxvYWRpbmdCYXI6IExvYWRpbmdCYXJTZXJ2aWNlKSB7XG4gICAgcm91dGVyLmV2ZW50cy5zdWJzY3JpYmUoZXZlbnQgPT4ge1xuICAgICAgY29uc3Qgc3RhdGUgPSB0aGlzLmdldEN1cnJlbnROYXZpZ2F0aW9uU3RhdGUocm91dGVyKTtcbiAgICAgIGlmIChzdGF0ZSAmJiBzdGF0ZS5pZ25vcmVMb2FkaW5nQmFyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYgKGV2ZW50IGluc3RhbmNlb2YgTmF2aWdhdGlvblN0YXJ0KSB7XG4gICAgICAgIGxvYWRpbmdCYXIuc3RhcnQoKTtcbiAgICAgIH1cblxuICAgICAgaWYgKChldmVudCBpbnN0YW5jZW9mIE5hdmlnYXRpb25FcnJvciB8fCBldmVudCBpbnN0YW5jZW9mIE5hdmlnYXRpb25FbmQgfHwgZXZlbnQgaW5zdGFuY2VvZiBOYXZpZ2F0aW9uQ2FuY2VsKSkge1xuICAgICAgICBsb2FkaW5nQmFyLmNvbXBsZXRlKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBwcml2YXRlIGdldEN1cnJlbnROYXZpZ2F0aW9uU3RhdGUocm91dGVyOiBhbnkpIHtcbiAgICAvLyBgZ2V0Q3VycmVudE5hdmlnYXRpb25gIG9ubHkgYXZhaWxhYmxlIGluIGFuZ3VsYXIgYDcuMmBcbiAgICBjb25zdCBjdXJyZW50TmF2aWdhdGlvbiA9IHJvdXRlci5nZXRDdXJyZW50TmF2aWdhdGlvbiAmJiByb3V0ZXIuZ2V0Q3VycmVudE5hdmlnYXRpb24oKTtcbiAgICBpZiAoY3VycmVudE5hdmlnYXRpb24gJiYgY3VycmVudE5hdmlnYXRpb24uZXh0cmFzKSB7XG4gICAgICByZXR1cm4gY3VycmVudE5hdmlnYXRpb24uZXh0cmFzLnN0YXRlO1xuICAgIH1cblxuICAgIHJldHVybiB7fTtcbiAgfVxufVxuIl19