{"version":3,"file":"ngx-loading-bar-router.js","sources":["ng:/@ngx-loading-bar/router/router.module.ts"],"names":[],"mappings":";;;;;;;;AAAA,MAca,sBAAsB;;qBACjC,YAAY,MAAc,EAAE;EAA6B,YACvD,MAAM,CAAC,MAAM,CAAC,5BAhBlB,MAca,sBAAsB;MAER,CAAC,PAD5B;IACiC,JADzB;AAAyB;GAErB,HAFkD;AAE7C,GAAG,IAAI,CAAC,yBAAyB,CAAC,lCAD5C,IADL,YAAY,MAAc,EAAE,UAA6B;EAEF,CAAC,cACpD,IAAI,KAAK,IAAI,KAAK,CAAC,pCAFzB,QAAI,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK;SAEQ,EAAE,XAD3C;AAEQ,OAAO,cACR,aAED,IAAI,KAAK,YAAY,vDALE,kBAAjB,KAAK,GAAG,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAAC;IAKhB,EAAE,kBACpC,UAAU,CAAC,KAAK,EAAE,CAAC,3CAL3B,YAAM,IAAI,KAAK,IAAI,KAAK,CAAC,gBAAgB,EAAE;MAMpC,aAED,nBAPN,gBAAQ,OAAO;AAOJ,KAAK,LANhB,aAAO;GAMqB,eAAe,IAAI,KAAK,YAAY,vCALhE,YACM,IAAI,KAAK,YAAY,eAAe,EAAE;AAIiC,IAAI,KAAK,YAAY,rBAHlG,gBAAQ,UAAU,CAAC,KAAK,EAAE,CAAC;CAGuF,GAAG,JAFrH,aAAO;QAGC,UAAU,CAAC,QAAQ,EAAE,CAAC,cACvB,UACF,CAAC,CAAC,MACJ,9DALH,YACM,KAAK,KAAK,YAAY,eAAe,IAAI,KAAK,YAAY,aAAa,IAAI,KAAK,YAAY,gBAAgB,GAAG;AACrH,gBAAQ,UAAU,CAAC,QAAQ,EAAE,CAAC;AAC9B,aAAO;AACP,SAAK,CAAC,CAAC;AACP,KAAG;AACH;AACO;AAAgB;;AACP;IADN,yBAAyB,CAAC,MAAW,pCACvB,IADd,yBAAyB,CAAC,MAAW;AAC/C;AACI;cAAM,iBAAiB,GAAG,MAAM,CAAC,oBAAoB,IAAI,MAAM,CAAC,oBAAoB,EAAE,9FAA7D,cAAnB,iBAAiB,GAAG,MAAM,CAAC,oBAAoB,IAAI,MAAM,CAAC,oBAAoB,EAAE;QACtF,IAAI,iBAAiB,IAAI,iBAAiB,CAAC,MAAM,EAAE,3DAAvD,QAAI,IAAI,iBAAiB,IAAI,iBAAiB,CAAC,MAAM,EAAE;YACjD,OAAO,iBAAiB,CAAC,MAAM,CAAC,KAAK,CAAC,lDAA5C,YAAM,OAAO,iBAAiB,CAAC,MAAM,CAAC,KAAK,CAAC;SACvC,TAAL,SAAK;QAED,OAAO,EAAE,CAAC,lBADd,QACI,OAAO,EAAE,CAAC;KACX,LAAH,KAAG;AACH;kDArCC,QAAQ,SAAC,kBACR,nCADD,QAAQ,SAAC,kBACR;GAAO,EAAE,sBACP,YAAY,sBACZ,gBAAgB,mBACjB,kBACD,OAAO,EAAE,sBACP,YAAY,sBACZ,gBAAgB,mBACjB,eACF,lOARQ,EAAE,sBACP,YAAY,sBACZ,gBAAgB,mBACjB,kBACD,OAAO,EAAE,sBACP,YAAY,sBACZ,gBAAgB,mBACjB,eACF;;;;OAZsB,MAAM;OACF,iBAAiB,KAYvC;AAAC;AAAmB;AACU,YAdZ,MAAM;AAAI,YACN,iBAAiB;AAAG;;;;;;;;;;;;;;;;2GAAE;AAAC;AAAC;AAAI;AAE5C;AAOA;AAAI;AAAC;AAAI;AAGI;AAEA;AAAI;AAAC","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Router, NavigationStart, NavigationError, NavigationEnd, NavigationCancel } from '@angular/router';\nimport { LoadingBarModule, LoadingBarService } from '@ngx-loading-bar/core';\n\n@NgModule({\n  imports: [\n    RouterModule,\n    LoadingBarModule,\n  ],\n  exports: [\n    RouterModule,\n    LoadingBarModule,\n  ],\n})\nexport class LoadingBarRouterModule {\n  constructor(router: Router, loadingBar: LoadingBarService) {\n    router.events.subscribe(event => {\n      const state = this.getCurrentNavigationState(router);\n      if (state && state.ignoreLoadingBar) {\n        return;\n      }\n\n      if (event instanceof NavigationStart) {\n        loadingBar.start();\n      }\n\n      if ((event instanceof NavigationError || event instanceof NavigationEnd || event instanceof NavigationCancel)) {\n        loadingBar.complete();\n      }\n    });\n  }\n\n  private getCurrentNavigationState(router: any) {\n    // `getCurrentNavigation` only available in angular `7.2`\n    const currentNavigation = router.getCurrentNavigation && router.getCurrentNavigation();\n    if (currentNavigation && currentNavigation.extras) {\n      return currentNavigation.extras.state;\n    }\n\n    return {};\n  }\n}\n"]}