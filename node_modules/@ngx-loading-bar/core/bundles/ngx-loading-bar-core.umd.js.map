{"version":3,"file":"ngx-loading-bar-core.umd.js","sources":["ng:/@ngx-loading-bar/core/loading-bar.service.ts","ng:/@ngx-loading-bar/core/loading-bar.component.ts","ng:/@ngx-loading-bar/core/core.module.ts"],"names":["Subject","debounceTime","isPlatformBrowser","Injectable","Inject","PLATFORM_ID","Component","ViewEncapsulation","Input","NgModule","CommonModule"],"mappings":"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","sourcesContent":["import { Injectable, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { PLATFORM_ID, Inject } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable({ providedIn: 'root' })\nexport class LoadingBarService implements OnDestroy {\n  readonly progress$ = (new Subject<number>()).pipe(debounceTime(0)) as Subject<number>;\n\n  private _pendingRequests = 0;\n  private _value = 0;\n  private _incTimeout: any;\n\n  constructor(@Inject(PLATFORM_ID) private platformId: Object) {}\n\n  start(initialValue = 2) {\n    ++this._pendingRequests;\n    if (this._value === 0 || this._pendingRequests === 1) {\n      // Inserts the loading bar element into the dom, and sets it to 2%\n      this.set(this._pendingRequests === 1 && this._value > 0 ? this._value : initialValue);\n    }\n  }\n\n  stop() {\n    this.complete();\n    while (this._pendingRequests > 0) {\n      this.complete();\n    }\n  }\n\n  complete() {\n    if (this._pendingRequests === 0 && this._value === 0) {\n      return;\n    }\n\n    if (this._pendingRequests > 0) {\n      --this._pendingRequests;\n    }\n\n    if (this._pendingRequests === 0 || (this._pendingRequests === 0 && this._value > 0)) {\n      if (this._value !== 100) {\n        this.set(100);\n      }\n\n      // Attempt to aggregate any start/complete calls within 500ms:\n      setTimeout(() => this.set(0), 500);\n    }\n  }\n\n  /**\n   * Set the loading bar's width to a certain percent.\n   *\n   * @param n any value between 0 and 100\n   */\n  set(n) {\n    if (!isPlatformBrowser(this.platformId)) {\n      this._pendingRequests = 0;\n      return;\n    }\n\n    if (n === 0 && this._pendingRequests > 0) {\n      n = 2;\n    }\n\n    this._value = n;\n    this.progress$.next(n);\n\n    if (this._pendingRequests === 0) {\n      return;\n    }\n\n    // increment loadingbar to give the illusion that there is always\n    // progress but make sure to cancel the previous timeouts so we don't\n    // have multiple incs running at the same time.\n    clearTimeout(this._incTimeout);\n    if (this._value > 0 && this._value < 100) {\n      this._incTimeout = setTimeout(() => this.increment(), 250);\n    }\n  }\n\n  /**\n   * Increments the loading bar by a random amount\n   * but slows down as it progresses\n   */\n  increment(rnd = 0) {\n    if (rnd > 0) {\n      this.set(this._value + rnd);\n    }\n\n    const stat = this._value;\n    if (stat >= 0 && stat < 25) {\n      // Start out between 3 - 6% increments\n      rnd = (Math.random() * (5 - 3 + 1) + 3);\n    } else if (stat >= 25 && stat < 65) {\n      // increment between 0 - 3%\n      rnd = (Math.random() * 3);\n    } else if (stat >= 65 && stat < 90) {\n      // increment between 0 - 2%\n      rnd = (Math.random() * 2);\n    } else if (stat >= 90 && stat < 99) {\n      // finally, increment it .5 %\n      rnd = 0.5;\n    } else {\n      // after 99%, don't increment:\n      rnd = 0;\n    }\n\n    this.set(this._value + rnd);\n  }\n\n  ngOnDestroy() {\n    this.progress$.complete();\n  }\n}\n","import { Component, Input, ChangeDetectionStrategy, ViewEncapsulation } from '@angular/core';\nimport { LoadingBarService } from './loading-bar.service';\n\n@Component({\n  selector: 'ngx-loading-bar',\n  template: `\n    <ng-container *ngIf=\"(value !== null ? value : loader.progress$|async) as progress\">\n      <div id=\"loading-bar-spinner\" *ngIf=\"includeSpinner\" [style.color]=\"color\">\n        <div [style.width]=\"diameter\" [style.height]=\"diameter\" class=\"spinner-icon\"></div>\n      </div>\n      <div id=\"loading-bar\" *ngIf=\"includeBar\" [style.color]=\"color\">\n        <div class=\"bar\" [style.background]=\"color\" [style.height]=\"height\" [style.width]=\"progress + '%'\">\n          <div class=\"peg\" [style.height]=\"height\"></div>\n        </div>\n      </div>\n    </ng-container>\n  `,\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.Emulated,\n  styleUrls: ['./loading-bar.component.scss'],\n  host: {\n    '[class.loading-bar-fixed]': 'fixed',\n  }\n})\nexport class LoadingBarComponent {\n  @Input() includeSpinner = true;\n  @Input() includeBar = true;\n  @Input() fixed = true;\n  @Input() color;\n  @Input() height;\n  @Input() diameter;\n  @Input() value = null;\n\n  constructor(public loader: LoadingBarService) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoadingBarComponent } from './loading-bar.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [LoadingBarComponent],\n  exports: [LoadingBarComponent],\n})\nexport class LoadingBarModule {}\n"]}