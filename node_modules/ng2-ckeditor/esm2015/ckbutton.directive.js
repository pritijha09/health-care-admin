import * as tslib_1 from "tslib";
import { Directive, EventEmitter, Output, Input } from '@angular/core';
/**
 * CKGroup component
 * Usage :
 *  <ckeditor [(ngModel)]="data" [config]="{...}" debounce="500">
 *      <ckbutton [name]="'SaveButton'" [command]="'saveCommand'" (click)="save($event)"
 *                [icon]="'/save.png'" [toolbar]="'customGroup,1'" [label]="'Save'">
 *      </ckbutton>
 *   </ckeditor>
 */
import * as ɵngcc0 from '@angular/core';
let CKButtonDirective = class CKButtonDirective {
    /**
     * CKGroup component
     * Usage :
     *  <ckeditor [(ngModel)]="data" [config]="{...}" debounce="500">
     *      <ckbutton [name]="'SaveButton'" [command]="'saveCommand'" (click)="save($event)"
     *                [icon]="'/save.png'" [toolbar]="'customGroup,1'" [label]="'Save'">
     *      </ckbutton>
     *   </ckeditor>
     */
    constructor() {
        this.click = new EventEmitter();
    }
    initialize(editor) {
        editor.instance.addCommand(this.command, {
            exec: (evt) => {
                this.click.emit(evt);
            },
        });
        editor.instance.ui.addButton(this.name, {
            label: this.label,
            command: this.command,
            toolbar: this.toolbar,
            icon: this.icon,
        });
    }
    ngOnInit() {
        if (!this.name)
            throw new Error('Attribute "name" is required on <ckbutton>');
        if (!this.command)
            throw new Error('Attribute "command" is required on <ckbutton>');
    }
};
CKButtonDirective.ɵfac = function CKButtonDirective_Factory(t) { return new (t || CKButtonDirective)(); };
CKButtonDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CKButtonDirective, selectors: [["ckbutton"]], inputs: { label: "label", command: "command", toolbar: "toolbar", name: "name", icon: "icon" }, outputs: { click: "click" } });
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", Object)
], CKButtonDirective.prototype, "click", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String)
], CKButtonDirective.prototype, "label", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String)
], CKButtonDirective.prototype, "command", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String)
], CKButtonDirective.prototype, "toolbar", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String)
], CKButtonDirective.prototype, "name", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String)
], CKButtonDirective.prototype, "icon", void 0);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CKButtonDirective, [{
        type: Directive,
        args: [{
                selector: 'ckbutton'
            }]
    }], function () { return []; }, { click: [{
            type: Output
        }], label: [{
            type: Input
        }], command: [{
            type: Input
        }], toolbar: [{
            type: Input
        }], name: [{
            type: Input
        }], icon: [{
            type: Input
        }] }); })();
export { CKButtonDirective };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2tidXR0b24uZGlyZWN0aXZlLmpzIiwic291cmNlcyI6WyJuZzovbmcyLWNrZWRpdG9yL2NrYnV0dG9uLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxZQUFZLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUcvRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFJSCxJQUFhLGlCQUFpQixHQUE5QixNQUFhLGlCQUFpQjtBQUFHLElBWmpDO0FBQ0E7QUFDSTtBQUNJO0FBQ0k7QUFDSTtBQUVoQjtBQUVHO0FBQ1EsT0FGUjtBQUNILElBQUE7QUFDRyxRQUdTLFVBQUssR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO0FBQ3ZDLElBeUJBLENBQUM7QUFDRCxJQXBCRSxVQUFVLENBQUMsTUFBeUI7QUFDdEMsUUFBSSxNQUFNLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFO0FBQzdDLFlBQU0sSUFBSSxFQUFFLENBQUMsR0FBUSxFQUFFLEVBQUU7QUFDekIsZ0JBQVEsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDN0IsWUFBTSxDQUFDO0FBQ1AsU0FBSyxDQUFDLENBQUM7QUFDUCxRQUNJLE1BQU0sQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFO0FBQzVDLFlBQU0sS0FBSyxFQUFFLElBQUksQ0FBQyxLQUFLO0FBQ3ZCLFlBQU0sT0FBTyxFQUFFLElBQUksQ0FBQyxPQUFPO0FBQzNCLFlBQU0sT0FBTyxFQUFFLElBQUksQ0FBQyxPQUFPO0FBQzNCLFlBQU0sSUFBSSxFQUFFLElBQUksQ0FBQyxJQUFJO0FBQ3JCLFNBQUssQ0FBQyxDQUFDO0FBQ1AsSUFBRSxDQUFDO0FBQ0gsSUFDRSxRQUFRO0FBQUssUUFDWCxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUk7QUFBRSxZQUFBLE1BQU0sSUFBSSxLQUFLLENBQUMsNENBQTRDLENBQUMsQ0FBQztBQUNsRixRQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTztBQUFFLFlBQUEsTUFBTSxJQUFJLEtBQUssQ0FBQywrQ0FBK0MsQ0FBQyxDQUFDO0FBQ3hGLElBQUUsQ0FBQztBQUNILENBQUM7O3VPQUFBO0FBMUJXO0FBQXFCLElBQTlCLE1BQU0sRUFBRTtBQUFFO0FBQ00sZ0RBRG9CO0FBQzVCO0FBQ0wsSUFESCxLQUFLLEVBQUU7QUFBRTtBQUVSLGdEQUZxQjtBQUNkO0FBQ1AsSUFERCxLQUFLLEVBQUU7QUFBRTtBQUVWLGtEQUZ5QjtBQUNoQjtBQUNQLElBREQsS0FBSyxFQUFFO0FBQUU7QUFFUCxrREFGc0I7QUFDaEI7QUFDSixJQURKLEtBQUssRUFBRTtBQUFFO0FBR0wsK0NBSGlCO0FBQ2I7QUFFTCxJQUZILEtBQUssRUFBRTtBQUFFO0FBRW9CLCtDQUZSO0FBTlgsaUJBQWlCLDRCQUg3QixTQUFTLENBQUMsVUFDVCxRQUFRLEVBQUU7U0FBVSxPQUNyQixDQUFDLElBQ1c7YUFBaUIsQ0EyQjdCOzs7Ozs7Ozs7Ozs7Ozs7b0JBQ0Q7QUFBQyxTQTVCWSxpQkFBaUI7QUFBSSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgT25Jbml0LCBFdmVudEVtaXR0ZXIsIE91dHB1dCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENLRWRpdG9yQ29tcG9uZW50IH0gZnJvbSAnLi9ja2VkaXRvci5jb21wb25lbnQnO1xuXG4vKipcbiAqIENLR3JvdXAgY29tcG9uZW50XG4gKiBVc2FnZSA6XG4gKiAgPGNrZWRpdG9yIFsobmdNb2RlbCldPVwiZGF0YVwiIFtjb25maWddPVwiey4uLn1cIiBkZWJvdW5jZT1cIjUwMFwiPlxuICogICAgICA8Y2tidXR0b24gW25hbWVdPVwiJ1NhdmVCdXR0b24nXCIgW2NvbW1hbmRdPVwiJ3NhdmVDb21tYW5kJ1wiIChjbGljayk9XCJzYXZlKCRldmVudClcIlxuICogICAgICAgICAgICAgICAgW2ljb25dPVwiJy9zYXZlLnBuZydcIiBbdG9vbGJhcl09XCInY3VzdG9tR3JvdXAsMSdcIiBbbGFiZWxdPVwiJ1NhdmUnXCI+XG4gKiAgICAgIDwvY2tidXR0b24+XG4gKiAgIDwvY2tlZGl0b3I+XG4gKi9cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ2NrYnV0dG9uJyxcbn0pXG5leHBvcnQgY2xhc3MgQ0tCdXR0b25EaXJlY3RpdmUgaW1wbGVtZW50cyBPbkluaXQge1xuICBAT3V0cHV0KCkgY2xpY2sgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gIEBJbnB1dCgpIGxhYmVsOiBzdHJpbmc7XG4gIEBJbnB1dCgpIGNvbW1hbmQ6IHN0cmluZztcbiAgQElucHV0KCkgdG9vbGJhcjogc3RyaW5nO1xuICBASW5wdXQoKSBuYW1lOiBzdHJpbmc7XG4gIEBJbnB1dCgpIGljb246IHN0cmluZztcblxuICBpbml0aWFsaXplKGVkaXRvcjogQ0tFZGl0b3JDb21wb25lbnQpIHtcbiAgICBlZGl0b3IuaW5zdGFuY2UuYWRkQ29tbWFuZCh0aGlzLmNvbW1hbmQsIHtcbiAgICAgIGV4ZWM6IChldnQ6IGFueSkgPT4ge1xuICAgICAgICB0aGlzLmNsaWNrLmVtaXQoZXZ0KTtcbiAgICAgIH0sXG4gICAgfSk7XG5cbiAgICBlZGl0b3IuaW5zdGFuY2UudWkuYWRkQnV0dG9uKHRoaXMubmFtZSwge1xuICAgICAgbGFiZWw6IHRoaXMubGFiZWwsXG4gICAgICBjb21tYW5kOiB0aGlzLmNvbW1hbmQsXG4gICAgICB0b29sYmFyOiB0aGlzLnRvb2xiYXIsXG4gICAgICBpY29uOiB0aGlzLmljb24sXG4gICAgfSk7XG4gIH1cblxuICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgICBpZiAoIXRoaXMubmFtZSkgdGhyb3cgbmV3IEVycm9yKCdBdHRyaWJ1dGUgXCJuYW1lXCIgaXMgcmVxdWlyZWQgb24gPGNrYnV0dG9uPicpO1xuICAgIGlmICghdGhpcy5jb21tYW5kKSB0aHJvdyBuZXcgRXJyb3IoJ0F0dHJpYnV0ZSBcImNvbW1hbmRcIiBpcyByZXF1aXJlZCBvbiA8Y2tidXR0b24+Jyk7XG4gIH1cbn1cbiJdfQ==