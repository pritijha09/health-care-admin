import * as tslib_1 from "tslib";
import { Directive, Input, ContentChildren, QueryList } from '@angular/core';
import { CKButtonDirective } from './ckbutton.directive';
/**
 * CKGroup component
 * Usage :
 *  <ckeditor [(ngModel)]="data" [config]="{...}" debounce="500">
 *      <ckgroup [name]="'exampleGroup2'" [previous]="'1'" [subgroupOf]="'exampleGroup1'">
 *          .
 *          .
 *      </ckgroup>
 *   </ckeditor>
 */
import * as ɵngcc0 from '@angular/core';
let CKGroupDirective = class CKGroupDirective {
    ngAfterContentInit() {
        // Reconfigure each button's toolbar property within ckgroup to hold its parent's name
        this.toolbarButtons.forEach(button => (button.toolbar = this.name));
    }
    initialize(editor) {
        editor.instance.ui.addToolbarGroup(this.name, this.previous, this.subgroupOf);
        // Initialize each button within ckgroup
        this.toolbarButtons.forEach(button => {
            button.initialize(editor);
        });
    }
};
CKGroupDirective.ɵfac = function CKGroupDirective_Factory(t) { return new (t || CKGroupDirective)(); };
CKGroupDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CKGroupDirective, selectors: [["ckgroup"]], contentQueries: function CKGroupDirective_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, CKButtonDirective, false);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.toolbarButtons = _t);
    } }, inputs: { name: "name", previous: "previous", subgroupOf: "subgroupOf" } });
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String)
], CKGroupDirective.prototype, "name", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object)
], CKGroupDirective.prototype, "previous", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String)
], CKGroupDirective.prototype, "subgroupOf", void 0);
tslib_1.__decorate([
    ContentChildren(CKButtonDirective),
    tslib_1.__metadata("design:type", QueryList)
], CKGroupDirective.prototype, "toolbarButtons", void 0);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CKGroupDirective, [{
        type: Directive,
        args: [{
                selector: 'ckgroup'
            }]
    }], null, { name: [{
            type: Input
        }], previous: [{
            type: Input
        }], subgroupOf: [{
            type: Input
        }], toolbarButtons: [{
            type: ContentChildren,
            args: [CKButtonDirective]
        }] }); })();
export { CKGroupDirective };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2tncm91cC5kaXJlY3RpdmUuanMiLCJzb3VyY2VzIjpbIm5nOi9uZzItY2tlZGl0b3IvY2tncm91cC5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFvQixlQUFlLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRS9GLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBRXpEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBSUgsSUFBYSxnQkFBZ0IsR0FBN0IsTUFBYSxnQkFBZ0I7QUFBRyxJQU05QixrQkFBa0I7QUFDcEIsUUFBSSxzRkFBc0Y7QUFDMUYsUUFBSSxJQUFJLENBQUMsY0FBYyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztBQUN4RSxJQUFFLENBQUM7QUFDSCxJQUNTLFVBQVUsQ0FBQyxNQUF5QjtBQUM3QyxRQUFJLE1BQU0sQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0FBQ2xGLFFBQUksd0NBQXdDO0FBQzVDLFFBQUksSUFBSSxDQUFDLGNBQWMsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLEVBQUU7QUFDekMsWUFBTSxNQUFNLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQ2hDLFFBQUksQ0FBQyxDQUFDLENBQUM7QUFDUCxJQUFFLENBQUM7QUFDSCxDQUFDOzs7Ozs7O3FGQUFBO0FBakJVO0FBQ0osSUFESixLQUFLLEVBQUU7QUFBRTtBQUVMLDhDQUZpQjtBQUNiO0FBQ0wsSUFESCxLQUFLLEVBQUU7QUFBRTtBQUVYLGtEQUZ3QjtBQUNkO0FBQ1YsSUFERSxLQUFLLEVBQUU7QUFBRTtBQUNlLG9EQURHO0FBQ1E7QUFBcUIsSUFBeEQsZUFBZSxDQUFDLGlCQUFpQixDQUFDO0FBQUUsc0NBQWUsU0FBUztBQUFFLHdEQUFrQjtBQUp0RSxnQkFBZ0IsNEJBSDVCLFNBQVMsQ0FBQyxVQUNULFFBQVEsRUFBRTtRQUFTLE9BQ3BCLENBQUMsSUFDVztXQUFnQixDQWtCNUI7Ozs7Ozs7Ozs7OztvQkFDRDtBQUFDLFNBbkJZLGdCQUFnQjtBQUFJIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBJbnB1dCwgQWZ0ZXJDb250ZW50SW5pdCwgQ29udGVudENoaWxkcmVuLCBRdWVyeUxpc3QgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENLRWRpdG9yQ29tcG9uZW50IH0gZnJvbSAnLi9ja2VkaXRvci5jb21wb25lbnQnO1xuaW1wb3J0IHsgQ0tCdXR0b25EaXJlY3RpdmUgfSBmcm9tICcuL2NrYnV0dG9uLmRpcmVjdGl2ZSc7XG5cbi8qKlxuICogQ0tHcm91cCBjb21wb25lbnRcbiAqIFVzYWdlIDpcbiAqICA8Y2tlZGl0b3IgWyhuZ01vZGVsKV09XCJkYXRhXCIgW2NvbmZpZ109XCJ7Li4ufVwiIGRlYm91bmNlPVwiNTAwXCI+XG4gKiAgICAgIDxja2dyb3VwIFtuYW1lXT1cIidleGFtcGxlR3JvdXAyJ1wiIFtwcmV2aW91c109XCInMSdcIiBbc3ViZ3JvdXBPZl09XCInZXhhbXBsZUdyb3VwMSdcIj5cbiAqICAgICAgICAgIC5cbiAqICAgICAgICAgIC5cbiAqICAgICAgPC9ja2dyb3VwPlxuICogICA8L2NrZWRpdG9yPlxuICovXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdja2dyb3VwJyxcbn0pXG5leHBvcnQgY2xhc3MgQ0tHcm91cERpcmVjdGl2ZSBpbXBsZW1lbnRzIEFmdGVyQ29udGVudEluaXQge1xuICBASW5wdXQoKSBuYW1lOiBzdHJpbmc7XG4gIEBJbnB1dCgpIHByZXZpb3VzOiBhbnk7XG4gIEBJbnB1dCgpIHN1Ymdyb3VwT2Y6IHN0cmluZztcbiAgQENvbnRlbnRDaGlsZHJlbihDS0J1dHRvbkRpcmVjdGl2ZSkgdG9vbGJhckJ1dHRvbnM6IFF1ZXJ5TGlzdDxDS0J1dHRvbkRpcmVjdGl2ZT47XG5cbiAgbmdBZnRlckNvbnRlbnRJbml0KCkge1xuICAgIC8vIFJlY29uZmlndXJlIGVhY2ggYnV0dG9uJ3MgdG9vbGJhciBwcm9wZXJ0eSB3aXRoaW4gY2tncm91cCB0byBob2xkIGl0cyBwYXJlbnQncyBuYW1lXG4gICAgdGhpcy50b29sYmFyQnV0dG9ucy5mb3JFYWNoKGJ1dHRvbiA9PiAoYnV0dG9uLnRvb2xiYXIgPSB0aGlzLm5hbWUpKTtcbiAgfVxuXG4gIHB1YmxpYyBpbml0aWFsaXplKGVkaXRvcjogQ0tFZGl0b3JDb21wb25lbnQpIHtcbiAgICBlZGl0b3IuaW5zdGFuY2UudWkuYWRkVG9vbGJhckdyb3VwKHRoaXMubmFtZSwgdGhpcy5wcmV2aW91cywgdGhpcy5zdWJncm91cE9mKTtcbiAgICAvLyBJbml0aWFsaXplIGVhY2ggYnV0dG9uIHdpdGhpbiBja2dyb3VwXG4gICAgdGhpcy50b29sYmFyQnV0dG9ucy5mb3JFYWNoKGJ1dHRvbiA9PiB7XG4gICAgICBidXR0b24uaW5pdGlhbGl6ZShlZGl0b3IpO1xuICAgIH0pO1xuICB9XG59XG4iXX0=