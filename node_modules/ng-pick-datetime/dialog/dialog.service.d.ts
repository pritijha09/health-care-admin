import { InjectionToken, Injector, TemplateRef } from '@angular/core';
import { Location } from '@angular/common';
import { OwlDialogConfig } from './dialog-config.class';
import { OwlDialogRef } from './dialog-ref.class';
import { Observable, Subject } from 'rxjs';
import { Overlay, OverlayContainer, ScrollStrategy } from '@angular/cdk/overlay';
import { ComponentType } from '@angular/cdk/portal';
import * as ɵngcc0 from '@angular/core';
export declare const OWL_DIALOG_DATA: InjectionToken<any>;
export declare const OWL_DIALOG_SCROLL_STRATEGY: InjectionToken<() => ScrollStrategy>;
export declare function OWL_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay): () => ScrollStrategy;
export declare const OWL_DIALOG_SCROLL_STRATEGY_PROVIDER: {
    provide: InjectionToken<() => ScrollStrategy>;
    deps: (typeof Overlay)[];
    useFactory: typeof OWL_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY;
};
export declare const OWL_DIALOG_DEFAULT_OPTIONS: InjectionToken<OwlDialogConfig>;
export declare class OwlDialogService {
    private overlay;
    private injector;
    private location;
    private scrollStrategy;
    private defaultOptions;
    private parentDialog;
    private overlayContainer;
    private ariaHiddenElements;
    private _openDialogsAtThisLevel;
    private _afterOpenAtThisLevel;
    private _afterAllClosedAtThisLevel;
    readonly openDialogs: OwlDialogRef<any>[];
    readonly afterOpen: Subject<OwlDialogRef<any>>;
    readonly _afterAllClosed: any;
    afterAllClosed: Observable<void>;
    constructor(overlay: Overlay, injector: Injector, location: Location, scrollStrategy: () => ScrollStrategy, defaultOptions: OwlDialogConfig, parentDialog: OwlDialogService, overlayContainer: OverlayContainer);
    open<T>(componentOrTemplateRef: ComponentType<T> | TemplateRef<T>, config?: OwlDialogConfig): OwlDialogRef<any>;
    closeAll(): void;
    getDialogById(id: string): OwlDialogRef<any> | undefined;
    private attachDialogContent;
    private createInjector;
    private createOverlay;
    private attachDialogContainer;
    private getOverlayConfig;
    private removeOpenDialog;
    private hideNonDialogContentFromAssistiveTechnology;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<OwlDialogService, [null, null, { optional: true; }, null, { optional: true; }, { optional: true; skipSelf: true; }, null]>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<OwlDialogService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlhbG9nLnNlcnZpY2UuZC50cyIsInNvdXJjZXMiOlsiZGlhbG9nLnNlcnZpY2UuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0aW9uVG9rZW4sIEluamVjdG9yLCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTG9jYXRpb24gfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgT3dsRGlhbG9nQ29uZmlnIH0gZnJvbSAnLi9kaWFsb2ctY29uZmlnLmNsYXNzJztcbmltcG9ydCB7IE93bERpYWxvZ1JlZiB9IGZyb20gJy4vZGlhbG9nLXJlZi5jbGFzcyc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlLCBTdWJqZWN0IH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBPdmVybGF5LCBPdmVybGF5Q29udGFpbmVyLCBTY3JvbGxTdHJhdGVneSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9vdmVybGF5JztcbmltcG9ydCB7IENvbXBvbmVudFR5cGUgfSBmcm9tICdAYW5ndWxhci9jZGsvcG9ydGFsJztcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IE9XTF9ESUFMT0dfREFUQTogSW5qZWN0aW9uVG9rZW48YW55PjtcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IE9XTF9ESUFMT0dfU0NST0xMX1NUUkFURUdZOiBJbmplY3Rpb25Ub2tlbjwoKSA9PiBTY3JvbGxTdHJhdGVneT47XG5leHBvcnQgZGVjbGFyZSBmdW5jdGlvbiBPV0xfRElBTE9HX1NDUk9MTF9TVFJBVEVHWV9QUk9WSURFUl9GQUNUT1JZKG92ZXJsYXk6IE92ZXJsYXkpOiAoKSA9PiBTY3JvbGxTdHJhdGVneTtcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IE9XTF9ESUFMT0dfU0NST0xMX1NUUkFURUdZX1BST1ZJREVSOiB7XG4gICAgcHJvdmlkZTogSW5qZWN0aW9uVG9rZW48KCkgPT4gU2Nyb2xsU3RyYXRlZ3k+O1xuICAgIGRlcHM6ICh0eXBlb2YgT3ZlcmxheSlbXTtcbiAgICB1c2VGYWN0b3J5OiB0eXBlb2YgT1dMX0RJQUxPR19TQ1JPTExfU1RSQVRFR1lfUFJPVklERVJfRkFDVE9SWTtcbn07XG5leHBvcnQgZGVjbGFyZSBjb25zdCBPV0xfRElBTE9HX0RFRkFVTFRfT1BUSU9OUzogSW5qZWN0aW9uVG9rZW48T3dsRGlhbG9nQ29uZmlnPjtcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE93bERpYWxvZ1NlcnZpY2Uge1xuICAgIHByaXZhdGUgb3ZlcmxheTtcbiAgICBwcml2YXRlIGluamVjdG9yO1xuICAgIHByaXZhdGUgbG9jYXRpb247XG4gICAgcHJpdmF0ZSBzY3JvbGxTdHJhdGVneTtcbiAgICBwcml2YXRlIGRlZmF1bHRPcHRpb25zO1xuICAgIHByaXZhdGUgcGFyZW50RGlhbG9nO1xuICAgIHByaXZhdGUgb3ZlcmxheUNvbnRhaW5lcjtcbiAgICBwcml2YXRlIGFyaWFIaWRkZW5FbGVtZW50cztcbiAgICBwcml2YXRlIF9vcGVuRGlhbG9nc0F0VGhpc0xldmVsO1xuICAgIHByaXZhdGUgX2FmdGVyT3BlbkF0VGhpc0xldmVsO1xuICAgIHByaXZhdGUgX2FmdGVyQWxsQ2xvc2VkQXRUaGlzTGV2ZWw7XG4gICAgcmVhZG9ubHkgb3BlbkRpYWxvZ3M6IE93bERpYWxvZ1JlZjxhbnk+W107XG4gICAgcmVhZG9ubHkgYWZ0ZXJPcGVuOiBTdWJqZWN0PE93bERpYWxvZ1JlZjxhbnk+PjtcbiAgICByZWFkb25seSBfYWZ0ZXJBbGxDbG9zZWQ6IGFueTtcbiAgICBhZnRlckFsbENsb3NlZDogT2JzZXJ2YWJsZTx2b2lkPjtcbiAgICBjb25zdHJ1Y3RvcihvdmVybGF5OiBPdmVybGF5LCBpbmplY3RvcjogSW5qZWN0b3IsIGxvY2F0aW9uOiBMb2NhdGlvbiwgc2Nyb2xsU3RyYXRlZ3k6ICgpID0+IFNjcm9sbFN0cmF0ZWd5LCBkZWZhdWx0T3B0aW9uczogT3dsRGlhbG9nQ29uZmlnLCBwYXJlbnREaWFsb2c6IE93bERpYWxvZ1NlcnZpY2UsIG92ZXJsYXlDb250YWluZXI6IE92ZXJsYXlDb250YWluZXIpO1xuICAgIG9wZW48VD4oY29tcG9uZW50T3JUZW1wbGF0ZVJlZjogQ29tcG9uZW50VHlwZTxUPiB8IFRlbXBsYXRlUmVmPFQ+LCBjb25maWc/OiBPd2xEaWFsb2dDb25maWcpOiBPd2xEaWFsb2dSZWY8YW55PjtcbiAgICBjbG9zZUFsbCgpOiB2b2lkO1xuICAgIGdldERpYWxvZ0J5SWQoaWQ6IHN0cmluZyk6IE93bERpYWxvZ1JlZjxhbnk+IHwgdW5kZWZpbmVkO1xuICAgIHByaXZhdGUgYXR0YWNoRGlhbG9nQ29udGVudDtcbiAgICBwcml2YXRlIGNyZWF0ZUluamVjdG9yO1xuICAgIHByaXZhdGUgY3JlYXRlT3ZlcmxheTtcbiAgICBwcml2YXRlIGF0dGFjaERpYWxvZ0NvbnRhaW5lcjtcbiAgICBwcml2YXRlIGdldE92ZXJsYXlDb25maWc7XG4gICAgcHJpdmF0ZSByZW1vdmVPcGVuRGlhbG9nO1xuICAgIHByaXZhdGUgaGlkZU5vbkRpYWxvZ0NvbnRlbnRGcm9tQXNzaXN0aXZlVGVjaG5vbG9neTtcbn1cbiJdfQ==