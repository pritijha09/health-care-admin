import { ElementRef, EventEmitter, NgZone, OnInit } from '@angular/core';
import { SelectMode } from './date-time.class';
import * as ɵngcc0 from '@angular/core';
export declare class CalendarCell {
    value: number;
    displayValue: string;
    ariaLabel: string;
    enabled: boolean;
    out: boolean;
    cellClass: string;
    constructor(value: number, displayValue: string, ariaLabel: string, enabled: boolean, out?: boolean, cellClass?: string);
}
export declare class OwlCalendarBodyComponent implements OnInit {
    private elmRef;
    private ngZone;
    activeCell: number;
    rows: CalendarCell[][];
    numCols: number;
    cellRatio: number;
    todayValue: number;
    selectedValues: number[];
    selectMode: SelectMode;
    readonly select: EventEmitter<CalendarCell>;
    readonly owlDTCalendarBodyClass: boolean;
    readonly isInSingleMode: boolean;
    readonly isInRangeMode: boolean;
    constructor(elmRef: ElementRef, ngZone: NgZone);
    ngOnInit(): void;
    selectCell(cell: CalendarCell): void;
    isActiveCell(rowIndex: number, colIndex: number): boolean;
    isSelected(value: number): boolean;
    isInRange(value: number): boolean;
    isRangeFrom(value: number): boolean;
    isRangeTo(value: number): boolean;
    focusActiveCell(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<OwlCalendarBodyComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<OwlCalendarBodyComponent, "[owl-date-time-calendar-body]", ["owlDateTimeCalendarBody"], { "activeCell": "activeCell"; "numCols": "numCols"; "cellRatio": "cellRatio"; "rows": "rows"; "todayValue": "todayValue"; "selectedValues": "selectedValues"; "selectMode": "selectMode"; }, { "select": "select"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FsZW5kYXItYm9keS5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsiY2FsZW5kYXItYm9keS5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyLCBOZ1pvbmUsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgU2VsZWN0TW9kZSB9IGZyb20gJy4vZGF0ZS10aW1lLmNsYXNzJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIENhbGVuZGFyQ2VsbCB7XG4gICAgdmFsdWU6IG51bWJlcjtcbiAgICBkaXNwbGF5VmFsdWU6IHN0cmluZztcbiAgICBhcmlhTGFiZWw6IHN0cmluZztcbiAgICBlbmFibGVkOiBib29sZWFuO1xuICAgIG91dDogYm9vbGVhbjtcbiAgICBjZWxsQ2xhc3M6IHN0cmluZztcbiAgICBjb25zdHJ1Y3Rvcih2YWx1ZTogbnVtYmVyLCBkaXNwbGF5VmFsdWU6IHN0cmluZywgYXJpYUxhYmVsOiBzdHJpbmcsIGVuYWJsZWQ6IGJvb2xlYW4sIG91dD86IGJvb2xlYW4sIGNlbGxDbGFzcz86IHN0cmluZyk7XG59XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBPd2xDYWxlbmRhckJvZHlDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICAgIHByaXZhdGUgZWxtUmVmO1xuICAgIHByaXZhdGUgbmdab25lO1xuICAgIGFjdGl2ZUNlbGw6IG51bWJlcjtcbiAgICByb3dzOiBDYWxlbmRhckNlbGxbXVtdO1xuICAgIG51bUNvbHM6IG51bWJlcjtcbiAgICBjZWxsUmF0aW86IG51bWJlcjtcbiAgICB0b2RheVZhbHVlOiBudW1iZXI7XG4gICAgc2VsZWN0ZWRWYWx1ZXM6IG51bWJlcltdO1xuICAgIHNlbGVjdE1vZGU6IFNlbGVjdE1vZGU7XG4gICAgcmVhZG9ubHkgc2VsZWN0OiBFdmVudEVtaXR0ZXI8Q2FsZW5kYXJDZWxsPjtcbiAgICByZWFkb25seSBvd2xEVENhbGVuZGFyQm9keUNsYXNzOiBib29sZWFuO1xuICAgIHJlYWRvbmx5IGlzSW5TaW5nbGVNb2RlOiBib29sZWFuO1xuICAgIHJlYWRvbmx5IGlzSW5SYW5nZU1vZGU6IGJvb2xlYW47XG4gICAgY29uc3RydWN0b3IoZWxtUmVmOiBFbGVtZW50UmVmLCBuZ1pvbmU6IE5nWm9uZSk7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBzZWxlY3RDZWxsKGNlbGw6IENhbGVuZGFyQ2VsbCk6IHZvaWQ7XG4gICAgaXNBY3RpdmVDZWxsKHJvd0luZGV4OiBudW1iZXIsIGNvbEluZGV4OiBudW1iZXIpOiBib29sZWFuO1xuICAgIGlzU2VsZWN0ZWQodmFsdWU6IG51bWJlcik6IGJvb2xlYW47XG4gICAgaXNJblJhbmdlKHZhbHVlOiBudW1iZXIpOiBib29sZWFuO1xuICAgIGlzUmFuZ2VGcm9tKHZhbHVlOiBudW1iZXIpOiBib29sZWFuO1xuICAgIGlzUmFuZ2VUbyh2YWx1ZTogbnVtYmVyKTogYm9vbGVhbjtcbiAgICBmb2N1c0FjdGl2ZUNlbGwoKTogdm9pZDtcbn1cbiJdfQ==