{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/_guards/auth.guard.ts","./src/app/_guards/index.ts","./src/app/_helpers/jwt.interceptor.ts","./src/app/_helpers/must-match.validator.ts","./src/app/_interceptor/http-header.interceptor.ts","./src/app/_model/index.ts","./src/app/_model/role.ts","./src/app/_model/user.ts","./src/app/_models/common-model.ts","./src/app/_services/authentication.service.ts","./src/app/_services/coreHttpServices/core-http.service.ts","./src/app/_services/header-title.service.ts","./src/app/_services/index.ts","./src/app/_services/loaderService/loader.service.ts","./src/app/_services/request.service.ts","./src/app/admin/admin-home/admin-home.component.ts","./src/app/admin/admin-home/admin-home.component.html","./src/app/admin/admin-routing.module.ts","./src/app/admin/admin.module.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/commonn/_pipe/grd-filter.pipe.ts","./src/app/commonn/commonn.component.ts","./src/app/commonn/commonn.component.html","./src/app/commonn/commonn.module.ts","./src/app/commonn/commoonn-routing.module.ts","./src/app/commonn/home/home.component.ts","./src/app/commonn/home/home.component.html","./src/app/commonn/hub-management/create-hub/create-hub.component.ts","./src/app/commonn/hub-management/create-hub/create-hub.component.html","./src/app/commonn/hub-management/view-hub/view-hub.component.ts","./src/app/commonn/hub-management/view-hub/view-hub.component.html","./src/app/commonn/loader/loader.component.ts","./src/app/commonn/loader/loader.component.html","./src/app/containers/default-layout/default-layout.component.ts","./src/app/containers/default-layout/default-layout.component.html","./src/app/containers/default-layout/index.ts","./src/app/containers/index.ts","./src/app/layout/breadcrumb/breadcrumb.component.ts","./src/app/layout/breadcrumb/breadcrumb.component.html","./src/app/layout/footer/footer.component.ts","./src/app/layout/footer/footer.component.html","./src/app/layout/header/header.component.ts","./src/app/layout/header/header.component.html","./src/app/layout/login/login.component.ts","./src/app/layout/login/login.component.html","./src/app/layout/register/register.component.ts","./src/app/layout/register/register.component.html","./src/app/layout/sidebar/sidebar.component.ts","./src/app/layout/sidebar/sidebar.component.html","./src/app/material-design/material-design.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAA2C;;;;AAOpC,MAAM,SAAS;IACpB;;;;;MAKE;IACH,YAAoB,MAAc,EAAU,sBAA6C;QAArE,WAAM,GAAN,MAAM,CAAQ;QAAU,2BAAsB,GAAtB,sBAAsB,CAAuB;IAAE,CAAC;IAE5F,WAAW,CAAC,KAA6B,EAAE,KAA0B;QACnE,MAAM,WAAW,GAAG,IAAI,CAAC,sBAAsB,CAAC,gBAAgB,CAAC;QAEjE,IAAI,WAAW,EAAE;YACf,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;gBACzE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACjC,OAAO,KAAK,CAAC;aACd;YAEF,wCAAwC;YACvC,OAAO,IAAI,CAAC;SACb;QAED,8DAA8D;QAC9D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,WAAW,EAAE,EAAE,SAAS,EAAE,KAAK,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QAC5E,OAAO,KAAK,CAAC;IACf,CAAC;;kEAzBW,SAAS;4FAAT,SAAS,WAAT,SAAS,mBAFR,MAAM;6FAEP,SAAS;cAHrB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;;EAEE;AAC2B;;;;;;;;;;;;;ACH7B;AAAA;AAAA;AAAA;AAA2C;;;AAMpC,MAAM,cAAc;IACzB,0CAA0C;IAC1C,YAAoB,sBAA6C;QAA7C,2BAAsB,GAAtB,sBAAsB,CAAuB;IAAG,CAAC;IACrE,SAAS,CAAC,OAAyB,EAAE,IAAiB;QACpD,uDAAuD;QACvD,IAAI,WAAW,GAAG,IAAI,CAAC,sBAAsB,CAAC,gBAAgB,CAAC;QAC/D,IAAI,WAAW,IAAI,WAAW,CAAC,KAAK,EAAE;YACpC,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;gBACtB,UAAU,EAAE;oBACV,aAAa,EAAE,UAAU,WAAW,CAAC,KAAK,EAAE;iBAC7C;aACF,CAAC,CAAC;SACJ;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAC9B,CAAC;;4EAdU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBADF,MAAM;6FAClB,cAAc;cAD1B,wDAAU;eAAC,EAAC,UAAU,EAAE,MAAM,EAAC;;;;;;;;;;;;;;ACHhC;AAAA;AAAA,kDAAkD;AAC3C,SAAS,SAAS,CAAC,WAAmB,EAAE,mBAA2B;IACxE,OAAO,CAAC,SAAoB,EAAE,EAAE;QAC9B,MAAM,OAAO,GAAG,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAChD,MAAM,eAAe,GAAG,SAAS,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC;QAEhE,IAAI,eAAe,CAAC,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,SAAS,EAAE;YAC/D,gFAAgF;YAChF,OAAO;SACR;QAED,mDAAmD;QACnD,IAAI,OAAO,CAAC,KAAK,KAAK,eAAe,CAAC,KAAK,EAAE;YAC3C,eAAe,CAAC,SAAS,CAAC,EAAC,SAAS,EAAE,IAAI,EAAC,CAAC,CAAC;SAC9C;aAAM;YACL,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;SACjC;IACH,CAAC,CAAC;AACJ,CAAC;;;;;;;;;;;;;ACpBD;AAAA;AAAA;AAAA;AAAuG;AAC9D;;AAKlC,MAAM,4BAA4B;IAEvC,SAAS,CAAC,OAAyB,EAAE,IAAiB;QACtD,IAAG,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,EAAC;YACnC,IAAI,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;YACpE,IAAG,WAAW,CAAC,KAAK,EAAE;gBACxB,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;oBAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;wBACvB,cAAc,EAAE,kBAAkB;wBAClC,aAAa,EAAE,UAAU,WAAW,CAAC,KAAK,EAAE;qBAC5C,CAAC;iBACH,CAAC,CAAC;aACL;SACF;aAAM;YACL,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;gBACpB,OAAO,EAAE,IAAI,gEAAW,CAAC;oBACvB,cAAc,EAAE,kBAAkB;iBAClC,CAAC;aACH,CAAC,CAAC;SACP;QAEE,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAC5B,CAAC;;wGAtBO,4BAA4B;+GAA5B,4BAA4B,WAA5B,4BAA4B;6FAA5B,4BAA4B;cADxC,wDAAU;;;;;;;;;;;;;;ACLX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;GAEG;AACoB;AACA;;;;;;;;;;;;;ACJvB;AAAA;AAAA,IAAY,IAKX;AALD,WAAY,IAAI;IACd,uBAAmB;IACnB,+BAAyB;IACzB,6BAAsB;IACtB,qBAAkB;AACpB,CAAC,EALW,IAAI,KAAJ,IAAI,QAKf;;;;;;;;;;;;;ACHD;AAAA;AAAO,MAAM,IAAI;CAYd;;;;;;;;;;;;;ACdH;AAAA;AAAA;AAAO,MAAM,cAAc;CAY1B;AAEM,MAAM,YAAY;CAkBxB;;;;;;;;;;;;;AChCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACM;AAEU;AAGxB;;;;AACnC,kCAAkC;AAK3B,MAAM,qBAAqB;IAKhC;IACE,0CAA0C;IAClC,KAAiB,EAAU,MAAc;QAAzC,UAAK,GAAL,KAAK,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;QAJ3C,YAAO,GAAG,qEAAW,CAAC,MAAM,CAAC;QAKjC,IAAI,CAAC,kBAAkB,GAAG,IAAI,oDAAe,CAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;QACrG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;IAC7D,CAAC;IAED,IAAW,gBAAgB;QAC1B,OAAO,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;IACvC,CAAC;IAED,KAAK,CAAC,QAAQ;QACZ,qHAAqH;QACrH,MAAM,IAAI,GAAG,EAAC,KAAK,EAAE,QAAQ,CAAC,KAAK,EAAG,QAAQ,EAAE,QAAQ,CAAC,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAG,IAAI,EAAC,CAAC;QAElG,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAM,IAAI,CAAC,OAAO,GAAG,aAAa,EAAE,IAAI,CAAC;aAC5D,IAAI,CAAC,0DAAG,CAAC,IAAI,CAAC,EAAE;YACf,0DAA0D;YAC1D,mCAAmC;YACnC,IAAI,IAAI,IAAI,IAAI,CAAC,QAAQ,KAAK,GAAG,EAAE;gBACjC,kGAAkG;gBAClG,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gBACjE,oCAAoC;gBACpC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aAC3C;YAED,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAED,cAAc;IACd,mDAAmD;IACnD,IAAI;IAEJ,MAAM;QACJ,iDAAiD;QACjD,YAAY,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;QACvC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACrC,CAAC;;0FA5CY,qBAAqB;wGAArB,qBAAqB,WAArB,qBAAqB,mBAFpB,MAAM;6FAEP,qBAAqB;cAHjC,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAGgB;;;AAEpD,MAAM,WAAW;CAGvB;AAIM,MAAM,eAAe;IAE1B,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QACxC,IAAI,CAAC,UAAU,GAAG,wEAAW,CAAC,MAAM,CAAC;IACtC,CAAC;IAEA;;;KAGC;IAEH,GAAG,CAAC,OAAe;QACjB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,UAAU,GAAG,OAAO,EAAE,CAAC,CAAC;IAC5D,CAAC;IAEC;;;;;IAKA;IACH,GAAG,CAAC,OAAe,EAAE,IAAS;QAC3B,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,UAAU,GAAG,OAAO,EAAE,EAAE,IAAI,CAAC,CAAC;IACpE,CAAC;IAGE;;;;;IAKA;IACH,IAAI,CAAC,OAAe,EAAE,IAAS;QAC7B,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,GAAG,OAAO,EAAE,EAAE,IAAI,CAAC,CAAC;IACpE,CAAC;;8EAlCU,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;6FAEP,eAAe;cAH3B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACXD;AAAA;AAAA;AAAA;AAA2C;AACN;;AAK9B,MAAM,kBAAkB;IAG7B;QADF,UAAK,GAAG,IAAI,oDAAe,CAAC,eAAe,CAAC,CAAC;IAC3B,CAAC;IAEjB,QAAQ,CAAC,KAAa;QACpB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACzB,CAAC;;oFAPU,kBAAkB;qGAAlB,kBAAkB,WAAlB,kBAAkB,mBAFf,MAAM;6FAET,kBAAkB;cAH9B,wDAAU;eAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;GAEG;AACsC;AACzC,qCAAqC;AACE;;;;;;;;;;;;;ACLvC;AAAA;AAAA;AAAA;AAA2C;AACZ;;AAIxB,MAAM,aAAa;IAH1B;QAIE,cAAS,GAAG,IAAI,4CAAO,EAAW,CAAC;KAWpC;IATC,8BAA8B;IAC9B,IAAI;QACA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAED,8BAA8B;IAC9B,IAAI;QACA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC/B,CAAC;;0EAXU,aAAa;gGAAb,aAAa,WAAb,aAAa,mBAFZ,MAAM;6FAEP,aAAa;cAHzB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAIgB;AAC5B;;;;AAKxB,MAAM,cAAc;IAIzB,yCAAyC;IACzC,YAAoB,KAAiB,EAAU,KAAa;QAAxC,UAAK,GAAL,KAAK,CAAY;QAAU,UAAK,GAAL,KAAK,CAAQ;QAHtD,YAAO,GAAG,qEAAW,CAAC,MAAM,CAAC;IAG6B,CAAC;IAEjE,8CAA8C;IAC9C,gEAAgE;IAChE,IAAI;IAEJ,iBAAiB,CAAC,KAAa;QAC7B,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,GAAG,KAAK,EAAE,EAAE,CAAC,CAAC;QACtD,2CAA2C;IAC7C,CAAC;IAED,kBAAkB,CAAC,KAAK,EAAE,KAAK;QAC7B,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAM,IAAI,CAAC,OAAO,GAAG,GAAG,GAAG,KAAK,EAAE,KAAK,CAAC,CAAC;IACjE,CAAC;IAED,iBAAiB,CAAC,IAAI,EAAE,OAAO;IAC/B,CAAC;IAED,UAAU,CAAC,IAAI,EAAE,OAAO;QACtB,kDAAI,CAAC,IAAI,CAAC;YACR,IAAI,EAAE,IAAI;YACV,KAAK,EAAE,EAAE;YACT,IAAI,EAAE,OAAO;YACb,KAAK,EAAE,IAAI;SACZ,CAAC,CAAC;IACL,CAAC;;4EA9BU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;6FAEP,cAAc;cAH1B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;;IC0ChC,qEACE;IAAA,qEAAI;IAAA,uDAAqB;IAAA,4DAAK;IAC9B,qEAAI;IAAA,uDAA6C;IAAA,4DAAK;IACtD,qEAAI;IAAA,uDAAyC;IAAA,4DAAK;IAClD,yEACE;IAAA,oEAAG;IAAA,uDAA6B;;IAAA,4DAAI;IAAA,4DAAK;IAC7C,4DAAK;;;IALC,0DAAqB;IAArB,mFAAqB;IACrB,0DAA6C;IAA7C,uHAA6C;IAC7C,0DAAyC;IAAzC,mHAAyC;IACzC,0DAA+G;IAA/G,0OAA+G;IAC9G,0DAA6B;IAA7B,iJAA6B;;;IA0BpC,qEACE;IAAA,qEACE;IAAA,0EACE;IAAA,qEACA;IAAA,2EACE;IAAA,wEAAY;IAAA,qEAAU;IAAA,4DAAI;IAC1B,2EAAqC;IAAA,qEAAU;IAAA,4DAAO;IACxD,4DAAO;IACP,2EAA0B;IAAA,wNAGN;IAAA,yEAAyC;IAAA,gEAAI;IAAA,4DAAI;IAAA,4DAAO;IAC9E,4DAAM;IACR,4DAAK;IACP,4DAAK;;ADzEhB,MAAM,kBAAkB;IAY7B,YACU,kBAAsC,EACtC,KAAqB,EACrB,qBAA4C,EAC5C,aAA4B,EAC5B,MAAc,EACd,OAA0B,EAC1B,cAA8B;QAN9B,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,UAAK,GAAL,KAAK,CAAgB;QACrB,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,kBAAa,GAAb,aAAa,CAAe;QAC5B,WAAM,GAAN,MAAM,CAAQ;QACd,YAAO,GAAP,OAAO,CAAmB;QAC1B,mBAAc,GAAd,cAAc,CAAgB;QAjBxC,iBAAY,GAAQ,EAAE,CAAC;QACvB,WAAM,GAAG,EAAE,CAAC;QAEZ,iBAAY,GAAQ,EAAE,CAAC;IAiBvB,CAAC;IAED,QAAQ;QACN,sCAAsC;QACpC,0BAA0B;QAC1B,sCAAsC;QACxC,MAAM;QACN,2DAA2D;QAE3D,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,eAAe;QACb,wBAAwB;QACxB,mCAAmC;QACnC,IAAI,CAAC,MAAM,GAAG,8BAA8B,CAAC;QAC7C,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QAEpB,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC;aAC/C,SAAS,CACR,CAAC,QAAa,EAAE,EAAE;YAChB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,IAAI,QAAQ,CAAC,QAAQ,KAAK,GAAG,EAAE;gBAC7B,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,MAAM,CAAC;gBACpC,kCAAkC;aACnC;iBAAM;gBACL,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW,CAAC;gBACxC,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;gBAChC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;aAChE;QACH,CAAC,EACD,CAAC,KAAU,EAAE,EAAE;YACb,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,sBAAsB;YACtB,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,OAAO,EAAE,sBAAsB,CAAC,CAAC;QAClE,CAAC,CACF,CAAC;IACN,CAAC;IAED,OAAO,CAAC,IAAS;QACf,YAAY,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QACpC,YAAY,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QAExC,IAAI,QAAa,CAAC;QAClB,QAAQ,GAAG,IAAI,CAAC,qBAAqB,CAAC,gBAAgB,CAAC;QACvD,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAEvD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,GAAG,2BAA2B,CAAC,CAAC,CAAC;IACjE,CAAC;;oFAtEU,kBAAkB;kGAAlB,kBAAkB;QCb3B,6EACE;QAAA,iFAKE;QAAA,uEAA6D;QAAA,qEAAU;QAAA,4DAAI;QAC7E,4DAAc;QACd,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,qEAAI;QAAA,uEAAY;QAAA,4DAAK;QAErB,oEAAG;QAAA,kPACwE;QAAA,4DAAI;QACjF,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,0EACE;QAAA,8EAEI;QAAA,0EACE;QAAA,0EACE;QAAA,yEAAsB;QAAA,+EAAmB;QAAA,4DAAK;QAC9C,2EACE;QAAA,8EAEE;QADuC,2IAAS,YAAQ,WAAW,CAAC,IAAC;QACrE,gFAAmB;QAAA,4DAAS;QAChC,4DAAM;QACR,4DAAM;QACN,2EACE;QAAA,6EACE;QAAA,yEACA;QAAA,0EACE;QAAA,sEAAI;QAAA,qEAAS;QAAA,4DAAK;QAClB,sEAAI;QAAA,2EAAe;QAAA,4DAAK;QACxB,sEAAI;QAAA,yEAAa;QAAA,4DAAK;QACtB,sEAAI;QAAA,kEAAM;QAAA,4DAAK;QACjB,4DAAK;QACL,4DAAQ;QACR,yEACA;QAAA,iHACE;QAMF,4DAAQ;QACV,4DAAQ;QACV,4DAAM;QAEN,sEAEM;QAER,4DAAM;QACV,4DAAU;QAEV,8EACI;QAAA,0EACE;QAAA,0EACE;QAAA,yEAAsB;QAAA,2EAAe;QAAA,4DAAK;QAC1C,sEAIM;QACR,4DAAM;QACN,2EACE;QAAA,6EACE;QAAA,yEACA;QAAA,gHACE;QAeF,4DAAQ;QACV,4DAAQ;QACV,4DAAM;QAEN,sEAEM;QAER,4DAAM;QACV,4DAAU;QACZ,4DAAM;QAIR,4DAAU;;QA7DQ,2DAAiC;QAAjC,qFAAiC;QA+BjC,2DAAiC;QAAjC,qFAAiC;;6FD3D1C,kBAAkB;cAN9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AEZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2F;AAClD;AACc;AAIQ;AACgC;;;AAG/F,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,IAAI,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE;QACvB,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,0EAAa;gBAClC,IAAI,EAAE;oBACJ,KAAK,EAAE,WAAW;oBAClB,UAAU,EAAE,WAAW;iBACtB;aACJ;YAED;gBACE,IAAI,EAAE,MAAM;gBACZ,SAAS,EAAE,0EAAa;gBACxB,4BAA4B;gBAC5B,IAAI,EAAE;oBACJ,uBAAuB;oBACvB,KAAK,EAAE,WAAW;oBAClB,UAAU,EAAE,WAAW;iBACxB;aACF;YAGH,uEAAuE;YACvE;gBACE,IAAI,EAAE,YAAY;gBAClB,SAAS,EAAE,0GAAkB;gBAC7B,4BAA4B;gBAC5B,IAAI,EAAE;oBACJ,uBAAuB;oBACvB,KAAK,EAAE,YAAY;oBACnB,UAAU,EAAE,YAAY;iBACzB;aACF;YACD;gBACE,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,oGAAgB;gBAC3B,4BAA4B;gBAC5B,IAAI,EAAE;oBACJ,uBAAuB;oBACvB,KAAK,EAAE,UAAU;oBACjB,UAAU,EAAE,UAAU;iBACvB;aACF;SAOA;KACF;CACF,CAAC;AAMK,MAAM,kBAAkB;;iGAAlB,kBAAkB;8JAAlB,kBAAkB,kBAHpB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAChC,4DAAY;mIAET,kBAAkB,uFAFrB,4DAAY;6FAET,kBAAkB;cAJ9B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBAC1C,OAAO,EAAE,CAAC,4DAAY,CAAC;aACtB;;;;;;;;;;;;;;ACrED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AACK;AACA;AACa;AACW;AACb;AACM;AACb;AAC8B;;AAEjF,wFAAwF;AAoBjF,MAAM,WAAW;IACtB;QACE,wBAAwB;IAC1B,CAAC;;0FAHU,WAAW;gJAAX,WAAW,kBAZb;YACP,4DAAgB;YAChB,4DAAY;YACZ,wEAAkB;YAClB,qEAAa;YACb,kEAAmB;YACnB,0DAAW;YACX,4FAAoB;SAGrB;mIAEU,WAAW,mBAfpB,mFAAkB,aAIlB,4DAAgB;QAChB,4DAAY;QACZ,wEAAkB;QAClB,qEAAa;QACb,kEAAmB;QACnB,0DAAW;QACX,4FAAoB;6FAKX,WAAW;cAjBvB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,mFAAkB;iBAEnB;gBACD,OAAO,EAAE;oBACP,4DAAgB;oBAChB,4DAAY;oBACZ,wEAAkB;oBAClB,qEAAa;oBACb,kEAAmB;oBACnB,0DAAW;oBACX,4FAAoB;iBAGrB;aACF;;;;;;;;;;;;;;AC5BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACS;AACV;AAChB;AACN;AACuC;;;AACvE,6FAA6F;AAG7F,gBAAgB;AAChB,iBAAiB;AACjB,iBAAiB;AACjB,0DAA0D;AAC1D,oBAAoB;AACpB,qBAAqB;AACrB,0BAA0B;AAC1B,mBAAmB;AACnB,qCAAqC;AACrC,uBAAuB;AACvB,IAAI;AACJ,2BAA2B;AAE3B,MAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAC;IACnD,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,4EAAc,EAAG,IAAI,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,EAAC;IACtE,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,qFAAiB,EAAG,IAAI,EAAE,EAAE,KAAK,EAAE,UAAU,EAAE,EAAC;IAC/E;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,kEAAsB;QACjC,IAAI,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE;QACvB,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,OAAO;gBACb,YAAY,EAAE,GAAG,EAAE,CAAC,oIAA8B,CAAC,IAAI,CAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,CAAE;gBAC7E,mDAAmD;gBACnD,4BAA4B;gBAC5B,IAAI,EAAE;gBACJ,wBAAwB;iBACzB;aACF;YACD,IAAI;YACJ,uBAAuB;YACvB,6FAA6F;YAC7F,oEAAoE;YACpE,8BAA8B;YAC9B,YAAY;YACZ,gCAAgC;YAChC,MAAM;YACN,KAAK;YAEL;gBACE,IAAI,EAAE,aAAa;gBACnB,YAAY,EAAE,GAAG,EAAE,CAAC,4IAAkC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC;gBACjF,WAAW,EAAE,CAAC,iDAAS,CAAC;gBACxB,IAAI,EAAE;oBACJ,KAAK,EAAE,CAAE,2CAAI,CAAC,KAAK,EAAE,2CAAI,CAAC,SAAS,CAAE;iBACtC;aACF;SAGF;KACF;IACD,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE;CACrC,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,EAAE,EAAC,aAAa,EAAE,KAAK,EAAC,CAAC,CAAC;QACrD,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,EAAE,EAAC,aAAa,EAAE,KAAK,EAAC,CAAC,CAAC;gBAC/D,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACtED;AAAA;AAAA;AAAA;AAA0C;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,KAAK,CAAC;KACf;;wEAFY,YAAY;4FAAZ,YAAY;QCNzB,2EACgB;;6FDKH,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+D;AACL;AACjB;AACsC;AAC/E,+EAA+E;AACf;AAChE,kDAAkD;AAEM;AACT;AAC4B;AACL;AACH;AACA;AACb;AACH;AACnD,kEAAkE;AACT;AACO;AACe;AACnB;AAEK;AACjE,6DAA6D;AACJ;AACgB;AACtB;AACI;AACA;AACI;AAGS;AACrB;AACuC;;AARnC,CAAC;AAYpD,MAAM,cAAc,GAAG;IACrB,mEAAsB;CACvB,CAAC;AAwDK,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBATT;QACT,EAAE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,wEAAc,EAAE,KAAK,EAAE,IAAI,EAAE;QACrE,EAAC,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,kGAA4B,EAAE,KAAK,EAAE,IAAI,EAAC;KAIlF,YAtCQ;YACP,YAAY;YACZ,uEAAa;YACb,4FAAuB;YACvB,wBAAwB;YACxB,0DAAW;YACX,oEAAgB;YAChB,gEAAW;YACX,6DAAgB;YACjB,YAAY;YACX,mBAAmB;YACnB,sEAAa;YACb,qEAAgB;YAChB,+EAAsB;YACtB,uEAAgB;YAChB,kEAAmB;YACnB,0DAAW;YACX,mEAAmB;YACnB,uEAAc;YACd,qEAAa;YACb,4EAAiB;YACjB,yEAAe;SAGhB;QAEC,uEAAc;QACd,qEAAa;QACb,4EAAiB;QACjB,yEAAe;mIAYN,SAAS,mBApDlB,2DAAY;QALd,mEAAsB;QAOpB,kFAAgB;QAChB,gFAAe;QACf,+EAAe;QACf,mEAAsB;QACtB,6EAAc;QACd,4FAAmB;QACnB,sFAAiB;QACjB,iFAAe;QAGf,YAAY;QACZ,uEAAa;QACb,4FAAuB;QACvB,wBAAwB;QACxB,0DAAW;QACX,oEAAgB;QAChB,gEAAW;QACX,6DAAgB;QACjB,YAAY;QACX,mBAAmB;QACnB,sEAAa;QACb,qEAAgB;QAChB,+EAAsB;QACtB,uEAAgB;QAChB,kEAAmB;QACnB,0DAAW;QACX,mEAAmB;QACnB,uEAAc;QACd,qEAAa;QACb,4EAAiB;QACjB,yEAAe,aAKf,uEAAc;QACd,qEAAa;QACb,4EAAiB;QACjB,yEAAe;6FAYN,SAAS;cAtDrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,GAAG,cAAc;oBACjB,kFAAgB;oBAChB,gFAAe;oBACf,+EAAe;oBACf,mEAAsB;oBACtB,6EAAc;oBACd,4FAAmB;oBACnB,sFAAiB;oBACjB,iFAAe;iBAChB;gBACD,OAAO,EAAE;oBACP,YAAY;oBACZ,uEAAa;oBACb,4FAAuB;oBACvB,wBAAwB;oBACxB,0DAAW;oBACX,oEAAgB;oBAChB,gEAAW;oBACX,6DAAgB;oBACjB,YAAY;oBACX,mBAAmB;oBACnB,sEAAa;oBACb,qEAAgB;oBAChB,+EAAsB;oBACtB,uEAAgB;oBAChB,kEAAmB;oBACnB,0DAAW;oBACX,mEAAmB;oBACnB,uEAAc;oBACd,qEAAa;oBACb,4EAAiB;oBACjB,yEAAe;iBAGhB;gBACD,OAAO,EAAE;oBACP,uEAAc;oBACd,qEAAa;oBACb,4EAAiB;oBACjB,yEAAe;iBAChB;gBAED,SAAS,EAAE;oBACT,EAAE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,wEAAc,EAAE,KAAK,EAAE,IAAI,EAAE;oBACrE,EAAC,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,kGAA4B,EAAE,KAAK,EAAE,IAAI,EAAC;iBAIlF;gBACD,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC/FD;AAAA;AAAA;AAAoD;;AAM7C,MAAM,aAAa;IACxB,SAAS,CAAC,KAAS,EAAE,IAAU;QAC7B,IAAG,CAAC,KAAK;YAAE,OAAO,IAAI,CAAC;QACvB,IAAG,CAAC,IAAI;YAAE,OAAO,KAAK,CAAC;QAEvB,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAC1B,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE;YACzB,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;iBAC1B,WAAW,EAAE;iBACb,QAAQ,CAAC,IAAI,CAAC,CAAC;QACpB,CAAC,CAAC;IACJ,CAAC;;0EAXU,aAAa;4GAAb,aAAa;6FAAb,aAAa;cAJzB,kDAAI;eAAC;gBACJ,IAAI,EAAE,WAAW;gBACjB,IAAI,EAAE,IAAI;aACX;;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAkD;;AAO3C,MAAM,gBAAgB;IAE3B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;gFALU,gBAAgB;gGAAhB,gBAAgB;QCP7B,oEAAG;QAAA,yEAAc;QAAA,4DAAI;;6FDOR,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AELD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiE;AACoB;AACpB;AAClB;AACiB;AACb;AACO;AACoB;AACC;AAC/B;AACW;AACJ;AACD;AAEgC;AACN;AACxB;;;;;AA4CjD,MAAM,aAAa;;4FAAb,aAAa;oJAAb,aAAa,mBAFb,CAAC,6DAAa,EAAE,6DAAa,EAAE,wDAAQ,CAAC,YA5B1C;YACP,6EAAoB;YACpB,4DAAY;YACZ,4DAAgB;YAChB,kEAAmB;YACnB,kEAAmB;YACnB,0DAAW;YACX,yEAAgB,CAAC,OAAO,EAAE;YAC1B,2EAAkB,CAAC,OAAO,EAAE;YAC5B,+DAAW,CAAC,OAAO,EAAE;YACrB,yEAAgB;YAChB,4FAAoB;YACpB,2EAAkB;SAGnB;QAGC,4DAAgB;QAChB,kEAAmB;QACnB,kEAAmB;QACnB,0DAAW;QACX,2EAAkB;mIAQT,aAAa,mBApCtB,oEAAgB;QAChB,mEAAa;QACb,mGAAkB;QAClB,6FAAgB;QAChB,oEAAa,aAGb,6EAAoB;QACpB,4DAAY;QACZ,4DAAgB;QAChB,kEAAmB;QACnB,kEAAmB;QACnB,0DAAW,2NAIX,yEAAgB;QAChB,4FAAoB;QACpB,2EAAkB,aAMlB,4DAAgB;QAChB,kEAAmB;QACnB,kEAAmB;QACnB,0DAAW;QACX,2EAAkB;6FAQT,aAAa;cAtCzB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,oEAAgB;oBAChB,mEAAa;oBACb,mGAAkB;oBAClB,6FAAgB;oBAChB,oEAAa;iBACd;gBACD,OAAO,EAAE;oBACP,6EAAoB;oBACpB,4DAAY;oBACZ,4DAAgB;oBAChB,kEAAmB;oBACnB,kEAAmB;oBACnB,0DAAW;oBACX,yEAAgB,CAAC,OAAO,EAAE;oBAC1B,2EAAkB,CAAC,OAAO,EAAE;oBAC5B,+DAAW,CAAC,OAAO,EAAE;oBACrB,yEAAgB;oBAChB,4FAAoB;oBACpB,2EAAkB;iBAGnB;gBACD,OAAO,EAAE,CAAC,oEAAsB,CAAC;gBACjC,OAAO,EAAE;oBACP,4DAAgB;oBAChB,kEAAmB;oBACnB,kEAAmB;oBACnB,0DAAW;oBACX,2EAAkB;iBAKnB;gBACD,SAAS,EAAE,CAAC,6DAAa,EAAE,6DAAa,EAAE,wDAAQ,CAAC;aACpD;;;;;;;;;;;;;;AC5DD;AAAA;AAAA;AAAA;AAAyC;AACa;;;AAMtD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,IAAI,EAAE,EAAE,KAAK,EAAE,aAAa,EAAE;QAC9B,QAAQ,EAAE;QACR,IAAI;QACJ,sDAAsD;QACtD,KAAK;QACL,IAAI;QACJ,gCAAgC;QAChC,2CAA2C;QAC3C,8BAA8B;QAC9B,YAAY;QACZ,0CAA0C;QAC1C,MAAM;QACN,IAAI;SACL;KACF;CACF,CAAC;AAMK,MAAM,oBAAoB;;mGAApB,oBAAoB;kKAApB,oBAAoB,kBAHtB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC9B,4DAAY;mIAEX,oBAAoB,uFAFrB,4DAAY;6FAEX,oBAAoB;cAJhC,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;AC9BD;AAAA;AAAA;AAAkD;;AAQ3C,MAAM,aAAa;IAExB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;0EALU,aAAa;6FAAb,aAAa;QCR1B,6EACI;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,yEACI;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,oEAAG;QAAA,0EAAc;QAAA,4DAAI;QACrB,sEAAI;QAAA,8DAAE;QAAA,4DAAK;QACb,4DAAM;QACN,0EACE;QAAA,mEAAgC;QAClC,4DAAM;QACN,yEAAqC;QAAA,sEAAU;QAAA,oEAAwC;QAAA,4DAAI;QAC7F,4DAAM;QACR,4DAAM;QAEN,0EACE;QAAA,2EACE;QAAA,0EACE;QAAA,qEAAG;QAAA,6EAAiB;QAAA,4DAAI;QACxB,sEAAI;QAAA,8DAAE;QAAA,4DAAK;QACb,4DAAM;QACN,0EACE;QAAA,oEAA6B;QAC/B,4DAAM;QACN,yEAAqC;QAAA,sEAAU;QAAA,oEAAwC;QAAA,4DAAI;QAC7F,4DAAM;QACR,4DAAM;QAEN,0EACE;QAAA,2EACE;QAAA,0EACE;QAAA,qEAAG;QAAA,6EAAiB;QAAA,4DAAI;QACxB,sEAAI;QAAA,8DAAE;QAAA,4DAAK;QACb,4DAAM;QACN,0EACE;QAAA,oEAA8B;QAChC,4DAAM;QACN,yEAAqC;QAAA,sEAAU;QAAA,oEAAwC;QAAA,4DAAI;QAC7F,4DAAM;QACR,4DAAM;QAEN,0EACE;QAAA,2EACE;QAAA,0EACE;QAAA,qEAAG;QAAA,uEAAW;QAAA,4DAAI;QAClB,sEAAI;QAAA,8DAAE;QAAA,4DAAK;QACb,4DAAM;QACN,0EACE;QAAA,oEAAiC;QACnC,4DAAM;QACN,yEAAqC;QAAA,sEAAU;QAAA,oEAAwC;QAAA,4DAAI;QAC7F,4DAAM;QACR,4DAAM;QAER,4DAAM;QACZ,4DAAM;QACR,4DAAM;QAEN,sEAiBM;QAEN,2EACE;QAAA,2EACE;QAAA,0EAAsB;QAAA,yEAAa;QAAA,4DAAK;QAExC,2EACE;QAAA,8EAAsE;QAAA,oEAA2B;QACjG,4DAAS;QACT,8EAAoE;QAAA,oEAA2B;QAAA,4DAAS;QAC1G,4DAAM;QACR,4DAAM;QAEN,2EACE;QAAA,0EACE;QAAA,0EACE;QAAA,2EACE;QAAA,yEAAmD;QAAA,oFACjD;QAAA,4EAAkE;QAAA,wEAAY;QAAA,4DAAO;QAAA,4DAAI;QAC3F,4EACM;QAAA,qGACF;QAAA,4DAAO;QACb,4DAAM;QACR,4DAAK;QAEL,0EACE;QAAA,2EACE;QAAA,yEAAmD;QAAA,8EACjD;QAAA,4EAAiE;QAAA,uEAAW;QAAA,4DAAO;QAAA,4DAAI;QACzF,4EACM;QAAA,4FACF;QAAA,4DAAO;QACb,4DAAM;QACR,4DAAK;QAEL,0EACE;QAAA,2EACE;QAAA,yEAAmD;QAAA,0FACjD;QAAA,4EAAiE;QAAA,uEAAW;QAAA,4DAAO;QAAA,4DAAI;QACzF,4EACK;QAAA,mHACD;QAAA,4DAAO;QACb,4DAAM;QACR,4DAAK;QAEL,0EACE;QAAA,2EACE;QAAA,yEAAmD;QAAA,iFACjD;QAAA,4EAAiE;QAAA,uEAAW;QAAA,4DAAO;QAAA,4DAAI;QACzF,4EACM;QAAA,2FACF;QAAA,4DAAO;QACb,4DAAM;QACR,4DAAK;QAEP,4DAAK;QACP,4DAAM;QAEN,2EACE;QAAA,yEAA+C;QAAA,mFAAsB;QAAA,4DAAI;QAC3E,4DAAM;QAER,4DAAM;QAER,4DAAM;QACN,4DAAM;QACR,4DAAU;;6FDzIC,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACY;AAEX;;;;;;;;ICkBX,oEAAoC;IAAA,4EAAiB;IAAA,4DAAI;;;IAD7D,0EACI;IAAA,kHAAoC;IACtC,4DAAM;;;;IADD,0DAAgC;IAAhC,iHAAgC;;;IASnC,oEAAyC;IAAA,6EAAkB;IAAA,4DAAI;;;IADnE,0EACI;IAAA,kHAAyC;IAC7C,4DAAM;;;;IADC,0DAAqC;IAArC,iHAAqC;;;IAU5C,oEAAmC;IAAA,8EAAmB;IAAA,4DAAI;;;IAD9D,0EACI;IAAA,kHAAmC;IACvC,4DAAM;;;;IADC,0DAA+B;IAA/B,iHAA+B;;;IAkB9B,oEAAkC;IAAA,6EAAkB;IAAA,4DAAI;;;IAD5D,0EACI;IAAA,kHAAkC;IACtC,4DAAM;;;;IADC,0DAA8B;IAA9B,iHAA8B;;;IAoBjC,oEAAqC;IAAA,gFAAqB;IAAA,4DAAI;;;IADnE,0EACK;IAAA,kHAAqC;IACzC,4DAAM;;;;IADC,0DAAiC;IAAjC,iHAAiC;;;IAUxC,oEAAoC;IAAA,+EAAoB;IAAA,4DAAI;;;IADhE,0EACI;IAAA,kHAAoC;IACxC,4DAAM;;;;IADC,0DAAgC;IAAhC,mHAAgC;;;IAa/B,6EAA8D;IAAA,uDAAa;IAAA,4DAAS;;;IAAxC,8EAAiB;IAAC,0DAAa;IAAb,8EAAa;;;IAG3E,oEAA4C;IAAA,uFAA4B;IAAA,4DAAI;;;IADhF,0EACI;IAAA,kHAA4C;IAChD,4DAAM;;;;IADC,0DAAwC;IAAxC,mHAAwC;;;IAS3C,oEAAoC;IAAA,kFAAuB;IAAA,4DAAI;;;IADnE,0EACI;IAAA,kHAAoC;IACxC,4DAAM;;;;IADC,0DAAgC;IAAhC,mHAAgC;;;IAUvC,oEAAuC;IAAA,qFAA0B;IAAA,4DAAI;;;IADzE,0EACI;IAAA,mHAAuC;IAC3C,4DAAM;;;;IADC,0DAAmC;IAAnC,mHAAmC;;;IAUtC,oEAAqC;IAAA,gFAAqB;IAAA,4DAAI;;;IADlE,0EACI;IAAA,mHAAqC;IACzC,4DAAM;;;;IADC,0DAAiC;IAAjC,mHAAiC;;AD1HjE,MAAM,kBAAkB;IAM7B,YAAoB,eAAgC,EAAW,cAAiC;QAA5E,oBAAe,GAAf,eAAe,CAAiB;QAAW,mBAAc,GAAd,cAAc,CAAmB;QAL3F,kBAAa,GAAmB,IAAI,0EAAc,EAAE,CAAC;QACrD,mBAAc,GAAG,CAAC,EAAC,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,8BAA8B,EAAC;YACxE,EAAC,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,gCAAgC,EAAC;YACjD,EAAC,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,oBAAoB,EAAC;YACrC,EAAC,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,6BAA6B,EAAC,CAAC;IACwD,CAAC;IAEtG,QAAQ;IAER,CAAC;IAED,wCAAwC;IACxC,qBAAqB,CAAC,KAAK;QACvB,IAAI,CAAC,aAAa,CAAC,eAAe,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,GAAE,CAAC,GAAG,CAAC,EAAE,KAAK,KAAK,CAAC,CAAC,IAAI,CAAC;IAC/F,CAAC;IACD,+BAA+B;IAC/B,QAAQ,CAAC,UAAkB;QACzB,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAC3B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC3E,IAAG,GAAG,CAAC,QAAQ,KAAK,GAAG,EAAC;gBACpB,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;gBAC3B,UAAU,CAAC,KAAK,EAAE,CAAC;gBACnB,sEAAI,CAAC,IAAI,CAAC,cAAc,EAAE,GAAG,GAAG,CAAC,OAAO,EAAE,EAAE,SAAS,CAAC;aACzD;QACL,CAAC,EAAE,KAAK,GAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;YAClB,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAC/B,CAAC,CAAC;IACJ,CAAC;;oFA7BU,kBAAkB;kGAAlB,kBAAkB;;QCX/B,6EACQ;QAAA,iFACQ;QAAA,uEAAwB;QAAA,wEAAa;QAAA,4DAAI;QACzC,4DAAc;QAC1B,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,oEAGM;QAEN,6EACA;QAD2B,6SAAqC,iBAAoB,IAAC;QACrF,0EACI;QAAA,0EAEQ;QAAA,2EACI;QAAA,2EACI;QAAA,6EAA0B;QAAA,yEAAa;QAAA,4DAAQ;QAC/C,iFACA;QADoC,4MAAyC;QAA7E,4DACA;QAAA,iHACI;QAEN,4DAAM;QACZ,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,6EAAgC;QAAA,yEAAa;QAAA,4DAAQ;QACrD,iFACA;QADqF,oMAAiC;QAAtH,4DACA;QAAA,iHACI;QAEN,4DAAM;QACZ,4DAAM;QAEV,2EACI;QAAA,2EACI;QAAA,6EAAgC;QAAA,sEAAU;QAAA,4DAAQ;QAClD,iFACA;QADoE,qMAAkC;QAAtG,4DACA;QAAA,iHACI;QAEN,4DAAM;QACZ,4DAAM;QACV,4DAAM;QACL,0EAEO;QAAA,2EACI;QAAA,2EACI;QAAA,yEAAO;QAAA,iEAAK;QAAA,4DAAQ;QACpB,kFACI;QADsC,wMAAoC;QAC1E,0EAAQ;QAAA,sEAAU;QAAA,4DAAS;QAC3B,8EAAsB;QAAA,iEAAK;QAAA,4DAAS;QAIxC,4DAAS;QACT,iHACI;QAEN,4DAAM;QACZ,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,yEAAO;QAAA,oEAAQ;QAAA,4DAAQ;QACvB,kFACI;QADyC,2MAAuC;QAChF,8EAAsB;QAAA,yEAAa;QAAA,4DAAS;QAC5C,8EAAsB;QAAA,sEAAU;QAAA,4DAAS;QACzC,8EAAsB;QAAA,qEAAS;QAAA,4DAAS;QACxC,8EAAsB;QAAA,4EAAgB;QAAA,4DAAS;QAC/C,8EAAsB;QAAA,4EAAgB;QAAA,4DAAS;QAC/C,8EAAsB;QAAA,oEAAQ;QAAA,4DAAS;QACvC,8EAAsB;QAAA,uEAAW;QAAA,4DAAS;QAC1C,8EAAsB;QAAA,4EAAgB;QAAA,4DAAS;QAC/C,8EAAsB;QAAA,4EAAgB;QAAA,4DAAS;QAC/C,8EAAuB;QAAA,sEAAU;QAAA,4DAAS;QAC9C,4DAAS;QACV,iHACK;QAEN,4DAAM;QACZ,4DAAM;QAEV,2EACI;QAAA,2EACI;QAAA,6EAAgC;QAAA,mEAAO;QAAA,4DAAQ;QAC/C,iFACA;QADmG,sMAAmC;QAAtI,4DACA;QAAA,iHACI;QAEN,4DAAM;QACZ,4DAAM;QAEV,4DAAM;QACN,0EAEQ;QAAA,2EACI;QAAA,2EACI;QAAA,yEAAO;QAAA,2EAAe;QAAA,4DAAQ;QAC9B,kFACI;QAD2E,6MAAyC,2FAAW,8CAA0C,IAArD;QACpH,0EAAQ;QAAA,sEAAU;QAAA,4DAAS;QAC3B,uHAA8D;QAClE,4DAAS;QACT,iHACI;QAEN,4DAAM;QACZ,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,6EAAqB;QAAA,sEAAU;QAAA,4DAAQ;QACvC,iFACA;QADsG,uMAAoC;QAA1I,4DACA;QAAA,iHACI;QAER,4DAAM;QACV,4DAAM;QAEV,2EACI;QAAA,2EACI;QAAA,6EAAuB;QAAA,8EAAiB;QAAA,4DAAQ;QAChD,kFACA;QADkI,2MAAuC;QAAzK,4DACA;QAAA,mHACI;QAER,4DAAM;QACV,4DAAM;QACN,4EACI;QAAA,4EACI;QAAA,8EAAuB;QAAA,qEAAQ;QAAA,4DAAQ;QACvC,kFAEA;QAFyF,wMAAoC;QAA7H,4DAEA;QAAA,mHACI;QAER,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,+EACqD;QAAA,iEAAI;QAAA,4DAAS;QACtE,4DAAM;QACN,4DAAO;QACX,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEV,4DAAU;;;;;;;;;;;;;QA/H8D,2DAAyC;QAAzC,oGAAyC;QAC/C,0DAA+C;QAA/C,8FAA+C;QAQQ,0DAAiC;QAAjC,4FAAiC;QACjH,0DAAoD;QAApD,8FAAoD;QASO,0DAAkC;QAAlC,6FAAkC;QACjG,0DAA8C;QAA9C,8FAA8C;QAWL,0DAAoC;QAApC,+FAAoC;QAElE,0DAAa;QAAb,sEAAa;QAKpB,0DAA6C;QAA7C,8FAA6C;QAQL,0DAAuC;QAAvC,kGAAuC;QACxE,0DAAa;QAAb,sEAAa;QACb,0DAAa;QAAb,sEAAa;QACb,0DAAa;QAAb,sEAAa;QACb,0DAAa;QAAb,sEAAa;QACb,0DAAa;QAAb,sEAAa;QACb,0DAAa;QAAb,sEAAa;QACb,0DAAa;QAAb,sEAAa;QACb,0DAAa;QAAb,sEAAa;QACb,0DAAa;QAAb,sEAAa;QACb,0DAAc;QAAd,uEAAc;QAEtB,0DAAgD;QAAhD,8FAAgD;QAS2C,0DAAmC;QAAnC,8FAAmC;QACjI,0DAA+C;QAA/C,+FAA+C;QAY+B,0DAAyC;QAAzC,oGAAyC;QAE5G,0DAAmC;QAAnC,uFAAmC;QAE1C,0DAAuD;QAAvD,+FAAuD;QAQ0C,0DAAoC;QAApC,+FAAoC;QACrI,0DAA+C;QAA/C,+FAA+C;QAS0E,0DAAuC;QAAvC,kGAAuC;QACpK,0DAAkD;QAAlD,+FAAkD;QAQkC,0DAAoC;QAApC,+FAAoC;QAExH,0DAAgD;QAAhD,+FAAgD;;6FDzHxE,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;;ICsDlB,qEACI;IAAA,qEAAI;IAAA,uDAAW;IAAA,4DAAK;IACpB,qEAAI;IAAA,uDAAsB;IAAA,4DAAK;IAC/B,qEAAI;IAAA,uDAAc;IAAA,4DAAK;IACvB,qEAAI;IAAA,uDAAe;IAAA,4DAAK;IACxB,qEAAI;IAAA,wDAAwB;IAAA,4DAAK;IACjC,sEAAI;IAAA,wDAAiB;IAAA,4DAAK;IAC1B,sEAAI;IAAA,wDAAoB;IAAA,4DAAK;IAC7B,sEAAI;IAAA,wDAAgB;IAAA,4DAAK;IAC7B,4DAAK;;;;IARG,0DAAW;IAAX,6EAAW;IACX,0DAAsB;IAAtB,sFAAsB;IACtB,0DAAc;IAAd,8EAAc;IACd,0DAAe;IAAf,+EAAe;IACf,0DAAwB;IAAxB,wFAAwB;IACxB,0DAAiB;IAAjB,iFAAiB;IACjB,0DAAoB;IAApB,oFAAoB;IACpB,0DAAgB;IAAhB,gFAAgB;;;ADpDjD,MAAM,gBAAgB;IAG3B,YAAoB,eAAgC,EAAW,cAAiC;QAA5E,oBAAe,GAAf,eAAe,CAAiB;QAAW,mBAAc,GAAd,cAAc,CAAmB;QAF3F,YAAO,GAAmB,EAAE,CAAC;IAEmE,CAAC;IAEtG,QAAQ;QACJ,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAC3B,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAAC,GAAG,GAAE;YACtD,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;YAC3B,IAAG,GAAG,CAAC,QAAQ,KAAG,GAAG,EAAC;gBACpB,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,MAAM,CAAC;aAC3B;QACL,CAAC,EAAC,KAAK,GAAE;YACL,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;YAClB,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAC/B,CAAC,CAAC;IACN,CAAC;;gFAhBU,gBAAgB;gGAAhB,gBAAgB;QCV7B,6EACQ;QAAA,iFACQ;QAAA,uEAAwB;QAAA,wEAAa;QAAA,4DAAI;QACzC,4DAAc;QAY1B,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,4EAEA;QAFwD,yLAAwB;QAAhF,4DAEA;QAAA,uEAAsE;QAC1E,4DAAM;QACV,4DAAM;QAEN,qEAMM;QACV,4DAAM;QAEN,2EACI;QAAA,2EACI;QAAA,6EACI;QAAA,yEACI;QAAA,sEACI;QAAA,sEAAI;QAAA,+DAAG;QAAA,4DAAK;QACZ,sEAAI;QAAA,yEAAa;QAAA,4DAAK;QACtB,sEAAI;QAAA,oEAAQ;QAAA,4DAAK;QACjB,sEAAI;QAAA,sEAAU;QAAA,4DAAK;QACnB,sEAAI;QAAA,2EAAe;QAAA,4DAAK;QACxB,sEAAI;QAAA,sEAAU;QAAA,4DAAK;QACnB,sEAAI;QAAA,6EAAiB;QAAA,4DAAK;QAC1B,sEAAI;QAAA,mEAAO;QAAA,4DAAK;QAEpB,4DAAK;QACT,4DAAQ;QACR,yEAEI;QAAA,8GACI;;QAUR,4DAAQ;QACZ,4DAAQ;QACR,2EACI;QAAA,gFACgB;QACpB,4DAAM;QAEV,4DAAM;QACV,4DAAM;QAEV,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEV,4DAAU;;QA1D0E,2DAAwB;QAAxB,mFAAwB;QAiCxE,2DAAqE;QAArE,kKAAqE;QAc9D,0DAAa;QAAb,sEAAa;;6FD1D3C,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;ICAlD,yEACI;IAAA,iFACI;IAAA,uEAAwB;IAAA,wEAAa;IAAA,4DAAI;IACzC,4DAAc;IACtB,4DAAM;;ADQC,MAAM,eAAe;IAI1B,YAAoB,aAA4B,EAAU,cAAiC;QAAvE,kBAAa,GAAb,aAAa,CAAe;QAAU,mBAAc,GAAd,cAAc,CAAmB;QAH3F,cAAS,GAAqB,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC;QAIzD,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAE3B,UAAU,CAAC,GAAG,EAAE;YACd,mCAAmC;YACnC,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAC7B,CAAC,EAAE,IAAI,CAAC,CAAC;IACV,CAAC;;8EAXS,eAAe;+FAAf,eAAe;QCZ5B,2GACI;;;QADC,gJAAyB;;6FDYjB,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiD;;;;;;;;AAO1C,MAAM,sBAAsB;IAEjC,QAAQ;IAER,CAAC;;4FAJU,sBAAsB;sGAAtB,sBAAsB;QCPnC,yEACE;QAAA,gFAAoD;QACpD,wEAAyB;QACzB,yEAA2B;QACzB,yEACI;QAAA,4EAAiC;QACnC,2EAA+B;QACjC,4DAAM;QACR,wEAAyB;QAC3B,4DAAM;;QARa,0DAAgB;QAAhB,yEAAgB;;6FDMtB,sBAAsB;cALlC,uDAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,iCAAiC;gBAC9C,SAAS,EAAE,CAAC,gCAAgC,CAAC;aAC9C;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAA0C;;;;;;;;;;;;;ACA1C;AAAA;AAAA;AAAA;AAAiC;;;;;;;;;;;;;ACAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiD;AACuB;AAGV;;;;;ICMxD,wEACQ;IAAA,wEAAmC;IAAA,uEAAqB;IAAA,+DAAI;IAAA,4DAAI;IAAA,4DAAK;IACrE,wEACI;IAAA,uDACJ;IAAA,4DAAK;IACP,4DAAK;;;IAFC,0DACJ;IADI,+FACJ;;ADHP,MAAM,mBAAmB;IAI9B,YACU,MAAc,EACd,cAA8B;QAD9B,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAgB;QACtC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;IACpE,CAAC;IAED,QAAQ;QACN,2BAA2B;QAC3B,8DAA8D;QAC9D,4BAA4B;QAC5B,sBAAsB;QACtB,uEAAuE;QACvE,mCAAmC;QACnC,MAAM;QAEN,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CACf,6DAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,YAAY,6DAAa,CAAC,CAClD,CAAC,SAAS,CAAC,GAAG,EAAE;YACf,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;YAClE,iCAAiC;QACnC,CAAC,CAAC,CAAC;IACT,CAAC;IAEA,eAAe,CAAC,KAAqB,EAAE,MAAc,EAAE,EAAE,cAA6B,EAAE;QACvF,wCAAwC;QACxC,0DAA0D;QAC1D,IAAI,KAAK,GAAG,KAAK,CAAC,WAAW,IAAI,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC;QACjG,IAAI,IAAI,GAAG,KAAK,CAAC,WAAW,IAAI,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;QACrF,sBAAsB;QAEtB,yDAAyD;QACzD,MAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;QAC5C,MAAM,cAAc,GAAG,aAAa,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QACrD,IAAI,cAAc,IAAI,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE;YACtC,MAAM,SAAS,GAAG,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9C,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;YACrE,KAAK,GAAG,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;SAC1C;QACD,0BAA0B;QAC1B,wDAAwD;QACxD,4BAA4B;QAC5B,MAAM,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;QAE9C,MAAM,UAAU,GAAgB;YAC5B,KAAK,EAAE,KAAK;YACZ,GAAG,EAAE,OAAO;SACf,CAAC;QACF,yCAAyC;QACzC,MAAM,cAAc,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAE,GAAG,WAAW,EAAE,UAAU,CAAE,CAAC,CAAC,CAAC,CAAE,GAAG,WAAW,CAAC,CAAC;QAC7F,IAAI,KAAK,CAAC,UAAU,EAAE;YAClB,wCAAwC;YACxC,mEAAmE;YACnE,OAAO,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,UAAU,EAAE,OAAO,EAAE,cAAc,CAAC,CAAC;SAC1E;QACD,+BAA+B;QAC/B,OAAO,cAAc,CAAC;IACxB,CAAC;;sFA5DU,mBAAmB;mGAAnB,mBAAmB;QCXhC,6EACE;QAAA,mEAA+B;QAS3B,6GACQ;QAKZ,4DAAU;;QANgC,0DAAsC;QAAtC,oFAAsC;;6FDCrE,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAiD;;AAO1C,MAAM,eAAe;IAE1B,QAAQ;IACR,CAAC;;8EAHU,eAAe;+FAAf,eAAe;QCP5B,4EACE;QAAA,yEACF;QACI,yEAAQ;QAAA,gGAAgC;QAAA,4DAAS;QAAC,iFACpD;QAAA,4DAAM;QACR,4DAAS;;6FDEI,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACoB;AAEvC;AACO;;;;;AAEtC,4BAA4B;AAE5B,sDAAsD;AAEtD,yBAAyB;AAOlB,MAAM,eAAe;IAO1B,YACU,qBAA4C,EAC5C,kBAAsC,EACtC,KAAqB,EAAU,MAAc;QAF7C,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,UAAK,GAAL,KAAK,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QARvD,qBAAgB,GAAG,EAAE,CAAC;QACtB,iBAAY,GAAG,EAAE,CAAC;QAShB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAC3D,CAAC;IAED,QAAQ;QACN,6EAA6E;QAC7E,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE;YACrD,IAAI,CAAC,gBAAgB,GAAG,YAAY,CAAC;QACvC,CAAC,CAAC,CAAC;QAEH,IAAI,SAAS,GAAG,EAAE,CAAC;QAEnB,IAAI,WAAW,GAAG,IAAI,CAAC,qBAAqB,CAAC,gBAAgB,CAAC;QAC9D,IAAI,WAAW,IAAI,WAAW,CAAC,KAAK,EAAE;YACpC,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC,IAAI,CAAC;SACtC;QAED,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CACrB,6DAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,YAAY,6DAAa,CAAC,CAChD,CAAC,SAAS,CAAC,GAAG,EAAE;YACf,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACzD,iCAAiC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,eAAe,CAAC,KAAqB,EAAE,MAAc,EAAE,EAAE,cAA6B,EAAE;QACtF,wCAAwC;QACxC,0DAA0D;QAC1D,IAAI,KAAK,GAAG,KAAK,CAAC,WAAW,IAAI,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC;QACjG,IAAI,IAAI,GAAG,KAAK,CAAC,WAAW,IAAI,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;QACrF,sBAAsB;QAEtB,yDAAyD;QACzD,MAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;QAC5C,MAAM,cAAc,GAAG,aAAa,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QACrD,IAAI,cAAc,IAAI,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE;YACtC,MAAM,SAAS,GAAG,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9C,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;YACrE,KAAK,GAAG,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;SAC1C;QACD,0BAA0B;QAC1B,wDAAwD;QACxD,4BAA4B;QAC5B,MAAM,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;QAE9C,MAAM,UAAU,GAAgB;YAC9B,KAAK,EAAE,KAAK;YACZ,GAAG,EAAE,OAAO;SACb,CAAC;QACF,yCAAyC;QACzC,MAAM,cAAc,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAE,GAAG,WAAW,EAAE,UAAU,CAAE,CAAC,CAAC,CAAC,CAAE,GAAG,WAAW,CAAC,CAAC;QAC7F,IAAI,KAAK,CAAC,UAAU,EAAE;YACpB,wCAAwC;YACxC,mEAAmE;YACnE,OAAO,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,UAAU,EAAE,OAAO,EAAE,cAAc,CAAC,CAAC;SACxE;QACD,+BAA+B;QAC/B,OAAO,cAAc,CAAC;IACxB,CAAC;IAED,QAAQ;QACN,kDAAI,CAAC,IAAI,CAAC;YACR,KAAK,EAAE,eAAe;YACtB,IAAI,EAAE,EAAE;YACR,IAAI,EAAE,UAAU;YAChB,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,SAAS;YAC7B,iBAAiB,EAAE,MAAM;YACzB,iBAAiB,EAAE,KAAK;SACzB,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACjB,IAAI,MAAM,CAAC,KAAK,EAAE;gBAChB,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,CAAC;aACrC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;8EArFU,eAAe;+FAAf,eAAe;QCjB5B,4EACE;QACA,uEACE;QAGA,0EACE;QAAA,kEAA6C;QAE/C,4DAAO;QAGP,0EAAiC;QAAA,uEAA8B;QAAA,kEAAM;QAAA,4DAAI;QAAA,+DAAI;QAAA,4DAAO;QACtF,4DAAI;QAEJ,yEACE;QACA,uEACE;QAAA,2EAAsB;QAAA,6EAAiB;QAAA,4DAAO;QAC9C,sEAA8B;QAC9B,sEAA8B;QAC9B,sEAA8B;QAChC,4DAAI;QAEJ,4EAEI;QACA,wDACA;;QAUJ,4DAAO;QAEP,2EACE;QAAA,0EACC;QAAA,0EACE;QAAA,yEACE;QAAA,oEAA0B;QAC1B,4EAAkC;QAAA,6DAAC;QAAA,4DAAO;QAC5C,4DAAI;QACJ,0EACE;QAAA,0EAAmB;QAAA,+EAAmB;QAAA,4DAAK;QAE3C,0EAAmB;QAAA,yEAAY;QAAA,4EAAgB;QAAA,4DAAI;QAAA,4DAAK;QAC1D,4DAAK;QACP,4DAAK;QAuBJ,qEACR;QA+BQ,0EACE;QAAA,yEACC;QAAA,sEACC;QACA,4EAAwB;QAAA,wDAAkB;QAAA,4DAAO;QACnD,4DAAI;QACJ,0EACE;QAyBA,0EACE;QAAA,2EACE;QAAA,yEAAmD;QAAA,mEAAO;QAAA,4DAAI;QAChE,4DAAM;QACN,2EACE;QACA,8EAA8D;QAAtD,wIAAS,cAAU,IAAC;QAAkC,kEAAM;QAAA,4DAAS;QAC/E,4DAAM;QACR,4DAAK;QACP,4DAAK;QACP,4DAAK;QAKP,4DAAK;QACP,4DAAM;QACR,4DAAM;QACR,4DAAS;;QAlID,2DACA;QADA,yKACA;QAmF4B,2DAAkB;QAAlB,iFAAkB;;6FD9FzC,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AEhBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACkB;;;;;;;;;;;;;;IC2BhD,sEAAgD;IAAA,4EAAiB;IAAA,4DAAM;;;IADzE,4EACE;IAAA,wHAAgD;IAClD,4DAAY;;;IADL,0DAA0C;IAA1C,2GAA0C;;;IAS/C,sEAAmD;IAAA,+EAAoB;IAAA,4DAAM;;;IAD/E,4EACE;IAAA,wHAAmD;IACrD,4DAAY;;;IADL,0DAA6C;IAA7C,8GAA6C;;ADvB/D,MAAM,cAAc;IAOzB,mBAAmB;IACnB,mBAAmB;IAEnB,YACU,cAAiC,EACjC,YAAyB,EACzB,eAAgC,EAChC,qBAA4C,EAC5C,MAAc;QAJd,mBAAc,GAAd,cAAc,CAAmB;QACjC,iBAAY,GAAZ,YAAY,CAAa;QACzB,oBAAe,GAAf,eAAe,CAAiB;QAChC,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,WAAM,GAAN,MAAM,CAAQ;QAbxB,gBAAW,GAAG,KAAK,CAAC;QAGpB,qBAAqB;QACrB,UAAK,GAAG,EAAE,CAAC;IAUR,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YAC5C,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACpC,CAAC,CAAC;IACL,CAAC;IAED,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC;IACtC,CAAC;IAED,OAAO;QACL,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAC3B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE;YAC/B,OAAO;SACR;aAAM;YACL,IAAI,CAAC,eAAe;iBACjB,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;iBAC9C,SAAS,CACR,IAAI,CAAC,EAAE;gBACL,2BAA2B;gBAC3B,IAAI,IAAI,CAAC,QAAQ,KAAK,GAAG,EAAE;oBACzB,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;oBACrD,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;oBAC3B,kGAAkG;oBAClG,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;oBACjE,IAAI,CAAC,SAAS;wBACZ,IAAI,CAAC,MAAM,CAAC,IAAI,KAAK,WAAW,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,QAAQ,CAAC;oBAC7D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;iBACxC;qBAAM;oBACL,IAAI,CAAC,KAAK,GAAG,kCAAkC,CAAC;iBACjD;YACH,CAAC,EACD,KAAK,CAAC,EAAE;gBACN,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;gBAC1B,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAC3B,CAAC,CACF,CAAC;SACL;QACD,8BAA8B;QAC9B,yBAAyB;QACzB,4CAA4C;QAC5C,iCAAiC;QAEjC,qHAAqH;IACvH,CAAC;IACC,WAAW,CAAC,SAAS;QACnB,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;IACzB,CAAC;;4EAnEQ,cAAc;8FAAd,cAAc;QCd3B,6EACQ;QAAA,iFACQ;QAAA,uEAAwB;QAAA,wEAAa;QAAA,4DAAI;QACzC,4DAAc;QAC1B,yEACI;QAAA,yEACI;QAAA,mEAAe;QACnB,4DAAM;QACN,yEACI;QAAA,oEAEM;QACV,4DAAM;QACN,yEACI;QAAA,wEAAyB;QAAA,0EAAQ;QAAA,mEAAO;QAAA,4DAAS;QAAA,4DAAI;QAIzD,4DAAM;QAEN,0EACI;QAAA,0EACE;QAAA,2EACE;QAD4D,2IAAY,aAAS,IAAC;QAClF,qFACE;QAAA,6EAAW;QAAA,4EAAgB;QAAA,4DAAY;QACvC,wEACA;QAAA,gFAAoB;QAAA,iEAAK;QAAA,4DAAW;QACpC,yHACE;QAEJ,4DAAiB;QAEjB,sFACE;QAAA,6EAAW;QAAA,0EAAc;QAAA,4DAAY;QACrC,wEACA;QAAA,gFAAoB;QAAA,gEAAI;QAAA,4DAAW;QACnC,yHACE;QAEJ,4DAAiB;QACjB,+EACE;QAAA,oFAA8C;QAAA,6EAAiB;QAAA,4DAAe;QAChF,4DAAU;QACV,8EAA0C;QAAA,iEAAK;QAAA,4DAAS;QAC1D,4DAAO;QAEP,iEACA;QAAA,iEACA;QAAA,yEAAW;QAAA,gFAAoB;QAAA,4DAAI;QACrC,4DAAM;QACV,4DAAM;QAEN,2EACI;QAAA,gFACJ;QAAA,4DAAM;QACV,4DAAM;QACV,4DAAU;;QAlCqC,2DAA4B;QAA5B,yFAA4B;QAK9C,0DAAgD;QAAhD,kHAAgD;QAShD,0DAAmD;QAAnD,qHAAmD;;6FDtBnE,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AEbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACkB;AACN;;;;;;ICOxD,0EACI;IAAA,wEAA4C;IAAA,yEAAQ;IAAA,uDAAW;IAAA,4DAAS;IAAA,4DAAI;IAChF,4DAAM;;;IADkD,0DAAW;IAAX,6EAAW;;;IAY3D,sEAAyC;IAAA,iFAAsB;IAAA,4DAAM;;;IADvE,0EACE;IAAA,qHAAyC;IAC3C,4DAAM;;;IADC,0DAAmC;IAAnC,oGAAmC;;;IAUxC,sEAAwC;IAAA,iFAAsB;IAAA,4DAAM;;;IADtE,0EACE;IAAA,qHAAwC;IAC1C,4DAAM;;;IADC,0DAAkC;IAAlC,mGAAkC;;;IAYvC,sEAAuC;IAAA,4EAAiB;IAAA,4DAAM;;;IADhE,0EACE;IAAA,qHAAuC;IACzC,4DAAM;;;IADC,0DAAiC;IAAjC,kGAAiC;;;IAYtC,sEAAwC;IAAA,+EAAoB;IAAA,4DAAM;;;IADpE,0EACE;IAAA,qHAAwC;IAC1C,4DAAM;;;IADC,0DAAkC;IAAlC,mGAAkC;;;IAYvC,sEAA+C;IAAA,2EAAgB;IAAA,4DAAM;;;IADvE,0EACE;IAAA,qHAA+C;IACjD,4DAAM;;;IADC,0DAAyC;IAAzC,0GAAyC;;;IAS9C,mEAAuD;;;ADpE9D,MAAM,iBAAiB;IAQ5B,6CAA6C;IAE7C,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAP5C,cAAS,GAAG,KAAK,CAAC;QAClB,cAAS,GAAG,KAAK,CAAC;QAClB,UAAK,GAAG,EAAE,CAAC;IAKqC,CAAC;IAEjD,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACzC,SAAS,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YACtD,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,2BAA2B,CAAC,CAAC,CAAC;YACpF,qEAAqE;YACrE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9D,eAAe,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC3C,EAAE;YACD,SAAS,EAAE,+EAAS,CAAC,UAAU,EAAE,iBAAiB,CAAC;SACpD,CAAC,CAAC;IACL,CAAC;IAED,oDAAoD;IACpD,IAAI,CAAC,KAAK,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC;IAE9C,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,+BAA+B;QAC/B,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE;YAC7B,OAAO;SACR;QAED,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAErC,+CAA+C;QAC/C,gBAAgB;QAChB,gBAAgB;QAChB,gCAAgC;QAChC,yBAAyB;QACzB,qCAAqC;QACrC,uFAAuF;QACvF,4CAA4C;QAC5C,0CAA0C;QAC1C,qBAAqB;QACrB,kDAAkD;QAClD,kEAAkE;QAClE,iBAAiB;QACjB,2DAA2D;QAC3D,sCAAsC;QACtC,UAAU;QACV,SAAS;QACT,iBAAiB;QACjB,gCAAgC;QAChC,iCAAiC;QACjC,sCAAsC;QACtC,QAAQ;QACR,OAAO;QAEP,iCAAiC;QACjC,iFAAiF;IACnF,CAAC;IAED,WAAW,CAAC,SAAS;QACnB,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACzB,CAAC;IAED,OAAO;QACL,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;IAC5B,CAAC;;kFA5EU,iBAAiB;iGAAjB,iBAAiB;QCT9B,6EACE;QAAA,yEACE;QAKA,yEACE;QAAA,uEAAyB;QAAA,yEAAQ;QAAA,mEAAQ;QAAA,4DAAS;QAAA,4DAAI;QACtD,6GACI;QAER,4DAAM;QACJ,yEACI;QAAA,0EACA;QADwD,6IAAY,cAAU,IAAC;QAC/E,yEACA;QAAA,0EACE;QAAA,0EACE;QAAA,4EAAuB;QAAA,uEAAW;QAAA,4EAAqB;QAAA,8DAAC;QAAA,4DAAO;QAAA,4DAAQ;QACvE,wEAEA;QAAA,gHACE;QAEJ,4DAAM;QACR,4DAAM;QACN,0EACE;QAAA,0EACE;QAAA,6EAAsB;QAAA,uEAAW;QAAA,4EAAqB;QAAA,8DAAC;QAAA,4DAAO;QAAA,4DAAQ;QACtE,wEAEA;QAAA,gHACE;QAEJ,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,0EACE;QAAA,0EACE;QAAA,0EACE;QAAA,6EAAqB;QAAA,oEAAQ;QAAA,4EAAqB;QAAA,8DAAC;QAAA,4DAAO;QAAA,4DAAQ;QAClE,wEAEA;QAAA,gHACE;QAEJ,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,0EACE;QAAA,0EACE;QAAA,0EACE;QAAA,6EAAsB;QAAA,oEAAQ;QAAA,4EAAqB;QAAA,8DAAC;QAAA,4DAAO;QAAA,4DAAQ;QACnE,wEAEA;QAAA,gHACE;QAEJ,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,0EACE;QAAA,0EACE;QAAA,0EACE;QAAA,6EAA6B;QAAA,4EAAgB;QAAA,4EAAqB;QAAA,8DAAC;QAAA,4DAAO;QAAA,4DAAQ;QAClF,wEAEA;QAAA,gHACE;QAEJ,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,0EACE;QAAA,2EACE;QAAA,8EACI;QAAA,sEACA;QAAA,4GAAmD;QACvD,4DAAS;QACT,iFAAoB;QAAA,yEAAwB;QAAA,kEAAK;QAAA,4DAAI;QACzD,4DAAM;QACN,4DAAM;QACN,4DAAO;QACP,4DAAM;QA2GR,2EAEA;QAAA,uFACJ;QAAA,4DAAM;QACJ,4DAAM;QACR,4DAAU;;QA1LmC,0DAAa;QAAb,2EAAa;QAKrB,0DAA0B;QAA1B,uFAA0B;QAMnD,0DAA6D;QAA7D,oLAA6D;QACxD,0DAAuC;QAAvC,yGAAuC;QAS5C,0DAA4D;QAA5D,mLAA4D;QACvD,0DAAsC;QAAtC,wGAAsC;QAW3C,0DAA2D;QAA3D,kLAA2D;QACtD,0DAAqC;QAArC,uGAAqC;QAW1C,0DAA4D;QAA5D,mLAA4D;QACvD,0DAAsC;QAAtC,wGAAsC;QAW3C,0DAAmE;QAAnE,0LAAmE;QAC9D,0DAA6C;QAA7C,+GAA6C;QAU7C,0DAAiB;QAAjB,+EAAiB;;6FDpErB,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAiD;;;;AAS1C,MAAM,gBAAgB;IAE3B,QAAQ;QACN,CAAC,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE;YACrB,MAAM,KAAK,GAAQ,CAAC,CAAC,sBAAsB,CAAC,CAAC;YAC7C,KAAK,CAAC,IAAI,EAAE,CAAC;QACf,CAAC,CAAC,CAAC;IACL,CAAC;;gFAPU,gBAAgB;gGAAhB,gBAAgB;QCR7B,2EACE;QACA,6EACE;QAAA,wEACE;QACA,wEACE;QAAA,uEACE;QAAA,kEAA+B;QAAA,uEAAM;QAAA,oEAAS;QAAA,4DAAO;QACvD,4DAAI;QACN,4DAAK;QAEL,wEACE;QAAA,uEACE;QAAA,mEAAgC;QAChC,wEAAM;QAAA,0EAAc;QAAA,4DAAO;QAC3B,2EACE;QAAA,oEAA2C;QAC7C,4DAAO;QACT,4DAAI;QACJ,0EACE;QAAA,0EACE;QAAA,yEAAkC;QAAA,oEAA8B;QAAA,sEAAU;QAAA,4DAAI;QAChF,4DAAK;QACL,0EACE;QAAA,yEAAgC;QAAA,oEAA8B;QAAA,oEAAQ;QAAA,4DAAI;QAC5E,4DAAK;QAEP,4DAAK;QACP,4DAAK;QA8BP,4DAAK;QACP,4DAAU;QAEZ,4DAAQ;;QAxDiE,0DAA2C;QAA3C,0JAA2C;QAM/D,0DAA2C;QAA3C,0JAA2C;QASxD,0DAA2C;QAA3C,0JAA2C;QAG3C,0DAA2C;QAA3C,0JAA2C;;6FDftE,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AAC/C,kFAAkF;AAClF,+EAA+E;AACO;AACzB;AACe;AACnB;AACE;AAC3D,2DAA2D;AACO;AACX;AACE;AACQ;AACJ;AACN;AACF;AACU;AACA;AACV;AACgB;AACd;AACsB;;AAoFtE,MAAM,oBAAoB;;mGAApB,oBAAoB;kKAApB,oBAAoB,kBA3EtB;YACP,4DAAY;YACZ,2BAA2B;YAC3B,wBAAwB;YAExB,2FAAwB;YACxB,wEAAe;YACf,0EAAgB;YAChB,0DAAW;YACX,sEAAc;YACd,wEAAe;YACf,iFAAmB;YACnB,2EAAmB;YACnB,mFAAoB;YACpB,qEAAa;YACb,kEAAmB;YACnB,sEAAc;YACd,qEAAa;YACb,sEAAc;YACd,6EAAiB;YACjB,0EAAgB;YAChB,+EAAkB;YAClB,qEAAa;YACb,uEAAc;YACd,uEAAc;YACd,qEAAa;YACb,+EAAkB;SAWnB;QAEC,2BAA2B;QAC3B,wBAAwB;QAExB,0EAAgB;QAChB,2FAAwB;QACxB,wEAAe;QACf,0EAAgB;QAChB,0DAAW;QACX,sEAAc;QACd,wEAAe;QACf,iFAAmB;QACnB,2EAAmB;QACnB,mFAAoB;QACpB,qEAAa;QACb,kEAAmB;QACnB,sEAAc;QACd,qEAAa;QACb,sEAAc;QACd,6EAAiB;QACjB,0EAAgB;QAChB,+EAAkB;QAClB,qEAAa;QACb,uEAAc;QACd,uEAAc;QACd,qEAAa;QACb,+EAAkB;mIAWT,oBAAoB,cA1E7B,4DAAY;QACZ,2BAA2B;QAC3B,wBAAwB;QAExB,2FAAwB;QACxB,wEAAe;QACf,0EAAgB;QAChB,0DAAW;QACX,sEAAc;QACd,wEAAe;QACf,iFAAmB;QACnB,2EAAmB;QACnB,mFAAoB;QACpB,qEAAa;QACb,kEAAmB;QACnB,sEAAc;QACd,qEAAa;QACb,sEAAc;QACd,6EAAiB;QACjB,0EAAgB;QAChB,+EAAkB;QAClB,qEAAa;QACb,uEAAc;QACd,uEAAc;QACd,qEAAa;QACb,+EAAkB;QAalB,2BAA2B;QAC3B,wBAAwB;QAExB,0EAAgB;QAChB,2FAAwB;QACxB,wEAAe;QACf,0EAAgB;QAChB,0DAAW;QACX,sEAAc;QACd,wEAAe;QACf,iFAAmB;QACnB,2EAAmB;QACnB,mFAAoB;QACpB,qEAAa;QACb,kEAAmB;QACnB,sEAAc;QACd,qEAAa;QACb,sEAAc;QACd,6EAAiB;QACjB,0EAAgB;QAChB,+EAAkB;QAClB,qEAAa;QACb,uEAAc;QACd,uEAAc;QACd,qEAAa;QACb,+EAAkB;6FAWT,oBAAoB;cA7EhC,sDAAQ;eAAC;gBACR,YAAY,EAAE,EAAE;gBAChB,OAAO,EAAE;oBACP,4DAAY;oBACZ,2BAA2B;oBAC3B,wBAAwB;oBAExB,2FAAwB;oBACxB,wEAAe;oBACf,0EAAgB;oBAChB,0DAAW;oBACX,sEAAc;oBACd,wEAAe;oBACf,iFAAmB;oBACnB,2EAAmB;oBACnB,mFAAoB;oBACpB,qEAAa;oBACb,kEAAmB;oBACnB,sEAAc;oBACd,qEAAa;oBACb,sEAAc;oBACd,6EAAiB;oBACjB,0EAAgB;oBAChB,+EAAkB;oBAClB,qEAAa;oBACb,uEAAc;oBACd,uEAAc;oBACd,qEAAa;oBACb,+EAAkB;iBAWnB;gBACD,OAAO,EAAE;oBACP,2BAA2B;oBAC3B,wBAAwB;oBAExB,0EAAgB;oBAChB,2FAAwB;oBACxB,wEAAe;oBACf,0EAAgB;oBAChB,0DAAW;oBACX,sEAAc;oBACd,wEAAe;oBACf,iFAAmB;oBACnB,2EAAmB;oBACnB,mFAAoB;oBACpB,qEAAa;oBACb,kEAAmB;oBACnB,sEAAc;oBACd,qEAAa;oBACb,sEAAc;oBACd,6EAAiB;oBACjB,0EAAgB;oBAChB,+EAAkB;oBAClB,qEAAa;oBACb,uEAAc;oBACd,uEAAc;oBACd,qEAAa;oBACb,+EAAkB;iBASnB;aACF;;;;;;;;;;;;;;ACzGD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,OAAO,EAAE,uBAAuB;IAChC,MAAM,EAAE,wCAAwC;IAChD,UAAU,EAAE,uBAAuB;CACpC,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;AClBnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;AAEvC;;;AAElB,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { AuthenticationService } from '../_services/authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  /*canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return true;\n  }\n  */\n constructor(private router: Router, private _authenticationService: AuthenticationService){}\n\n canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n   const currentUser = this._authenticationService.currentUserValue;\n\n   if (currentUser) {\n     if (route.data.roles && route.data.roles.indexOf(currentUser.role) === -1) {\n       this.router.navigate(['/login']);\n       return false;\n     }\n\n    //  otherwise  authorised so return true\n     return true;\n   }\n\n   // not logged in so redirect to login page with the return url\n   this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n   return false;\n }\n}\n","/**\n * Created by faiz on 19/04/20. lockdown covid-19\n*/\nexport * from './auth.guard';","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../_services';\n\n@Injectable({providedIn: 'root'})\nexport class JwtInterceptor implements HttpInterceptor {\n  // tslint:disable-next-line: variable-name\n  constructor(private _authenticationService: AuthenticationService) {}\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    // add authorization header with jwt token if available\n    let currentUser = this._authenticationService.currentUserValue;\n    if (currentUser && currentUser.token) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${currentUser.token}`\n        }\n      });\n    }\n    return next.handle(request);\n  }\n}","import {FormGroup} from '@angular/forms';\r\n\r\n// custom validator to check that two fields match\r\nexport function MustMatch(controlName: string, matchingControlName: string) {\r\n  return (formGroup: FormGroup) => {\r\n    const control = formGroup.controls[controlName];\r\n    const matchingControl = formGroup.controls[matchingControlName];\r\n\r\n    if (matchingControl.errors && !matchingControl.errors.mustMatch) {\r\n      // return if another validator has already found an error on the matchingControl\r\n      return;\r\n    }\r\n\r\n    // set error on matchingControl if validation fails\r\n    if (control.value !== matchingControl.value) {\r\n      matchingControl.setErrors({mustMatch: true});\r\n    } else {\r\n      matchingControl.setErrors(null);\r\n    }\r\n  };\r\n}\r\n","import {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpHeaders} from '@angular/common/http';\r\nimport {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\n\r\n\r\n@Injectable()\r\nexport class HttpHeaderInterceptorService implements HttpInterceptor {\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n  if(localStorage.getItem('currentUser')){\r\n      let currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n    if(currentUser.token) {\r\n  request = request.clone({\r\n        headers: new HttpHeaders({\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${currentUser.token}`,\r\n         })\r\n       });\r\n    }\r\n  } else {\r\n    request = request.clone({\r\n        headers: new HttpHeaders({\r\n          'Content-Type': 'application/json',\r\n         })\r\n       });\r\n  }\r\n     \r\n     return next.handle(request);\r\n     }\r\n  }\r\n","/**\n * Created by faiz on 16/04/20. lockdown covid-19\n */\nexport * from './user';\nexport * from './role';\n","export enum Role {\n  Admin     = 'Admin',\n  Institute   = 'Institute',\n  Employee  = 'Employee',\n  User      = 'User'\n}\n","import { Role } from './role';\n\nexport class User {\n    name: string;\n    institute_name: string;\n    logo: string;\n    user_image: string;\n    password: string;\n    email: string;\n    role_id: number;\n    role: Role;\n    token: string;\n    contact_number: string;\n    user_type: string;\n  }","export class CreateHubModel{\r\n    hospital_name: string;\r\n    email: string;\r\n    mobile: string;\r\n    state_id: string;\r\n    district_id: string;\r\n    address: string;\r\n    department_name: string;\r\n    department_id: string;\r\n    hod_name: string;\r\n    hod_contact: string;\r\n    password: string;\r\n}\r\n\r\nexport class HubListModel{\r\n    id: number;\r\n    hospital_name: string;\r\n    created_by: string;\r\n    admin_id: string;\r\n    email: string;\r\n    mobile: string;\r\n    state_id: string;\r\n    district_id: string;\r\n    address: string;\r\n    department_name: string;\r\n    department_id: string;\r\n    hod_name: string;\r\n    hod_contact: string;\r\n    is_active: string;\r\n    created_at: string;\r\n    updated_at: string;\r\n    profile_photo_url: string;\r\n}","import { Injectable } from '@angular/core';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {User} from '../_model';\nimport {environment} from '../../environments/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {Router} from '@angular/router';\nimport {map} from 'rxjs/operators';\n// import Swal from 'sweetalert2';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  private currentUserSubject: BehaviorSubject<User>;\n  public currentUser: Observable<User>;\n  private API_URL = environment.apiUrl;\n\n  constructor(\n    // tslint:disable-next-line: variable-name\n    private _http: HttpClient, private router: Router) {\n      this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\n      this.currentUser = this.currentUserSubject.asObservable();\n   }\n\n   public get currentUserValue(): User {\n    return this.currentUserSubject.value;\n  }\n\n  login(userData) {\n    // const data = {email: userData.username.value , password: userData.password.value , mode: 'web', device_id : null};\n    const data = {email: userData.email , password: userData.password, mode: 'web', device_id : null};\n\n    return this._http.post<any>(this.API_URL + 'admin/login', data)\n      .pipe(map(user => {\n        // login successful if there's a jwt token in the response\n        // if (user && user.result.token) {\n        if (user && user.response !== 401) {\n          // store user details and jwt token in local storage to keep user logged in between page refreshes\n          localStorage.setItem('currentUser', JSON.stringify(user.result));\n          // this.router.navigate(['events']);\n          this.currentUserSubject.next(user.result);\n        }\n\n        return user;\n      }));\n  }\n\n  // getMenu() {\n  //   return this.currentUserSubject.asObservable();\n  // }\n\n  logout() {\n    // remove user from local storage to log user out\n    localStorage.removeItem('currentUser');\n    this.currentUserSubject.next(null);\n    this.router.navigate(['/login']);\n}\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\n\r\nexport class securityKey{\r\n  accesskey: string;\r\n  secretkey: string;\r\n}\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CoreHttpService {\r\nprivate apiBaseURL: string;\r\n  constructor(private httpClient: HttpClient) {\r\n    this.apiBaseURL = environment.apiUrl;\r\n   }\r\n\r\n    /**\r\n   * HTTP GET Method\r\n   * @param enpoint string\r\n   */\r\n\r\n  get(enpoint: string): Observable<any> {\r\n    return this.httpClient.get(`${this.apiBaseURL}${enpoint}`);\r\n   }\r\n\r\n     /**\r\n   * HTTP PUT Method\r\n   * @param enpoint string\r\n   * @param data any\r\n   *\r\n   */\r\n  put(enpoint: string, data: any): Observable<any> {\r\n     return this.httpClient.put(`${this.apiBaseURL}${enpoint}`, data);\r\n  }\r\n\r\n\r\n     /**\r\n   * HTTP POST Method\r\n    * @param enpoint string\r\n  * @param data any\r\n   *\r\n   */\r\n  post(enpoint: string, data: any): Observable<any> {\r\n    return this.httpClient.post(`${this.apiBaseURL}${enpoint}`, data);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HeaderTitleService {\n    \ntitle = new BehaviorSubject('Initial Title');\n  constructor() { }\n\n  setTitle(title: string) {\n    this.title.next(title);\n  }\n}","/**\n * Created by faiz on 16/04/20. lockdown covid-19\n */\nexport * from './authentication.service';\n// export * from './request.service';\nexport * from './header-title.service';\n\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoaderService {\r\n  isLoading = new Subject<boolean>();\r\n\r\n  /** Method for show loading */\r\n  show() {\r\n      this.isLoading.next(true);\r\n  }\r\n\r\n  /** Method for hide loading */\r\n  hide() {\r\n      this.isLoading.next(false);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Router} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {environment} from '../../environments/environment';\nimport Swal from 'sweetalert2';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RequestService {\n\nprivate API_URL = environment.apiUrl;\n\n  // tslint:disable-next-line:variable-name\n  constructor(private _http: HttpClient, private route: Router) { }\n\n  // requestGetCreator(route): Observable<any> {\n  //   return this._http.get<any>(this.API_URL + '/' + route, {});\n  // }\n\n  requestGetCreator(route: string): Observable<any> {\n    return this._http.get(this.API_URL + '/' + route, {});\n    // console.log(this.API_URL + '/' + route);\n  }\n\n  requestPostCreator(route, param): Observable<any> {\n    return this._http.post<any>(this.API_URL + '/' + route, param);\n  }\n\n  confirmMessageBox(type, message) {\n  }\n\n  messageBox(type, message) {\n    Swal.fire({\n      icon: type,\n      title: '',\n      text: message,\n      timer: 1500\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\n\nimport {AuthenticationService, HeaderTitleService} from '../../_services/index';\nimport {LowerCasePipe} from '@angular/common';\nimport {NgxSpinnerService} from 'ngx-spinner';\nimport {RequestService} from '../../_services/request.service';\n\n@Component({\n  selector: 'app-admin-home',\n  templateUrl: './admin-home.component.html',\n  styleUrls: ['./admin-home.component.css']\n})\n\nexport class AdminHomeComponent implements OnInit {\n\n  responseData: any = '';\n  apiURL = '';\n  competitionData;\n  mockTestData: any = '';\n  messageType;\n  message;\n  competitionTypeTitle;\n  competitionId;\n  editData;\n\n  constructor(\n    private headerTitleService: HeaderTitleService,\n    private route: ActivatedRoute,\n    private authenticationService: AuthenticationService,\n    private lowerCasePipe: LowerCasePipe,\n    private router: Router,\n    private spinner: NgxSpinnerService,\n    private requestService: RequestService,\n  ) {\n\n  }\n\n  ngOnInit() {\n    // this.route.data.subscribe(data => {\n      // console.log(data.title)\n      // this.currentPageTitle = data.title;\n    // });\n    // this.headerTitleService.setTitle(this.currentPageTitle);\n\n    this.getMocktestList();\n  }\n\n  getMocktestList() {\n    // let requestJson = {};\n    // requestJson = { status: 'all' };\n    this.apiURL = 'get-scheduled-live-test-list';\n    this.spinner.show();\n\n    this.requestService.requestGetCreator(this.apiURL)\n      .subscribe(\n        (response: any) => {\n          this.spinner.hide();\n          if (response.response === 200) {\n            this.responseData = response.result;\n            // console.log(this.responseData);\n          } else {\n            this.messageType = response.messageType;\n            this.message = response.message;\n            this.requestService.messageBox(this.messageType, this.message);\n          }\n        },\n        (error: any) => {\n          this.spinner.hide();\n          // console.log(error);\n          this.requestService.messageBox('error', 'Something went wrong');\n        }\n      );\n  }\n\n  onRoute(root: any) {\n    localStorage.removeItem('editData');\n    localStorage.removeItem('mockTestData');\n\n    let loggedIn: any;\n    loggedIn = this.authenticationService.currentUserValue;\n    loggedIn = this.lowerCasePipe.transform(loggedIn.role);\n\n    this.router.navigate([loggedIn + '/scheduled-mock-test-list']);\n  }\n}\n","    <!-- Main content -->\n    <section class=\"content\">\n      <ngx-spinner\n        bdColor=\"rgba(51,51,51,0.8)\"\n        size=\"medium\"\n        color=\"#fff\"\n        type=\"ball-clip-rotate-multiple\">\n        <p style=\"font-size: 20px; color: white; margin-top: -30px;\">Loading...</p>\n      </ngx-spinner>\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <div class=\"callout callout-info\">\n            <h4>Latest news!</h4>\n\n            <p>Add the fixed class to the body tag to get this layout. The fixed layout is your best option if your sidebar\n              is bigger than your content because it prevents extra unwanted scrolling.</p>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <section class=\"col-lg-6 connectedSortable ui-sortable\">\n\n            <div class=\"box\">\n              <div class=\"box-header with-border\">\n                <h3 class=\"box-title\">Scheduled Mock Test</h3>\n                <div class=\"box-tools pull-right\">\n                  <button type=\"button\" class=\"btn btn-primary btn-sm\" data-toggle=\"tooltip\"\n                          title=\"scheduled mock test list\" (click)=\"onRoute('scheduled')\">\n                    Scheduled Mock Test</button>\n                </div>\n              </div>\n              <div class=\"box-body table-responsive\">\n                <table class=\"table table-hover table-bordered\">\n                  <thead>\n                  <tr style=\"background-color: #f9f9f9;\">\n                    <th>Mock Test</th>\n                    <th>Start Date-Time</th>\n                    <th>End Date-Time</th>\n                    <th>Status</th>\n                  </tr>\n                  </thead>\n                  <tbody>\n                  <tr *ngFor=\"let data of responseData\">\n                    <td>{{ data.test_title }}</td>\n                    <td>{{ data.start_date }} - {{ data.start_time }}</td>\n                    <td>{{ data.end_date }} - {{ data.end_time }}</td>\n                    <td [ngStyle]=\"{'color': (data.status==='pending') ? '#a94442' : (data.status==='active') ? '#28a745' : '#ffc107'}\">\n                      <b>{{ data.status | titlecase }}</b></td>\n                  </tr>\n                  </tbody>\n                </table>\n              </div>\n              <!-- /.box-body -->\n              <div class=\"box-footer\">\n<!--                Footer-->\n              </div>\n              <!-- /.box-footer-->\n            </div>\n        </section>\n\n        <section class=\"col-lg-6 connectedSortable ui-sortable\">\n            <div class=\"box\">\n              <div class=\"box-header with-border\">\n                <h3 class=\"box-title\">Q. & A. Section</h3>\n                <div class=\"box-tools pull-right\">\n<!--                  <button type=\"button\" class=\"btn btn-primary btn-sm\" data-toggle=\"tooltip\"-->\n<!--                          title=\"scheduled mock test list\" (click)=\"onRoute('scheduled')\">-->\n<!--                    Scheduled Mock Test</button>-->\n                </div>\n              </div>\n              <div class=\"box-body table-responsive tbody\">\n                <table class=\"table table-hover table-bordered\">\n                  <tbody>\n                  <tr *ngFor=\"let data of responseData\">\n                    <td>\n                      <div class=\"user-block\">\n                        <img class=\"img-circle img-bordered-sm\" src=\"assets/images/user_no_image.png\" alt=\"User Image\">\n                        <span class=\"username\">\n                          <a href=\"#\">Sarah Ross</a>\n                          <span class=\"description pull-right\">3 days ago</span>\n                        </span>\n                        <span class=\"description\">Sent you a message\n                        Add the fixed class to the body tag to get this layout.\n                          The fixed layout is your best option if your sidebar is bigger\n                          than your content <a href=\"#\" class=\"\" style=\"color: blue\">View</a></span>\n                      </div>\n                    </td>\n                  </tr>\n\n                  </tbody>\n                </table>\n              </div>\n              <!-- /.box-body -->\n              <div class=\"box-footer\">\n<!--                Footer-->\n              </div>\n              <!-- /.box-footer-->\n            </div>\n        </section>\n      </div>\n      <!-- Default box -->\n      <!-- /.box -->\n\n    </section>\n","import { ViewHubComponent } from './../commonn/hub-management/view-hub/view-hub.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdminHomeComponent } from './admin-home/admin-home.component';\nimport { AuthGuard } from '../_guards';\nimport { Role } from '../_model';\nimport { HomeComponent } from '../commonn/home/home.component';\nimport { CreateHubComponent } from '../commonn/hub-management/create-hub/create-hub.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    data: { title: 'Home' },\n    children: [\n      {\n        path: '', component: HomeComponent,\n        data: {\n          title: 'Dashboard',\n          breadcrumb: 'Dashboard'\n          }\n      },\n      \n      {\n        path: 'home',\n        component: HomeComponent,\n        // canActivate: [AuthGuard],\n        data: {\n          // roles: [Role.Admin],\n          title: 'Dashboard',\n          breadcrumb: 'Dashboard'\n        }\n      },\n      \n    \n    //----------------------------------hub-management-------------------//\n    {\n      path: 'create-hub',\n      component: CreateHubComponent,\n      // canActivate: [AuthGuard],\n      data: {\n        // roles: [Role.Admin],\n        title: 'Create Hub',\n        breadcrumb: 'Create Hub'\n      }\n    },\n    {\n      path: 'view-hub',\n      component: ViewHubComponent,\n      // canActivate: [AuthGuard],\n      data: {\n        // roles: [Role.Admin],\n        title: 'View Hub',\n        breadcrumb: 'View Hub'\n      }\n    },\n   \n\n    \n\n    \n\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\nexports: [RouterModule]\n})\nexport class AdminRoutingModule { }\n","import { NgModule, } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxSpinnerModule } from \"ngx-spinner\";\nimport { AdminRoutingModule } from './admin-routing.module';\nimport { AdminHomeComponent } from './admin-home/admin-home.component';\nimport { CommonnModule } from '../commonn/commonn.module';\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {NgxPaginationModule} from \"ngx-pagination\";\nimport { MaterialDesignModule } from '../material-design/material-design.module';\n\n// import { CreateCompetitionComponent } from '../commonn/create-competition.component';\n\n\n@NgModule({\n  declarations: [\n    AdminHomeComponent,\n    // CreateCompetitionComponent\n  ],\n  imports: [\n    NgxSpinnerModule,\n    CommonModule,\n    AdminRoutingModule,\n    CommonnModule,\n    NgxPaginationModule,\n    FormsModule,\n    MaterialDesignModule,\n  \n    \n  ]\n})\nexport class AdminModule {\n  constructor() {\n    // console.log('admin');\n  }\n}\n","import { CommonnComponent } from './commonn/commonn.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './layout/login/login.component';\nimport { DefaultLayoutComponent } from './containers';\nimport { AuthGuard } from './_guards';\nimport { Role } from './_model';\nimport {RegisterComponent} from \"./layout/register/register.component\";\n// import { AddStudentComponent } from './commonn/student/add-student/add-student.component';\n\n\n// let url: any;\n// let role: any;\n// let user: any;\n// user = JSON.parse(localStorage.getItem('currentUser'));\n// role = user.role;\n// console.log(role);\n// if (role === 'Admin') {\n//   url = 'admin';\n// } else if (role === 'Institute') {\n//   url = 'institute';\n// }\n// console.log('url', url);\n\nconst routes: Routes = [\n  {path: '', redirectTo: '/login', pathMatch: 'full'},\n  { path: 'login', component: LoginComponent , data: { title: 'Login' }},\n  { path: 'register', component: RegisterComponent , data: { title: 'Register' }},\n  {\n    path: '',\n    component: DefaultLayoutComponent,\n    data: { title: 'Home' },\n    children: [\n      {\n        path: 'admin',\n        loadChildren: () => import('./admin/admin.module').then( m => m.AdminModule ),\n        // loadChildren: './admin/admin.module#AminModule',\n        // canActivate: [AuthGuard],\n        data: {\n          // roles: [ Role.Admin ]\n        }\n      },\n      // {\n      //   path: 'institute',\n      //   loadChildren: () => import('./institute/institute.module').then(m => m.InstituteModule),\n      //   // loadChildren: '.institute/institute.module#InstituteModule',\n      //   canActivate: [AuthGuard],\n      //   data: {\n      //     roles: [ Role.Institute ]\n      //   }\n      // },\n      \n      {\n        path: 'competition',\n        loadChildren: () => import('./commonn/commonn.module').then(m => m.CommonnModule),\n        canActivate: [AuthGuard],\n        data: {\n          roles: [ Role.Admin, Role.Institute ]\n        }\n      },\n\n    \n    ]\n  },\n  { path: '**', redirectTo: '/login' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {enableTracing: false})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'web';\n}\n","\n<router-outlet>\n</router-outlet>\n\n","import { MatCheckboxModule } from '@angular/material/checkbox';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n// import { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n// import { NgxSpinnerModule } from \"ngx-spinner\";\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { SidebarComponent } from './layout/sidebar/sidebar.component';\nimport { FooterComponent } from './layout/footer/footer.component';\nimport { HeaderComponent } from './layout/header/header.component';\nimport { DefaultLayoutComponent } from './containers';\nimport { AdminModule } from './admin/admin.module';\n// import { InstituteModule } from './institute/institute.module';\nimport { CommonnModule } from './commonn/commonn.module';\nimport { LoginComponent } from './layout/login/login.component';\nimport { BreadcrumbComponent } from './layout/breadcrumb/breadcrumb.component';\nimport { JwtInterceptor } from './_helpers/jwt.interceptor';\nimport { ErrorInterceptor } from './_helpers/error.interceptor';\nimport { LoadingBarRouterModule } from '@ngx-loading-bar/router';\n// import { LoadingBarService } from '@ngx-loading-bar/core';\nimport { LoadingBarModule } from '@ngx-loading-bar/core';\nimport { RegisterComponent } from './layout/register/register.component';\nimport {NgxPaginationModule} from 'ngx-pagination';;\nimport {MatInputModule} from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { LoaderInterceptor } from './_interceptor/loader.interceptor';\nimport { HttpErrorInterceptor } from './_interceptor/http-error.interceptor';\nimport { LoaderComponent } from './commonn/loader/loader.component';\nimport { NgxSpinnerModule } from \"ngx-spinner\"; \nimport { HttpHeaderInterceptorService } from './_interceptor/http-header.interceptor';\n\n\n\nconst APP_CONTAINERS = [\n  DefaultLayoutComponent\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ...APP_CONTAINERS,\n    SidebarComponent,\n    HeaderComponent,\n    FooterComponent,\n    DefaultLayoutComponent,\n    LoginComponent,\n    BreadcrumbComponent,\n    RegisterComponent,\n    LoaderComponent,\n  ],\n  imports: [\n    // NgModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    // NoopAnimationsModule,\n    FormsModule,\n    AppRoutingModule,\n    AdminModule,\n    NgxSpinnerModule,\n   // MainPipe,\n    // InstituteModule,\n    CommonnModule,\n    HttpClientModule,\n    LoadingBarRouterModule,\n    LoadingBarModule,\n    ReactiveFormsModule,\n    FormsModule,\n    NgxPaginationModule,\n    MatInputModule,\n    MatIconModule,\n    MatCheckboxModule,\n    MatButtonModule,\n    \n\n  ],\n  exports: [\n    MatInputModule, \n    MatIconModule,\n    MatCheckboxModule,\n    MatButtonModule,\n  ],\n\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n    {provide: HTTP_INTERCEPTORS, useClass: HttpHeaderInterceptorService, multi: true},\n  //  { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n  //  { provide: HTTP_INTERCEPTORS, useClass: LoaderInterceptor, multi: true },\n  //  {provide: HTTP_INTERCEPTORS, useClass: HttpErrorInterceptor, multi: true}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'grdFilter',\r\n  pure: true\r\n})\r\nexport class GrdFilterPipe implements PipeTransform {\r\n  transform(value:any, args?: any): any {\r\n    if(!value) return null;\r\n    if(!args) return value;\r\n\r\n    args = args.toLowerCase();\r\n    return value.filter((item) => {\r\n        return JSON.stringify(item)\r\n        .toLowerCase()\r\n        .includes(args);\r\n    })\r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-commonn',\n  templateUrl: './commonn.component.html',\n  styleUrls: ['./commonn.component.css']\n})\nexport class CommonnComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>commonn works!</p>\n","import { LoginComponent } from './../layout/login/login.component';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport {CommonModule, DatePipe, LowerCasePipe, TitleCasePipe} from '@angular/common';\nimport { CommonnRoutingModule } from './commoonn-routing.module';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgxPaginationModule} from 'ngx-pagination';\nimport {TimepickerModule} from 'ngx-bootstrap/timepicker';\nimport {BsDatepickerModule, DatepickerModule} from 'ngx-bootstrap/datepicker';\nimport {MaterialDesignModule} from '../material-design/material-design.module';\nimport {ModalModule} from 'ngx-bootstrap/modal';\nimport {NgxDatatableModule} from \"@swimlane/ngx-datatable\";\nimport { CommonnComponent } from './commonn.component';\nimport { HomeComponent } from './home/home.component';\n\nimport { CreateHubComponent } from './hub-management/create-hub/create-hub.component';\nimport { ViewHubComponent } from './hub-management/view-hub/view-hub.component';\nimport { GrdFilterPipe } from './_pipe/grd-filter.pipe';\n\n\n\n\n\n@NgModule({\n  declarations: [\n    CommonnComponent,\n    HomeComponent,\n    CreateHubComponent,\n    ViewHubComponent,\n    GrdFilterPipe\n  ],\n  imports: [\n    CommonnRoutingModule,\n    CommonModule,\n    NgxSpinnerModule,\n    ReactiveFormsModule,\n    NgxPaginationModule,\n    FormsModule,\n    TimepickerModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    ModalModule.forRoot(),\n    DatepickerModule,\n    MaterialDesignModule,\n    NgxDatatableModule,\n    \n \n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  exports: [\n    NgxSpinnerModule,\n    ReactiveFormsModule,\n    NgxPaginationModule,\n    FormsModule,\n    NgxDatatableModule,\n    \n    \n   \n    \n  ],\n  providers: [TitleCasePipe, LowerCasePipe, DatePipe]\n})\nexport class CommonnModule {}\n","import {  NgModule} from '@angular/core';\nimport { Routes, RouterModule} from '@angular/router';\n// import { CreateCompetitionComponent } from './create-competition.component';\nimport { AuthGuard } from '../_guards';\nimport { Role } from '../_model';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    data: { title: 'Competition' },\n    children: [\n      // {\n      //   path: '', redirectTo: url + '/create-competition'\n      // },\n      // {\n      //   path: 'create-competition',\n      //   component: CreateCompetitionComponent,\n      //   canActivate: [AuthGuard],\n      //   data: {\n      //     roles: [Role.Admin, Role.Institute]\n      //   }\n      // }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CommonnRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n\n","<section class=\"content\">\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"box\">\n          <div class=\"box-header box-danger\">\n            <div class=\"row\">\n                <div class=\"col-lg-3 col-xs-6\">\n                  <div class=\"small-box bg-info\">\n                    <div class=\"inner\">\n                      <p>Number of Hubs</p>\n                      <h3>00</h3>\n                    </div>\n                    <div class=\"icon\">\n                      <i class=\"fa fa-hospital-o\"></i>\n                    </div>\n                    <a href=\"#\" class=\"small-box-footer\">More info <i class=\"fa fa-arrow-circle-right\"></i></a>\n                  </div>\n                </div>\n                <!-- ./col -->\n                <div class=\"col-lg-3 col-xs-6\">\n                  <div class=\"small-box bg-green\">\n                    <div class=\"inner\">\n                      <p>Number of Doctors</p>\n                      <h3>00</h3>\n                    </div>\n                    <div class=\"icon\">\n                      <i class=\"fa fa-user-md\"></i>\n                    </div>\n                    <a href=\"#\" class=\"small-box-footer\">More info <i class=\"fa fa-arrow-circle-right\"></i></a>\n                  </div>\n                </div>\n                <!-- ./col -->\n                <div class=\"col-lg-3 col-xs-6\">\n                  <div class=\"small-box bg-red\">\n                    <div class=\"inner\">\n                      <p>Number of clinics</p>\n                      <h3>00</h3>\n                    </div>\n                    <div class=\"icon\">\n                      <i class=\"fa fa-h-square\"></i>\n                    </div>\n                    <a href=\"#\" class=\"small-box-footer\">More info <i class=\"fa fa-arrow-circle-right\"></i></a>\n                  </div>\n                </div>\n                <!-- ./col -->\n                <div class=\"col-lg-3 col-xs-6\">\n                  <div class=\"small-box bg-yellow\">\n                    <div class=\"inner\">\n                      <p>Total Cases</p>\n                      <h3>00</h3>\n                    </div>\n                    <div class=\"icon\">\n                      <i class=\"fa fa-file-text-o\"></i>\n                    </div>\n                    <a href=\"#\" class=\"small-box-footer\">More info <i class=\"fa fa-arrow-circle-right\"></i></a>\n                  </div>\n                </div>\n                <!-- ./col -->\n              </div>  \n        </div>\n      </div>\n<!--chart-->\n      <div class=\"box box-primary\">\n        <!-- <div class=\"box-header\">\n          <h3 class=\"box-title\">Charts</h3>\n          <div class=\"box-tools pull-right\">\n            <button type=\"button\" class=\"btn btn-box-tool\" data-widget=\"collapse\"><i class=\"fa fa-minus\"></i>\n            </button>\n            <button type=\"button\" class=\"btn btn-box-tool\" data-widget=\"remove\"><i class=\"fa fa-times\"></i></button>\n          </div>\n        </div> -->\n        <!-- <div class=\"box-body\">\n          <div class=\"chart\">\n            <canvas id=\"areaChart\" style=\"height: 229px; width: 595px;\" height=\"286\" width=\"743\"></canvas>\n            \n            \n          </div>\n        </div> -->\n        <!-- /.box-body -->\n      </div>\n      <!-- /chart-->\n      <div class=\"box box-primary\">\n        <div class=\"box-header\">\n          <h3 class=\"box-title\">Notifications</h3>\n\n          <div class=\"box-tools pull-right\">\n            <button type=\"button\" class=\"btn btn-box-tool\" data-widget=\"collapse\"><i class=\"fa fa-minus\"></i>\n            </button>\n            <button type=\"button\" class=\"btn btn-box-tool\" data-widget=\"remove\"><i class=\"fa fa-times\"></i></button>\n          </div>\n        </div>\n        <!-- /.box-header -->\n        <div class=\"box-body\">\n          <ul class=\"products-list product-list-in-box\">\n            <li class=\"item\">\n              <div class=\"product-info\">\n                <a href=\"javascript:void(0)\" class=\"product-title\">Appointements schedules\n                  <span class=\"label label-warning pull-right\"  style=\"padding:4px\">22-June-2021</span></a>\n                <span class=\"product-description\">\n                      All appointments scheduled till Aug 21.\n                    </span>\n              </div>\n            </li>\n            <!-- /.item -->\n            <li class=\"item\">\n              <div class=\"product-info\">\n                <a href=\"javascript:void(0)\" class=\"product-title\">Clinic No. 5 Full\n                  <span class=\"label label-warning pull-right\" style=\"padding:4px\">22-Jan-2021</span></a>\n                <span class=\"product-description\">\n                      Clinic No. 5 full till Aug 21.\n                    </span>\n              </div>\n            </li>\n            <!-- /.item -->\n            <li class=\"item\">\n              <div class=\"product-info\">\n                <a href=\"javascript:void(0)\" class=\"product-title\">10 Hubs are under Maintenance\n                  <span class=\"label label-warning pull-right\" style=\"padding:4px\">22-Jan-2021</span></a>\n                <span class=\"product-description\">\n                     Hub 1 to 10 are under maintenance til further notice.\n                    </span>\n              </div>\n            </li>\n            <!-- /.item -->\n            <li class=\"item\">\n              <div class=\"product-info\">\n                <a href=\"javascript:void(0)\" class=\"product-title\">10 cases are pending\n                  <span class=\"label label-warning pull-right\" style=\"padding:4px\">22-Jan-2021</span></a>\n                <span class=\"product-description\">\n                      10 cases of July are pending.\n                    </span>\n              </div>\n            </li>\n            <!-- /.item -->\n          </ul>\n        </div>\n        <!-- /.box-body -->\n        <div class=\"box-footer text-center\">\n          <a href=\"javascript:void(0)\" class=\"uppercase\">View All Notifications</a>\n        </div>\n        <!-- /.box-footer -->\n      </div>\n \n    </div>\n    </div>\n  </section>\n  \n","import { Component, OnInit } from '@angular/core';\nimport { CreateHubModel } from 'src/app/_models/common-model';\nimport { CoreHttpService } from 'src/app/_services/coreHttpServices/core-http.service';\nimport Swal from 'sweetalert2/dist/sweetalert2.js'; \nimport { NgForm } from '@angular/forms';\nimport { NgxSpinnerService } from \"ngx-spinner\";\n@Component({\n  selector: 'app-create-hub',\n  templateUrl: './create-hub.component.html',\n  styleUrls: ['./create-hub.component.css']\n})\nexport class CreateHubComponent implements OnInit {\npublic addHubDetails: CreateHubModel = new CreateHubModel();\npublic departmentList = [{id: '1', name: 'Radiology Department (X-ray)'},\n{id: '2', name: 'Operation Theatre Complex (OT)'},\n{id: '3', name: 'Medical Department'},\n{id: '4', name: 'Outpatient department (OPD)'}]\n  constructor(private coreHttpService: CoreHttpService,  private SpinnerService: NgxSpinnerService,) { }\n\n  ngOnInit(): void {\n\n  }\n\n  /** Method to get selected deplartment*/\n  getSelectedDepartment(event) {\n      this.addHubDetails.department_name = this.departmentList.find(ele=> ele.id === event).name;\n  }\n  /** Method to create new hub */\n  onSubmit(addHubForm: NgForm) {\n    this.SpinnerService.show();\n    this.coreHttpService.post('admin/add-hub', this.addHubDetails).subscribe(res =>{\n        if(res.response === 200){\n            this.SpinnerService.hide();\n            addHubForm.reset();\n            Swal.fire('Thank you...', `${res.message}`, 'success') \n        }\n    }, error=> {\n        console.log(error)\n        this.SpinnerService.hide();\n    })\n  }\n\n}\n","<section class=\"content\">\n        <ngx-spinner bdColor=\"rgba(51, 51, 51, 0.8)\" size=\"default\" type=\"ball-spin-clockwise\">  \n                <p style=\"color: white\">Please Wait. </p>  \n                </ngx-spinner>\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"box box-danger\">\n                <div class=\"box-header\">\n                    <!-- <button class=\"pull-right\" data-toggle=\"modal\" data-target=\"#myModal\" mat-raised-button\n                        color=\"primary\">Add Class Stream</button> -->\n                </div>\n                <!--/.box-header-->\n                <form #addHubform=\"ngForm\" (ngSubmit)=\"addHubform.form.valid && onSubmit(addHubform)\" novalidate>\n                <div class=\"box-body\">\n                    <div class=\"row\">\n                      \n                            <div class=\"col-md-6\">\n                                <div class=\"form-group\">\n                                    <label for=\"hospitalName\">Hospital Name</label>\n                                    <input type=\"string\" name=\"hosName\" [(ngModel)]=\"addHubDetails.hospital_name\" #hosName=\"ngModel\" class=\"form-control\" id=\"\" placeholder=\"e.g. AIIMs Delhi\" required>\n                                    <div class=\"invalid-feedback\" *ngIf=\"addHubform.submitted && hosName.invalid\" class=\"invalid\">\n                                        <p *ngIf=\"hosName.errors?.required\">Name is required.</p>\n                                      </div>\n                                  </div>\n                            </div>\n                            <div class=\"col-md-3\">\n                                <div class=\"form-group\">\n                                    <label for=\"exampleInputEmail1\">Email address</label>\n                                    <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" name=\"emailAddress\" [(ngModel)]=\"addHubDetails.email\" #emailAddress=\"ngModel\" placeholder=\"abc@gmail.com\" required>\n                                    <div *ngIf=\"addHubform.submitted && emailAddress.invalid\" class=\"invalid\">\n                                        <p *ngIf=\"emailAddress.errors?.required\">Email is required.</p>\n                                    </div>\n                                  </div>\n                            </div>\n                        \n                        <div class=\"col-md-3\">\n                            <div class=\"form-group\">\n                                <label for=\"exampleInputEmail1\">Mobile No.</label>\n                                <input type=\"mobile\" class=\"form-control\" id=\"mobile\" name=\"mobile\" [(ngModel)]=\"addHubDetails.mobile\" #mobile=\"ngModel\" placeholder=\"mobile no.\" required>\n                                <div *ngIf=\"addHubform.submitted && mobile.invalid\" class=\"invalid\">\n                                    <p *ngIf=\"mobile.errors?.required\">Mobile is required.</p>\n                                </div>\n                              </div>\n                        </div> \n                    </div>\n                     <div class=\"row\">\n                      \n                            <div class=\"col-md-3\">\n                                <div class=\"form-group\">\n                                    <label>State</label>\n                                    <select class=\"form-control\" name=\"state\" [(ngModel)]=\"addHubDetails.state_id\" #state=\"ngModel\" required>\n                                        <option>--Select--</option>\n                                        <option [value]=\"'1'\">Delhi</option>\n                                        <!-- <option [value]=\"'2'\">Uttar-Pradesh</option>\n                                        <option [value]=\"'3'\">Hariyana</option>\n                                        <option [value]=\"'4'\">Punjab</option> -->\n                                    </select>\n                                    <div *ngIf=\"addHubform.submitted && state.invalid\" class=\"invalid\">\n                                        <p *ngIf=\"state.errors?.required\">State is required.</p>\n                                    </div>\n                                  </div>\n                            </div>\n                            <div class=\"col-md-3\">\n                                <div class=\"form-group\">\n                                    <label>District</label>\n                                    <select class=\"form-control\" name=\"district\" [(ngModel)]=\"addHubDetails.district_id\" #district=\"ngModel\" required>\n                                        <option [value]=\"'1'\">Central Delhi</option>\n                                        <option [value]=\"'2'\">East Delhi</option>\n                                        <option [value]=\"'3'\">New Delhi</option>\n                                        <option [value]=\"'4'\">North East Delhi</option>\n                                        <option [value]=\"'5'\">North West Delhi</option>\n                                        <option [value]=\"'6'\">Shahdara</option>\n                                        <option [value]=\"'7'\">South Delhi</option>\n                                        <option [value]=\"'8'\">South East Delhi</option>\n                                        <option [value]=\"'9'\">South West Delhi</option>\n                                        <option [value]=\"'10'\">West Delhi</option>\n                                    </select>\n                                   <div *ngIf=\"addHubform.submitted && district.invalid\" class=\"invalid\">\n                                        <p *ngIf=\"district.errors?.required\">District is required.</p>\n                                    </div>\n                                  </div>\n                            </div>\n                        \n                        <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                                <label for=\"exampleInputEmail1\">Address</label>\n                                <input type=\"text\" class=\"form-control\" id=\"address\" placeholder=\"e.g. South Delhi\" name=\"address\" [(ngModel)]=\"addHubDetails.address\" #address=\"ngModel\" required>\n                                <div *ngIf=\"addHubform.submitted && address.invalid\" class=\"invalid\">\n                                    <p *ngIf=\"address.errors?.required\">Address is required.</p>\n                                </div>\n                              </div>\n                        </div>\n          \n                    </div>\n                    <div class=\"row\">\n                       \n                            <div class=\"col-md-3\">\n                                <div class=\"form-group\">\n                                    <label>Department Name</label>\n                                    <select class=\"form-control\" name=\"department_name\" #department_name=\"ngModel\" [(ngModel)]=\"addHubDetails.department_id\" (change)=\"getSelectedDepartment($event.target.value)\" required>\n                                        <option>--Select--</option>\n                                        <option *ngFor=\"let list of departmentList\" [value]=\"list.id\">{{list.name}}</option>        \n                                    </select>\n                                    <div *ngIf=\"addHubform.submitted && department_name.invalid\" class=\"invalid\">\n                                        <p *ngIf=\"department_name.errors?.required\">Department name is required.</p>\n                                    </div>\n                                  </div>\n                            </div>\n                            <div class=\"col-md-3\">\n                                <div class=\"form-group\">\n                                    <label for=\"hodName\">H.O.D Name</label>\n                                    <input type=\"text\" class=\"form-control\" id=\"\" placeholder=\"name of head of department\" name=\"hodname\" [(ngModel)]=\"addHubDetails.hod_name\" #hodname=\"ngModel\" required>\n                                    <div *ngIf=\"addHubform.submitted && hodname.invalid\" class=\"invalid\">\n                                        <p *ngIf=\"hodname.errors?.required\">H.O.D name is required.</p>\n                                    </div>\n                                </div>\n                            </div>\n                        \n                        <div class=\"col-md-3\">\n                            <div class=\"form-group\">\n                                <label for=\"hodMobile\">H.O.D Contact No.</label>\n                                <input type=\"text\" class=\"form-control\" id=\"\" placeholder=\"contact of head of department\" name=\"hodcontact\" #hodcontact=\"ngModel\" [(ngModel)]=\"addHubDetails.hod_contact\" required>\n                                <div *ngIf=\"addHubform.submitted && hodcontact.invalid\" class=\"invalid\">\n                                    <p *ngIf=\"hodcontact.errors?.required\">H.O.D contact is required.</p>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md-3\">\n                            <div class=\"form-group\">\n                                <label for=\"hodMobile\">Password</label>\n                                <input type=\"password\" class=\"form-control\" id=\"\" placeholder=\"Password\" name=\"password\" [(ngModel)]=\"addHubDetails.password\" #password=\"ngModel\" required>\n                               \n                                <div *ngIf=\"addHubform.submitted && password.invalid\" class=\"invalid\">\n                                    <p *ngIf=\"password.errors?.required\">Password is required.</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <button mat-raised-button color=\"primary\" class=\"pull-right\" \n                            style=\"margin-top:23px; margin-bottom: 10px\">Save</button>\n                </div>\n                </form>\n            </div>\n        </div>\n    </div>\n    <!-- /.row -->\n</section>\n","import { Component, OnInit } from '@angular/core';\nimport { CoreHttpService } from 'src/app/_services/coreHttpServices/core-http.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { HubListModel } from 'src/app/_models/common-model';\n\n@Component({\n  selector: 'app-view-hub',\n  templateUrl: './view-hub.component.html',\n  styleUrls: ['./view-hub.component.css']\n})\nexport class ViewHubComponent implements OnInit {\npublic hubList: HubListModel[] = [];\npublic searchText : string;\n  constructor(private coreHttpService: CoreHttpService,  private spinnerService: NgxSpinnerService,) { }\n\n  ngOnInit(): void {\n      this.spinnerService.show();\n      this.coreHttpService.get(`admin/hub-list`).subscribe(res=>{\n          this.spinnerService.hide();\n          if(res.response===200){\n            this.hubList = res.result;\n          }\n      },error=>{\n          console.log(error)\n          this.spinnerService.hide();\n      })\n  }\n\n}\n","<section class=\"content\">\n        <ngx-spinner bdColor=\"rgba(51, 51, 51, 0.8)\" size=\"default\" type=\"ball-spin-clockwise\">  \n                <p style=\"color: white\">Please Wait. </p>  \n                </ngx-spinner>\n    <!-- <div class=\"row\">\n        <a class=\"btn btn pull-right\" style=\"margin-right: 12px;\" routerLink=\"\">\n            <i class=\"fa fa-download\"></i> Smaple Download\n          </a>\n        <a class=\"btn btn pull-right\" style=\"margin-right: 12px;\" routerLink=\"\">\n          <i class=\"fa fa-upload\"></i> Upload Student Data\n        </a>\n          <a class=\"btn btn pull-right\" style=\"margin-right: 12px;\" routerLink=\"\">\n            <i class=\"fa fa-plus\"></i> Add Student\n          </a>\n      </div> -->\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"box box-danger\">\n                <div class=\"box-header with-border\">\n                    <div class=\"col-md-6\">\n                        <div class=\"has-feedback\">\n                            <input type=\"text\" class=\"form-control input-md margin\" [(ngModel)]=\"searchText\" name=\"search\"\n                                placeholder=\"e.g. hospital name, location, department\">\n                            <span class=\"glyphicon glyphicon-search form-control-feedback\"></span>\n                        </div>\n                    </div>\n\n                    <div class=\"col-md-6\">\n                        <!-- <div class=\"btn-group pull-right margin\">\n                        <button type=\"button\" class=\"btn btn-default\">copy</button>\n                        <button type=\"button\" class=\"btn btn-default\">csv</button>\n                        <button type=\"button\" class=\"btn btn-default\">print</button>\n                      </div> -->\n                    </div>\n                </div>\n                <!--/.box-header-->\n                <div class=\"box-body\">\n                    <div class=\"table-responsive\">\n                        <table id=\"mytable\" class=\"table table-bordred table-striped\">\n                            <thead>\n                                <tr>\n                                    <th>S.N</th>\n                                    <th>hospital Name</th>\n                                    <th>Email ID</th>\n                                    <th>Mobile No.</th>\n                                    <th>Department Name</th>\n                                    <th>H.O.D Name</th>\n                                    <th>H.O.D Contact No.</th>\n                                    <th>Address</th>\n\n                                </tr>\n                            </thead>\n                            <tbody>\n\n                                <tr *ngFor=\"let list of hubList | grdFilter: searchText; let index=index\">\n                                    <td>{{index+1}}</td>\n                                    <td>{{list.hospital_name}}</td>\n                                    <td>{{list.email}}</td>\n                                    <td>{{list.mobile}}</td>\n                                    <td>{{list.department_name}}</td>\n                                    <td>{{list.hod_name}}</td>\n                                    <td>{{list.hod_contact}}</td>\n                                    <td>{{list.address}}</td>\n                                </tr>\n                               \n                            </tbody>\n                        </table>\n                        <div class=\"clearfix\">\n                            <mat-paginator [length]=\"50\" [pageSize]=\"10\" [pageSizeOptions]=\"[5, 10, 25, 100]\">\n                            </mat-paginator>\n                        </div>\n                       \n                    </div>\n                </div>\n                <!--/table-->\n            </div>\n        </div>\n    </div>\n    <!-- /.row -->\n</section>","import { Component, OnInit } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { LoaderService } from 'src/app/_services/loaderService/loader.service';\r\nimport { NgxSpinnerService } from \"ngx-spinner\";  \r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-loader',\r\n  templateUrl: './loader.component.html',\r\n  styleUrls: ['./loader.component.scss']\r\n})\r\nexport class LoaderComponent {\r\n  isLoading: Subject<boolean> = this.loaderService.isLoading;\r\n\r\n\r\n  constructor(private loaderService: LoaderService, private SpinnerService: NgxSpinnerService) {\r\n    this.SpinnerService.show(); \r\n\r\n    setTimeout(() => {\r\n      /** spinner ends after 5 seconds */\r\n      this.SpinnerService.hide();\r\n    }, 5000);\r\n   }\r\n}\r\n","<div *ngIf=\"isLoading | async\" class=\"overlay\">\r\n    <ngx-spinner bdColor=\"rgba(51, 51, 51, 0.8)\" size=\"default\" type=\"ball-spin-clockwise\">  \r\n        <p style=\"color: white\">Please Wait. </p>  \r\n        </ngx-spinner>\r\n</div>\r\n","import { Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-default-layout',\n  templateUrl: './default-layout.component.html',\n  styleUrls: ['./default-layout.component.css']\n})\nexport class DefaultLayoutComponent implements OnInit {\n\n  ngOnInit() {\n\n  }\n}\n","<div class=\"wrapper\">\n  <ngx-loading-bar [height]=\"'4px'\"></ngx-loading-bar>\n  <app-header></app-header>\n  <app-sidebar></app-sidebar>\n    <div class=\"content-wrapper\">\n        <app-breadcrumb></app-breadcrumb>\n      <router-outlet></router-outlet>\n    </div>\n  <app-footer></app-footer>\n</div>\n","export * from './default-layout.component'\n","export * from './default-layout';\n","import { Component, OnInit} from '@angular/core';\nimport { ActivatedRoute, Router, NavigationEnd } from '@angular/router';\n// import { IBreadCrumb } from './breadcrumb.interface';\nimport { IBreadCrumb } from './breadcrumb.interface';\nimport { filter, distinctUntilChanged } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-breadcrumb',\n  templateUrl: './breadcrumb.component.html',\n  styleUrls: ['./breadcrumb.component.css']\n})\nexport class BreadcrumbComponent implements OnInit {\n\n  public breadcrumbs: IBreadCrumb[];\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,) {\n    this.breadcrumbs = this.buildBreadCrumb(this.activatedRoute.root);\n  }\n\n  ngOnInit() {\n    // this.router.events.pipe(\n    //   filter((event: Event) => event instanceof NavigationEnd),\n    //   distinctUntilChanged(),\n    // ).subscribe(() => {\n    //   this.breadcrumbs = this.buildBreadCrumb(this.activatedRoute.root);\n    //   console.log(this.breadcrumbs);\n    // });\n\n    this.router.events.pipe(\n            filter(event => event instanceof NavigationEnd)\n        ).subscribe(() => {\n          this.breadcrumbs = this.buildBreadCrumb(this.activatedRoute.root);\n          // console.log(this.breadcrumbs);\n        });\n  }\n\n   buildBreadCrumb(route: ActivatedRoute, url: string = '', breadcrumbs: IBreadCrumb[] = []): IBreadCrumb[] {\n    // ... implementation of buildBreadCrumb\n    //If no routeConfig is avalailable we are on the root path\n    let label = route.routeConfig && route.routeConfig.data ? route.routeConfig.data.breadcrumb : '';\n    let path = route.routeConfig && route.routeConfig.data ? route.routeConfig.path : '';\n    // console.log(label);\n\n    // If the route is dynamic route such as ':id', remove it\n    const lastRoutePart = path.split('/').pop();\n    const isDynamicRoute = lastRoutePart.startsWith(':');\n    if (isDynamicRoute && !!route.snapshot) {\n      const paramName = lastRoutePart.split(':')[1];\n      path = path.replace(lastRoutePart, route.snapshot.params[paramName]);\n      label = route.snapshot.params[paramName];\n    }\n    // console.log(path, url);\n    //In the routeConfig the complete path is not available,\n    //so we rebuild it each time\n    const nextUrl = path ? `${url}/${path}` : url;\n\n    const breadcrumb: IBreadCrumb = {\n        label: label,\n        url: nextUrl,\n    };\n    // Only adding route with non-empty label\n    const newBreadcrumbs = breadcrumb.label ? [ ...breadcrumbs, breadcrumb ] : [ ...breadcrumbs];\n    if (route.firstChild) {\n        //If we are not on our current path yet,\n        //there will be more children to look after, to build our breadcumb\n        return this.buildBreadCrumb(route.firstChild, nextUrl, newBreadcrumbs);\n    }\n    // console.log(newBreadcrumbs);\n    return newBreadcrumbs;\n  }\n}\n","<section class=\"content-header\">\n  <h1 style=\"height: 22px;\"></h1>\n  <!--    <h1>-->\n  <!--      Fixed Layout-->\n  <!--      <small>Blank example to the fixed layout</small>-->\n  <!--    </h1>-->\n      <!-- <ol class=\"breadcrumb\"> -->\n        <!-- <li><a href=\"#\"><i class=\"fa fa-dashboard\"></i> Home</a></li>\n        <li><a href=\"#\">Layout</a></li>\n        <li class=\"active\">Fixed</li> -->\n      <ol class=\"breadcrumb float-sm-right\" *ngFor=\"let breadcrumb of breadcrumbs\">\n              <li class=\"breadcrumb-item active\"><a href=\"admin/home\">Home</a></li>\n              <li class=\"breadcrumb-item\">\n                  {{ breadcrumb.label }}\n              </li>\n            </ol>\n  </section>\n","import { Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  ngOnInit() {\n  }\n}\n","<footer class=\"main-footer\">\n  <div class=\"text-center\">\n<!--    <b>Version</b> 2.4.18-->\n    <strong>Copyright © 2020-2021 Healthcare</strong> All rights reserved.\n  </div>\n</footer>\n","import { Component, OnInit } from '@angular/core';\nimport {Router, ActivatedRoute, NavigationEnd} from '@angular/router';\nimport { AuthenticationService, HeaderTitleService } from 'src/app/_services';\nimport Swal from 'sweetalert2';\nimport {filter} from \"rxjs/operators\";\nimport {IBreadCrumb} from \"../breadcrumb/breadcrumb.interface\";\n// import 'ng2-sweetalert2';\n\n// import Swal from 'sweetalert2/dist/sweetalert2.js';\n\n// declare var swal: any;\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  currentPageTitle = '';\n  loggedInUser = '';\n  public pageTitle: string;\n  public breadcrumbs: IBreadCrumb[];\n\n  constructor(\n    private authenticationService: AuthenticationService,\n    private headerTitleService: HeaderTitleService,\n    private route: ActivatedRoute, private router: Router\n    ) {\n    this.breadcrumbs = this.buildBreadCrumb(this.route.root);\n  }\n\n  ngOnInit() {\n    /*-------------------set current page title on header----------------------*/\n    this.headerTitleService.title.subscribe(updatedTitle => {\n      this.currentPageTitle = updatedTitle;\n    });\n\n    let loginUser = '';\n\n    let currentUser = this.authenticationService.currentUserValue;\n    if (currentUser && currentUser.token) {\n      this.loggedInUser = currentUser.name;\n    }\n\n    this.router.events.pipe(\n      filter(event => event instanceof NavigationEnd)\n    ).subscribe(() => {\n      this.breadcrumbs = this.buildBreadCrumb(this.route.root);\n      // console.log(this.breadcrumbs);\n    });\n  }\n\n  buildBreadCrumb(route: ActivatedRoute, url: string = '', breadcrumbs: IBreadCrumb[] = []): IBreadCrumb[] {\n    // ... implementation of buildBreadCrumb\n    //If no routeConfig is avalailable we are on the root path\n    let label = route.routeConfig && route.routeConfig.data ? route.routeConfig.data.breadcrumb : '';\n    let path = route.routeConfig && route.routeConfig.data ? route.routeConfig.path : '';\n    // console.log(label);\n\n    // If the route is dynamic route such as ':id', remove it\n    const lastRoutePart = path.split('/').pop();\n    const isDynamicRoute = lastRoutePart.startsWith(':');\n    if (isDynamicRoute && !!route.snapshot) {\n      const paramName = lastRoutePart.split(':')[1];\n      path = path.replace(lastRoutePart, route.snapshot.params[paramName]);\n      label = route.snapshot.params[paramName];\n    }\n    // console.log(path, url);\n    //In the routeConfig the complete path is not available,\n    //so we rebuild it each time\n    const nextUrl = path ? `${url}/${path}` : url;\n\n    const breadcrumb: IBreadCrumb = {\n      label: label,\n      url: nextUrl,\n    };\n    // Only adding route with non-empty label\n    const newBreadcrumbs = breadcrumb.label ? [ ...breadcrumbs, breadcrumb ] : [ ...breadcrumbs];\n    if (route.firstChild) {\n      //If we are not on our current path yet,\n      //there will be more children to look after, to build our breadcumb\n      return this.buildBreadCrumb(route.firstChild, nextUrl, newBreadcrumbs);\n    }\n    // console.log(newBreadcrumbs);\n    return newBreadcrumbs;\n  }\n\n  onLogout() {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"\",\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes'\n    }).then((result) => {\n      if (result.value) {\n        this.authenticationService.logout();\n      }\n    });\n  }\n}\n","<header class=\"main-header\">\n  <!-- Logo -->\n  <a routerLink=\"/admin/home\" class=\"logo\" style=\"height: 56px;\">\n    <!-- mini logo for sidebar mini 50x50 pixels -->\n    <!-- <span class=\"logo-mini\"><b>A</b>LT</span> -->\n<!--    <span class=\"logo-mini\">Study</span>-->\n    <span class=\"logo-mini\">\n      <i class=\"fa fa-stethoscope text-danger\"></i>\n      <!-- <img src=\"assets/images/logo.png\" alt=\"\"> -->\n    </span>\n    <!-- logo for regular state and mobile devices -->\n    <!-- <span class=\"logo-lg\"><b>Admin</b>LTE</span> -->\n    <span class=\"logo-lg text-light\"><b class=\"fa fa-stethoscope\"> Health</b>care</span>\n  </a>\n  <!-- Header Navbar: style can be found in header.less -->\n  <nav class=\"navbar navbar-static-top\" style=\"box-shadow: 0 1px 6px 0 rgba(32,33,36,.28);\">\n    <!-- Sidebar toggle button-->\n    <a href=\"#\" class=\"sidebar-toggle\" data-toggle=\"push-menu\" role=\"button\">\n      <span class=\"sr-only\">Toggle navigation</span>\n      <span class=\"icon-bar\"></span>\n      <span class=\"icon-bar\"></span>\n      <span class=\"icon-bar\"></span>\n    </a>\n\n    <span class=\"header-page-title font-bold\" data-toggle=\"\" role=\"\"\n      style=\"font-size: 16px; font-weight: normal;\">\n        <!-- Dashboard -->\n        {{ breadcrumbs[0]['label'] | titlecase }}\n        <!-- <div class=\"btn-toolbar\" role=\"toolbar\">\n          <div class=\"btn-group\" role=\"group\">\n            <button class=\"btn btn-default\">Home</button>\n          </div>\n          <div class=\"btn-group\" role=\"group\">\n            <button class=\"btn btn-default\">Inbox</button>\n            \n           <span class=\"label label-success\">4</span>\n          </div>\n        </div>-->\n    </span> \n\n    <div class=\"navbar-custom-menu\">\n      <ul class=\"nav navbar-nav\"> \n       <li class=\"dropdown messages-menu\">\n         <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">\n           <i class=\"fa fa-bell\"></i>\n           <span class=\"label label-success\">4</span>\n         </a>\n         <ul class=\"dropdown-menu\">\n           <li class=\"header\">You have 4 messages</li>\n\n           <li class=\"footer\"><a href=\"#\">See All Messages</a></li>\n         </ul>\n       </li>\n        <!-- Notifications: style can be found in dropdown.less\n      <li class=\"dropdown notifications-menu\">-->\n<!--          <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">-->\n<!--            <i class=\"fa fa-bell-o\"></i>-->\n<!--            <span class=\"label label-warning\">10</span>-->\n<!--          </a>-->\n<!--          <ul class=\"dropdown-menu\">-->\n<!--            <li class=\"header\">You have 10 notifications</li>-->\n<!--            <li>-->\n              <!-- inner menu: contains the actual data -->\n<!--              <ul class=\"menu\">-->\n<!--                <li>-->\n<!--                  <a href=\"#\">-->\n<!--                    <i class=\"fa fa-users text-aqua\"></i> 5 new members joined today-->\n<!--                  </a>-->\n<!--                </li>-->\n<!--              </ul>-->\n<!--            </li>-->\n<!--            <li class=\"footer\"><a href=\"#\">View all</a></li>-->\n<!--          </ul>-->\n<!--        </li>-->\n        <!-- Tasks: style can be found in dropdown.less -->\n        <li class=\"dropdown tasks-menu\">\n<!--          <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">-->\n<!--            <i class=\"fa fa-flag-o\"></i>-->\n<!--            <span class=\"label label-danger\">9</span>-->\n<!--          </a>-->\n<!--          <ul class=\"dropdown-menu\">-->\n<!--            <li class=\"header\">You have 9 tasks</li>-->\n<!--            <li>-->\n              <!-- inner menu: contains the actual data -->\n<!--              <ul class=\"menu\">-->\n<!--                <li>&lt;!&ndash; Task item &ndash;&gt;-->\n<!--                  <a href=\"#\">-->\n<!--                    <h3>-->\n<!--                      Design some buttons-->\n<!--                      <small class=\"pull-right\">20%</small>-->\n<!--                    </h3>-->\n<!--                    <div class=\"progress xs\">-->\n<!--                      <div class=\"progress-bar progress-bar-aqua\" style=\"width: 20%\" role=\"progressbar\" aria-valuenow=\"20\" aria-valuemin=\"0\" aria-valuemax=\"100\">-->\n<!--                        <span class=\"sr-only\">20% Complete</span>-->\n<!--                      </div>-->\n<!--                    </div>-->\n<!--                  </a>-->\n<!--                </li>-->\n                <!-- end task item -->\n<!--              </ul>-->\n<!--            </li>-->\n<!--            <li class=\"footer\">-->\n<!--              <a href=\"#\">View all tasks</a>-->\n<!--            </li>-->\n<!--          </ul>-->\n<!--        </li>-->\n        <!-- User Account: style can be found in dropdown.less -->\n        <li class=\"dropdown user user-menu\">\n          <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">\n           <img src=\"assets/dist/img/user2-160x160.jpg\" class=\"user-image\" alt=\"User Image\">\n            <!-- <i class=\"fa fa-user-image\" style=\"font-size: 24px;\"></i> -->\n            <span class=\"hidden-xs\">{{ loggedInUser }}</span>\n          </a>\n          <ul class=\"dropdown-menu\">\n            <!-- User image -->\n<!--            <li class=\"user-header\">-->\n<!--              <img src=\"assets/dist/img/user2-160x160.jpg\" class=\"img-circle\" alt=\"User Image\">-->\n\n<!--              <p>-->\n<!--                Alexander Pierce - Web Developer-->\n<!--                <small>Member since Nov. 2012</small>-->\n<!--              </p>-->\n<!--            </li>-->\n            <!-- Menu Body -->\n<!--            <li class=\"user-body\">-->\n<!--              <div class=\"row\">-->\n<!--                <div class=\"col-xs-4 text-center\">-->\n<!--                  <a href=\"#\">Followers</a>-->\n<!--                </div>-->\n<!--                <div class=\"col-xs-4 text-center\">-->\n<!--                  <a href=\"#\">Sales</a>-->\n<!--                </div>-->\n<!--                <div class=\"col-xs-4 text-center\">-->\n<!--                  <a href=\"#\">Friends</a>-->\n<!--                </div>-->\n<!--              </div>-->\n              <!-- /.row -->\n<!--            </li>-->\n            <!-- Menu Footer-->\n            <li class=\"user-footer\">\n              <div class=\"pull-left\">\n                <a routerLink=\"#\" class=\"btn btn-default btn-flat\">Profile</a>\n              </div>\n              <div class=\"pull-right\">\n                <!-- <a href=\"#\" class=\"btn btn-default btn-flat\">Sign out</a> -->\n                <button (click)=\"onLogout()\" class=\"btn btn-default btn-flat\">Logout</button>\n              </div>\n            </li>\n          </ul>\n        </li>\n        <!-- Control Sidebar Toggle Button -->\n        <!-- <li>\n          <a href=\"#\" data-toggle=\"control-sidebar\"><i class=\"fa fa-gears\"></i></a>\n        </li> -->\n      </ul>\n    </div>\n  </nav>\n</header>\n","import { Component, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { AuthenticationService } from \"src/app/_services\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { CoreHttpService } from \"src/app/_services/coreHttpServices/core-http.service\";\nimport { NgxSpinnerService } from \"ngx-spinner\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.css\"]\n})\nexport class LoginComponent implements OnInit {\n  loginFormGroup: FormGroup;\n  isSubmitted = false;\n\n  returnUrl: string;\n  // isLoading = false;\n  error = \"\";\n  // roleUrl: string;\n  // model: any = {};\n\n  constructor(\n    private SpinnerService: NgxSpinnerService,\n    private _formBuilder: FormBuilder,\n    private coreHttpService: CoreHttpService,\n    private authenticationService: AuthenticationService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.loginFormGroup = this._formBuilder.group({\n      email: [\"\", Validators.required],\n      password: [\"\", Validators.required]\n    });\n  }\n\n  get formControls() {\n    return this.loginFormGroup.controls;\n  }\n\n  onLogin() {\n    this.SpinnerService.show();\n    this.isSubmitted = true;\n    if (this.loginFormGroup.invalid) {\n      return;\n    } else {\n      this.coreHttpService\n        .post(\"admin/login\", this.loginFormGroup.value)\n        .subscribe(\n          data => {\n            //  this.isLoading = false;\n            if (data.response === 200) {\n              this.loginFormGroup.reset(this.loginFormGroup.value);\n              this.SpinnerService.hide();\n              // store user details and jwt token in local storage to keep user logged in between page refreshes\n              localStorage.setItem(\"currentUser\", JSON.stringify(data.result));\n              this.returnUrl =\n                data.result.role === \"Institute\" ? \"/institute\" : \"/admin\";\n              this.router.navigate([this.returnUrl]);\n            } else {\n              this.error = \"Email or Password Doesn't Exist!\";\n            }\n          },\n          error => {\n            this.SpinnerService.hide();\n             this.handleError(error);\n          }\n        );\n    }\n    //   // this.isLoading = true;\n    //   console.log('call');\n    //   this.router.navigate(['/add-student']);\n    // console.log(this.model.email);\n\n    // const data = {email: userData.username.value , password: userData.password.value , mode: 'web', device_id : null};\n  }\n    handleError(errorData) {\n      this.error = errorData;\n    }\n}\n","<section class=\"login_wrapper\">\n        <ngx-spinner bdColor=\"rgba(51, 51, 51, 0.8)\" size=\"default\" type=\"ball-spin-clockwise\">  \n                <p style=\"color: white\">Please Wait. </p>  \n                </ngx-spinner>\n    <div class=\"login_form div1 login-form-1\">\n        <div class=\"row\">\n            <label></label>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-md-5 col-md-offset-1 text-center\">\n                <!--<img class=\"custom-w-h\" src=\"assets/theme/img/letswim_login_logo.png\" width=\"\" alt=\" logo\">-->\n            </div>\n        </div>\n        <div class=\"row\">\n            <p class=\"login-box-msg\"><strong>SIGN IN</strong></p>\n            <!-- <div class=\"col-md-10 col-md-offset-1\">\n                <p class=\"login-box-msg alert alert-danger\"><strong></strong></p>\n            </div>   -->\n        </div>\n      \n        <div class=\"row\">\n            <div class=\"col-md-10 col-md-offset-1 col-xs-10 col-xs-offset-1\" style=\"text-align: center;\">  \n              <form class=\"example-full-width\" [formGroup]=\"loginFormGroup\" (ngSubmit)=\"onLogin()\">\n                <mat-form-field appearance=\"\">\n                  <mat-label>Enter your email</mat-label>\n                  <input matInput placeholder=\"abc@example.com\" formControlName=\"email\" required>\n                  <mat-icon matSuffix>email</mat-icon>\n                  <mat-error *ngIf=\"isSubmitted && formControls.email.errors\">\n                    <div *ngIf=\"formControls.email.errors.required\">Email is required</div>\n                  </mat-error>\n                </mat-form-field>\n              \n                <mat-form-field class=\"example-full-width\">\n                  <mat-label>Enter Password</mat-label>\n                  <input matInput type=\"password\" formControlName=\"password\" placeholder=\"password\" required>\n                  <mat-icon matSuffix>lock</mat-icon>\n                  <mat-error *ngIf=\"isSubmitted && formControls.password.errors\">\n                    <div *ngIf=\"formControls.password.errors.required\">Password is required</div>\n                  </mat-error>\n                </mat-form-field>\n                <section class=\"example-section\" style=\"margin-left: -37px;\">\n                  <mat-checkbox class=\"example\" color=\"primary\">Remember Password</mat-checkbox>\n                </section>\n                <button mat-raised-button color=\"primary\">Login</button>\n              </form>\n            \n              <br>\n              <br>\n              <a href=\"\">I forgot my password</a>\n            </div>\n        </div>\n       \n        <div class=\"col-md-12 col-xs-12 panel-footer login-footer\">\n            © 2021 Eduqik\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {MustMatch} from '../../_helpers/must-match.validator';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  registerForm: FormGroup;\n  submitted = false;\n  isLoading = false;\n  error = '';\n  roleUrl: string;\n\n  // phoneNumber = \"^(\\+\\d{1,3}[- ]?)?\\d{10}$\";\n\n  constructor(private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      emailId: ['', [Validators.required, Validators.email]],\n      mobile: ['', [Validators.required, Validators.pattern(\"^((\\\\+91-?)|0)?[0-9]{10}$\")]],\n      // instituteIcon: ['', Validators.required, requiredFileType('png')],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      confirmPassword: ['', Validators.required],\n    }, {\n      validator: MustMatch('password', 'confirmPassword')\n    });\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.registerForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n      return;\n    }\n\n    console.log(this.registerForm.value);\n\n    // this.authenticationService.login(this.model)\n    //   .subscribe(\n    //     data => {\n    //       this.isLoading = false;\n    //       this.error = '';\n    //       if (data.response !== 401) {\n    //         this.returnUrl = data.result.role === 'Institute' ? '/institute' : '/admin';\n    //         // console.log(data.result.role);\n    //         // console.log(this.returnUrl);\n    //         // return;\n    //         this.router.navigate([this.returnUrl]);\n    //         // console.log(this.router.navigate([this.returnUrl]));\n    //       } else {\n    //         this.error = \"Email or Password Doesn't Exist!\";\n    //         // console.log(this.error);\n    //       }\n    //     },\n    //     error => {\n    //       this.isLoading = false;\n    //       this.handleError(error);\n    //       // console.log('not', error);\n    //     }\n    //   );\n\n    // display form values on success\n    // alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(this.registerForm.value, null, 4));\n  }\n\n  handleError(errorData) {\n    this.error = errorData;\n    this.isLoading = false;\n  }\n\n  onReset() {\n    console.log('call');\n    this.submitted = false;\n    this.registerForm.reset();\n  }\n\n}\n","<section class=\"login_wrapper\">\n  <div class=\"login_form div1 login-form-1\">\n    <!-- <div class=\"row\">\n      <div class=\"col-md-12 col-md-offset-2 text-center\"> -->\n        <!--<img class=\"custom-w-h\" src=\"assets/theme/img/letswim_login_logo.png\" width=\"\" alt=\" logo\">-->\n      <!-- </div>\n    </div> -->\n    <div class=\"row\">\n      <p class=\"login-box-msg\"><strong>REGISTER</strong></p>\n      <div class=\"col-md-10 col-md-offset-1\" *ngIf=\"error\">\n          <p class=\"login-box-msg alert alert-danger\"><strong>{{ error }}</strong></p>\n      </div>  \n  </div>\n    <div class=\"row\">\n        <form style=\"padding: 12px;\" [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"col-md-12\">\n        <div class=\"col-md-6\">\n          <div class=\"form-group\">\n            <label for=\"firstName\">First Name <span class=\"m-t-5\"> *</span></label>\n            <input type=\"text\" formControlName=\"firstName\" id=\"firstName\" class=\"form-control\" \n            [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\" />\n            <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"f.firstName.errors.required\">First Name is required</div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-md-6\">\n          <div class=\"form-group\">\n            <label for=\"lastName\">First Name <span class=\"m-t-5\"> *</span></label>\n            <input type=\"text\" formControlName=\"lastName\" id=\"lastName\" class=\"form-control\" \n            [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\" />\n            <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"f.lastName.errors.required\">First Name is required</div>\n            </div>\n          </div>\n        </div> \n      </div>\n      <div class=\"col-md-12\">\n        <div class=\"col-md-12\">\n          <div class=\"form-group\">\n            <label for=\"emailId\">Email Id<span class=\"m-t-5\"> *</span></label>\n            <input type=\"text\" formControlName=\"emailId\" id=\"emailId\" class=\"form-control\" \n            [ngClass]=\"{ 'is-invalid': submitted && f.emailId.errors }\" />\n            <div *ngIf=\"submitted && f.emailId.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"f.emailId.errors.required\">Email is required</div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md-12\">\n        <div class=\"col-md-12\">\n          <div class=\"form-group\">\n            <label for=\"password\">Password<span class=\"m-t-5\"> *</span></label>\n            <input type=\"text\" formControlName=\"password\" id=\"password\" class=\"form-control\" \n            [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n            <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"f.password.errors.required\">Password is required</div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md-12\">\n        <div class=\"col-md-12\">\n          <div class=\"form-group\">\n            <label for=\"confirmPassword\">Confirm Password<span class=\"m-t-5\"> *</span></label>\n            <input type=\"text\" formControlName=\"confirmPassword\" id=\"confirmPassword\" class=\"form-control\" \n            [ngClass]=\"{ 'is-invalid': submitted && f.confirmPassword.errors }\" />\n            <div *ngIf=\"submitted && f.confirmPassword.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"f.confirmPassword.errors.required\">Confirm password</div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-md-8 col-xs-8 col-md-offset-2 col-xs-offset-2 text-center\">\n          <button type=\"submit\" class=\"btn btn-info btn-block btn-flat\" style=\"margin-top: 20px;\">\n              Register\n              <i *ngIf=\"isLoading\" class=\"fa fa-spinner fa-spin\"></i>\n          </button>\n          You have an account?<a routerLink=\"/login\"> Login</a>\n      </div>\n      </div>\n      </form>\n      </div>\n    \n\n\n\n    <!-- <div class=\"row\">\n      <div class=\"col-md-12\">\n        <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n          <div class=\"form-row\">\n            <div class=\"col-md-6\">\n              <div class=\"form-group\">\n                <label for=\"firstName\">First Name <span class=\"m-t-5\"> *</span></label>\n                <input type=\"text\" formControlName=\"firstName\" id=\"firstName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\" />\n                <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\n                  <div *ngIf=\"f.firstName.errors.required\">First Name is required</div>\n                </div>\n              </div>\n\n              <div class=\"form-group\">\n                <label for=\"email\">Email<span class=\"m-t-5\"> *</span></label>\n                <input type=\"text\" formControlName=\"email\" id=\"email\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\n                <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                  <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                  <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n                </div>\n              </div>\n\n              <div class=\"form-group\">\n                <label for=\"instituteName\">Institute Name<span class=\"m-t-5\"> *</span></label>\n                <input type=\"text\" formControlName=\"instituteName\" id=\"instituteName\" class=\"form-control\"\n                       [ngClass]=\"{ 'is-invalid': submitted && f.instituteName.errors }\" />\n                <div *ngIf=\"submitted && f.instituteName.errors\" class=\"invalid-feedback\">\n                  <div *ngIf=\"f.instituteName.errors.required\">Institute name is required</div>\n                </div>\n              </div>\n\n              <div class=\"form-group\">\n                <label for=\"instituteAddress\">Institute Address<span class=\"m-t-5\"> *</span></label>\n                <textarea formControlName=\"instituteAddress\" id=\"instituteAddress\" class=\"form-control\"\n                          [ngClass]=\"{ 'is-invalid': submitted && f.instituteAddress.errors }\"></textarea>\n                <div *ngIf=\"submitted && f.instituteAddress.errors\" class=\"invalid-feedback\">\n                  <div *ngIf=\"f.instituteAddress.errors.required\">Institute address is required</div>\n                </div>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"instituteInfo\">About Institute</label>\n                <textarea formControlName=\"instituteInfo\" id=\"instituteInfo\" class=\"form-control\"\n                          [ngClass]=\"{ 'is-invalid': submitted && f.instituteInfo.errors }\"></textarea>\n                <div *ngIf=\"submitted && f.instituteInfo.errors\" class=\"invalid-feedback\">\n                  <div *ngIf=\"f.instituteInfo.errors.required\">About institute address is required</div>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-md-6\">\n              <div class=\"form-group\">\n                <label for=\"lastName\">Last Name <span class=\"m-t-5\"> *</span></label>\n                <input type=\"text\" formControlName=\"lastName\" id=\"lastName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\" />\n                <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\n                  <div *ngIf=\"f.lastName.errors.required\">Last Name is required</div>\n                </div>\n              </div>\n\n              <div class=\"form-group\">\n                <label for=\"mobile\">Mobile <span class=\"m-t-5\"> *</span></label>\n                <input type=\"text\" formControlName=\"mobile\" id=\"mobile\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.mobile.errors }\" />\n                <div *ngIf=\"submitted && f.mobile.errors\" class=\"invalid-feedback\">\n                  <div *ngIf=\"f.mobile.errors.required\">Mobile number is required</div>\n                  <div *ngIf=\"f.mobile.errors.pattern\">Please, Enter 10 digit Mobile Number</div>\n                </div>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"password\">Password <span class=\"m-t-5\"> *</span></label>\n                <input type=\"password\" formControlName=\"password\" id=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                  <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                  <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters</div>\n                </div>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"confirmPassword\">Confirm Password <span class=\"m-t-5\"> *</span></label>\n                <input type=\"password\" formControlName=\"confirmPassword\" id=\"confirmPassword\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.confirmPassword.errors }\" />\n                <div *ngIf=\"submitted && f.confirmPassword.errors\" class=\"invalid-feedback\">\n                  <div *ngIf=\"f.confirmPassword.errors.required\">Confirm Password is required</div>\n                  <div *ngIf=\"f.confirmPassword.errors.mustMatch\">Passwords must match</div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <br>\n            <br>\n            <br>\n          </div>\n          <div class=\"row\">\n            <br>\n            <div class=\"text-center\">\n              <button class=\"btn btn-primary mr-1\">Register</button>\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n              <button class=\"btn btn-warning\" type=\"reset\" (click)=\"onReset()\">Cancel</button>\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n              You have an account?<a routerLink=\"/login\"> Login</a>\n            </div>\n            <br>\n          </div>\n        </form>\n      </div>\n    </div> -->\n    <div class=\"col-md-12 col-xs-12 panel-footer padding-md no-margin no-border bg-danger text-center text-white login-footer\"\n    style=\"width: 100%;\">\n    © 2021 Shri Sanatan\n</div>\n  </div>\n</section>\n","import { Component, OnInit} from '@angular/core';\n\ndeclare var $: any;\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n\n  ngOnInit() {\n    $(document).ready(() => {\n      const trees: any = $('[data-widget=\"tree\"]');\n      trees.tree();\n    });\n  }\n}\n","<!-- Left side column. contains the sidebar -->\n<aside class=\"main-sidebar\">\n  <!-- sidebar: style can be found in sidebar.less -->\n  <section class=\"sidebar\">\n    <ul class=\"sidebar-menu\" data-widget=\"tree\">\n      <!-- <li class=\"header\">MAIN NAVIGATION</li> -->\n      <li class=\"treeview\" style=\"height:auto\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{ exact: true }\">\n        <a routerLink=\"/admin/home\">\n          <i class=\"fa fa-dashboard\"></i><span>Dashboard</span>\n        </a>\n      </li>\n\n      <li class=\"treeview\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{ exact: true }\">\n        <a href=\"#\">\n          <i class=\"fa fa-hospital-o\"></i>\n          <span>Hub Management</span>\n          <span class=\"pull-right-container\">\n            <i class=\"fa fa-angle-left pull-right\"></i>\n          </span>\n        </a>\n        <ul class=\"treeview-menu\">\n          <li routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{ exact: true }\">\n            <a routerLink=\"/admin/create-hub\"><i class=\"fa fa-circle-o\"></i>Create Hub</a>\n          </li>\n          <li routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{ exact: true }\">\n            <a routerLink=\"/admin/view-hub\"><i class=\"fa fa-circle-o\"></i>View Hub</a>\n          </li>\n         \n        </ul>\n      </li>\n      \n      <!-- <li class=\"treeview\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{ exact: true }\">\n        <a href=\"#\">\n          <i class=\"fa fa-gear\"></i>\n          <span>Setting</span>\n          <span class=\"pull-right-container\">\n            <i class=\"fa fa-angle-left pull-right\"></i>\n          </span>\n        </a>\n        <ul class=\"treeview-menu\">\n          <li routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{ exact: true }\">\n            <a routerLink=\"/admin/create-class\"><i class=\"fa fa-circle-o\"></i>Create Class</a>\n          </li>\n          <li routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{ exact: true }\">\n            <a routerLink=\"/admin/create-section\"><i class=\"fa fa-circle-o\"></i>Create Section</a>\n          </li>\n          <li routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{ exact: true }\">\n            <a routerLink=\"/admin/assign-role\"><i class=\"fa fa-circle-o\"></i>Assign Role </a>\n          </li>\n          <li routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{ exact: true }\">\n            <a routerLink=\"/admin/year-promotion\"><i class=\"fa fa-circle-o\"></i>Year Promotion </a>\n          </li>\n          <li routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{ exact: true }\">\n            <a routerLink=\"/admin/renew-software\"><i class=\"fa fa-circle-o\"></i>Renew Software </a>\n          </li>\n        </ul>\n      </li> -->\n\n\n    </ul>\n  </section>\n  <!-- /.sidebar -->\n</aside>\n\n<!-- =============================================== -->","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n// import { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatSlideToggle, MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatStepperModule} from '@angular/material/stepper';\n// import { CdkStepperModule } from '@angular/cdk/stepper';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule, } from '@angular/material/checkbox';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatChipInput, MatChipsModule} from '@angular/material/chips';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatPaginator, MatPaginatorModule} from '@angular/material/paginator';\n\n\n\n \n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    // BrowserAnimationsModule,\n    // NoopAnimationsModule,\n    \n    MatProgressSpinnerModule,\n    MatButtonModule,\n    MatStepperModule,\n    FormsModule,\n    MatInputModule,\n    MatSelectModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatSlideToggleModule,\n    MatIconModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatCardModule,\n    MatInputModule,\n    MatCheckboxModule,\n    MatTooltipModule,\n    MatExpansionModule,\n    MatTabsModule,\n    MatChipsModule,\n    MatRadioModule,\n    MatCardModule,\n    MatPaginatorModule\n    \n    \n    \n   \n    \n    \n    \n    \n    \n    \n  ],\n  exports: [\n    // BrowserAnimationsModule,\n    // NoopAnimationsModule,\n    \n    MatTooltipModule,\n    MatProgressSpinnerModule,\n    MatButtonModule,\n    MatStepperModule,\n    FormsModule,\n    MatInputModule,\n    MatSelectModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatSlideToggleModule,\n    MatIconModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatCardModule,\n    MatInputModule,\n    MatCheckboxModule,\n    MatTooltipModule,\n    MatExpansionModule,\n    MatTabsModule,\n    MatChipsModule,\n    MatRadioModule,\n    MatCardModule,\n    MatPaginatorModule\n    \n    \n   \n    \n    \n    \n    \n   \n  ],\n})\nexport class MaterialDesignModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl: 'http://localhost:4200',\n  apiUrl: 'http://aiimsapi.appqik.com/public/api/',\n  apiBaseUrl: 'http://localhost:8000',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}