{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/_guards/auth.guard.ts","webpack:///src/app/_guards/index.ts","webpack:///src/app/_helpers/jwt.interceptor.ts","webpack:///src/app/_helpers/must-match.validator.ts","webpack:///src/app/_interceptor/http-header.interceptor.ts","webpack:///src/app/_model/index.ts","webpack:///src/app/_model/role.ts","webpack:///src/app/_model/user.ts","webpack:///src/app/_models/common-model.ts","webpack:///src/app/_pipe/grd-filter.pipe.ts","webpack:///src/app/_services/authentication.service.ts","webpack:///src/app/_services/coreHttpServices/core-http.service.ts","webpack:///src/app/_services/header-title.service.ts","webpack:///src/app/_services/index.ts","webpack:///src/app/_services/loaderService/loader.service.ts","webpack:///src/app/_services/request.service.ts","webpack:///src/app/admin/admin-home/admin-home.component.ts","webpack:///src/app/admin/admin-home/admin-home.component.html","webpack:///src/app/admin/admin-routing.module.ts","webpack:///src/app/admin/admin.module.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/commonn/commonn.component.ts","webpack:///src/app/commonn/commonn.component.html","webpack:///src/app/commonn/commonn.module.ts","webpack:///src/app/commonn/commoonn-routing.module.ts","webpack:///src/app/commonn/home/home.component.ts","webpack:///src/app/commonn/home/home.component.html","webpack:///src/app/commonn/hub-management/create-hub/create-hub.component.ts","webpack:///src/app/commonn/hub-management/create-hub/create-hub.component.html","webpack:///src/app/commonn/hub-management/view-hub/view-hub.component.ts","webpack:///src/app/commonn/hub-management/view-hub/view-hub.component.html","webpack:///src/app/commonn/loader/loader.component.ts","webpack:///src/app/commonn/loader/loader.component.html","webpack:///src/app/containers/default-layout/default-layout.component.ts","webpack:///src/app/containers/default-layout/default-layout.component.html","webpack:///src/app/containers/default-layout/index.ts","webpack:///src/app/containers/index.ts","webpack:///src/app/layout/breadcrumb/breadcrumb.component.ts","webpack:///src/app/layout/breadcrumb/breadcrumb.component.html","webpack:///src/app/layout/footer/footer.component.ts","webpack:///src/app/layout/footer/footer.component.html","webpack:///src/app/layout/header/header.component.ts","webpack:///src/app/layout/header/header.component.html","webpack:///src/app/layout/login/login.component.ts","webpack:///src/app/layout/login/login.component.html","webpack:///src/app/layout/register/register.component.ts","webpack:///src/app/layout/register/register.component.html","webpack:///src/app/layout/sidebar/sidebar.component.ts","webpack:///src/app/layout/sidebar/sidebar.component.html","webpack:///src/app/material-design/material-design.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AuthGuard","router","_authenticationService","route","state","currentUser","currentUserValue","data","roles","indexOf","role","navigate","queryParams","returnUrl","url","providedIn","JwtInterceptor","request","next","token","clone","setHeaders","Authorization","handle","MustMatch","controlName","matchingControlName","formGroup","control","controls","matchingControl","errors","mustMatch","value","setErrors","HttpHeaderInterceptorService","localStorage","getItem","JSON","parse","headers","Role","User","CreateHubModel","HubListModel","GrdFilterPipe","items","filter","defaultFilter","Array","isArray","filterKeys","Object","item","reduce","x","keyName","RegExp","test","some","name","AuthenticationService","_http","API_URL","apiUrl","currentUserSubject","asObservable","userData","email","password","mode","device_id","post","pipe","user","response","setItem","stringify","result","removeItem","securityKey","CoreHttpService","httpClient","apiBaseURL","enpoint","get","put","HeaderTitleService","title","LoaderService","isLoading","RequestService","param","type","message","fire","icon","text","timer","AdminHomeComponent","headerTitleService","authenticationService","lowerCasePipe","spinner","requestService","responseData","apiURL","mockTestData","getMocktestList","show","requestGetCreator","subscribe","hide","messageType","messageBox","error","root","loggedIn","transform","onRoute","selector","templateUrl","styleUrls","routes","path","children","component","breadcrumb","AdminRoutingModule","forChild","imports","AdminModule","declarations","redirectTo","pathMatch","loadChildren","m","CommonnModule","canActivate","Admin","Institute","AppRoutingModule","forRoot","enableTracing","AppComponent","APP_CONTAINERS","AppModule","provide","useClass","multi","providers","bootstrap","CommonnComponent","schemas","CommonnRoutingModule","HomeComponent","CreateHubComponent","coreHttpService","SpinnerService","addHubDetails","departmentList","event","department_name","find","ele","addHubForm","res","reset","console","log","onSubmit","getSelectedDepartment","ViewHubComponent","spinnerService","hubList","LoaderComponent","loaderService","setTimeout","DefaultLayoutComponent","BreadcrumbComponent","activatedRoute","breadcrumbs","buildBreadCrumb","events","label","routeConfig","lastRoutePart","split","pop","isDynamicRoute","startsWith","snapshot","paramName","replace","params","nextUrl","newBreadcrumbs","firstChild","FooterComponent","HeaderComponent","currentPageTitle","loggedInUser","updatedTitle","loginUser","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","logout","onLogout","LoginComponent","_formBuilder","isSubmitted","loginFormGroup","group","required","invalid","handleError","errorData","onLogin","RegisterComponent","formBuilder","submitted","registerForm","firstName","lastName","emailId","mobile","pattern","minLength","confirmPassword","validator","SidebarComponent","$","document","ready","trees","tree","MaterialDesignModule","environment","production","baseUrl","apiBaseUrl","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { AuthenticationService } from '../_services/authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  /*canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return true;\n  }\n  */\n constructor(private router: Router, private _authenticationService: AuthenticationService){}\n\n canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n   const currentUser = this._authenticationService.currentUserValue;\n\n   if (currentUser) {\n     if (route.data.roles && route.data.roles.indexOf(currentUser.role) === -1) {\n       this.router.navigate(['/login']);\n       return false;\n     }\n\n    //  otherwise  authorised so return true\n     return true;\n   }\n\n   // not logged in so redirect to login page with the return url\n   this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n   return false;\n }\n}\n","/**\n * Created by faiz on 19/04/20. lockdown covid-19\n*/\nexport * from './auth.guard';","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../_services';\n\n@Injectable({providedIn: 'root'})\nexport class JwtInterceptor implements HttpInterceptor {\n  // tslint:disable-next-line: variable-name\n  constructor(private _authenticationService: AuthenticationService) {}\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    // add authorization header with jwt token if available\n    let currentUser = this._authenticationService.currentUserValue;\n    if (currentUser && currentUser.token) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${currentUser.token}`\n        }\n      });\n    }\n    return next.handle(request);\n  }\n}","import {FormGroup} from '@angular/forms';\r\n\r\n// custom validator to check that two fields match\r\nexport function MustMatch(controlName: string, matchingControlName: string) {\r\n  return (formGroup: FormGroup) => {\r\n    const control = formGroup.controls[controlName];\r\n    const matchingControl = formGroup.controls[matchingControlName];\r\n\r\n    if (matchingControl.errors && !matchingControl.errors.mustMatch) {\r\n      // return if another validator has already found an error on the matchingControl\r\n      return;\r\n    }\r\n\r\n    // set error on matchingControl if validation fails\r\n    if (control.value !== matchingControl.value) {\r\n      matchingControl.setErrors({mustMatch: true});\r\n    } else {\r\n      matchingControl.setErrors(null);\r\n    }\r\n  };\r\n}\r\n","import {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpHeaders} from '@angular/common/http';\r\nimport {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\n\r\n\r\n@Injectable()\r\nexport class HttpHeaderInterceptorService implements HttpInterceptor {\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n  if(localStorage.getItem('currentUser')){\r\n      let currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n    if(currentUser.token) {\r\n  request = request.clone({\r\n        headers: new HttpHeaders({\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${currentUser.token}`,\r\n         })\r\n       });\r\n    }\r\n  } else {\r\n    request = request.clone({\r\n        headers: new HttpHeaders({\r\n          'Content-Type': 'application/json',\r\n         })\r\n       });\r\n  }\r\n     \r\n     return next.handle(request);\r\n     }\r\n  }\r\n","/**\n * Created by faiz on 16/04/20. lockdown covid-19\n */\nexport * from './user';\nexport * from './role';\n","export enum Role {\n  Admin     = 'Admin',\n  Institute   = 'Institute',\n  Employee  = 'Employee',\n  User      = 'User'\n}\n","import { Role } from './role';\n\nexport class User {\n    name: string;\n    institute_name: string;\n    logo: string;\n    user_image: string;\n    password: string;\n    email: string;\n    role_id: number;\n    role: Role;\n    token: string;\n    contact_number: string;\n    user_type: string;\n  }","export class CreateHubModel{\r\n    hospital_name: string;\r\n    email: string;\r\n    mobile: string;\r\n    state_id: string;\r\n    district_id: string;\r\n    address: string;\r\n    department_name: string;\r\n    department_id: string;\r\n    hod_name: string;\r\n    hod_contact: string;\r\n    password: string;\r\n}\r\n\r\nexport class HubListModel{\r\n    id: number;\r\n    hospital_name: string;\r\n    created_by: string;\r\n    admin_id: string;\r\n    email: string;\r\n    mobile: string;\r\n    state_id: string;\r\n    district_id: string;\r\n    address: string;\r\n    department_name: string;\r\n    department_id: string;\r\n    hod_name: string;\r\n    hod_contact: string;\r\n    is_active: string;\r\n    created_at: string;\r\n    updated_at: string;\r\n    profile_photo_url: string;\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'grdFilter'\r\n})\r\nexport class GrdFilterPipe implements PipeTransform {\r\n  transform(items: any, filter: any, defaultFilter: boolean): any {\r\n    if (!filter){\r\n      return items;\r\n    }\r\n\r\n    if (!Array.isArray(items)){\r\n      return items;\r\n    }\r\n\r\n    if (filter && Array.isArray(items)) {\r\n      let filterKeys = Object.keys(filter);\r\n\r\n      if (defaultFilter) {\r\n        return items.filter(item =>\r\n            filterKeys.reduce((x, keyName) =>\r\n                (x && new RegExp(filter[keyName], 'gi').test(item[keyName])) || filter[keyName] == \"\", true));\r\n      }\r\n      else {\r\n        return items.filter(item => {\r\n          return filterKeys.some((keyName) => {\r\n            return new RegExp(filter[keyName], 'gi').test(item[keyName]) || filter[keyName] == \"\";\r\n          });\r\n        });\r\n      }\r\n    }\r\n  }\r\n}","import { Injectable } from '@angular/core';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {User} from '../_model';\nimport {environment} from '../../environments/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {Router} from '@angular/router';\nimport {map} from 'rxjs/operators';\n// import Swal from 'sweetalert2';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  private currentUserSubject: BehaviorSubject<User>;\n  public currentUser: Observable<User>;\n  private API_URL = environment.apiUrl;\n\n  constructor(\n    // tslint:disable-next-line: variable-name\n    private _http: HttpClient, private router: Router) {\n      this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\n      this.currentUser = this.currentUserSubject.asObservable();\n   }\n\n   public get currentUserValue(): User {\n    return this.currentUserSubject.value;\n  }\n\n  login(userData) {\n    // const data = {email: userData.username.value , password: userData.password.value , mode: 'web', device_id : null};\n    const data = {email: userData.email , password: userData.password, mode: 'web', device_id : null};\n\n    return this._http.post<any>(this.API_URL + 'admin/login', data)\n      .pipe(map(user => {\n        // login successful if there's a jwt token in the response\n        // if (user && user.result.token) {\n        if (user && user.response !== 401) {\n          // store user details and jwt token in local storage to keep user logged in between page refreshes\n          localStorage.setItem('currentUser', JSON.stringify(user.result));\n          // this.router.navigate(['events']);\n          this.currentUserSubject.next(user.result);\n        }\n\n        return user;\n      }));\n  }\n\n  // getMenu() {\n  //   return this.currentUserSubject.asObservable();\n  // }\n\n  logout() {\n    // remove user from local storage to log user out\n    localStorage.removeItem('currentUser');\n    this.currentUserSubject.next(null);\n    this.router.navigate(['/login']);\n}\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\n\r\nexport class securityKey{\r\n  accesskey: string;\r\n  secretkey: string;\r\n}\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CoreHttpService {\r\nprivate apiBaseURL: string;\r\n  constructor(private httpClient: HttpClient) {\r\n    this.apiBaseURL = environment.apiUrl;\r\n   }\r\n\r\n    /**\r\n   * HTTP GET Method\r\n   * @param enpoint string\r\n   */\r\n\r\n  get(enpoint: string): Observable<any> {\r\n    return this.httpClient.get(`${this.apiBaseURL}${enpoint}`);\r\n   }\r\n\r\n     /**\r\n   * HTTP PUT Method\r\n   * @param enpoint string\r\n   * @param data any\r\n   *\r\n   */\r\n  put(enpoint: string, data: any): Observable<any> {\r\n     return this.httpClient.put(`${this.apiBaseURL}${enpoint}`, data);\r\n  }\r\n\r\n\r\n     /**\r\n   * HTTP POST Method\r\n    * @param enpoint string\r\n  * @param data any\r\n   *\r\n   */\r\n  post(enpoint: string, data: any): Observable<any> {\r\n    return this.httpClient.post(`${this.apiBaseURL}${enpoint}`, data);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HeaderTitleService {\n    \ntitle = new BehaviorSubject('Initial Title');\n  constructor() { }\n\n  setTitle(title: string) {\n    this.title.next(title);\n  }\n}","/**\n * Created by faiz on 16/04/20. lockdown covid-19\n */\nexport * from './authentication.service';\n// export * from './request.service';\nexport * from './header-title.service';\n\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoaderService {\r\n  isLoading = new Subject<boolean>();\r\n\r\n  /** Method for show loading */\r\n  show() {\r\n      this.isLoading.next(true);\r\n  }\r\n\r\n  /** Method for hide loading */\r\n  hide() {\r\n      this.isLoading.next(false);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Router} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {environment} from '../../environments/environment';\nimport Swal from 'sweetalert2';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RequestService {\n\nprivate API_URL = environment.apiUrl;\n\n  // tslint:disable-next-line:variable-name\n  constructor(private _http: HttpClient, private route: Router) { }\n\n  // requestGetCreator(route): Observable<any> {\n  //   return this._http.get<any>(this.API_URL + '/' + route, {});\n  // }\n\n  requestGetCreator(route: string): Observable<any> {\n    return this._http.get(this.API_URL + '/' + route, {});\n    // console.log(this.API_URL + '/' + route);\n  }\n\n  requestPostCreator(route, param): Observable<any> {\n    return this._http.post<any>(this.API_URL + '/' + route, param);\n  }\n\n  confirmMessageBox(type, message) {\n  }\n\n  messageBox(type, message) {\n    Swal.fire({\n      icon: type,\n      title: '',\n      text: message,\n      timer: 1500\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\n\nimport {AuthenticationService, HeaderTitleService} from '../../_services/index';\nimport {LowerCasePipe} from '@angular/common';\nimport {NgxSpinnerService} from 'ngx-spinner';\nimport {RequestService} from '../../_services/request.service';\n\n@Component({\n  selector: 'app-admin-home',\n  templateUrl: './admin-home.component.html',\n  styleUrls: ['./admin-home.component.css']\n})\n\nexport class AdminHomeComponent implements OnInit {\n\n  responseData: any = '';\n  apiURL = '';\n  competitionData;\n  mockTestData: any = '';\n  messageType;\n  message;\n  competitionTypeTitle;\n  competitionId;\n  editData;\n\n  constructor(\n    private headerTitleService: HeaderTitleService,\n    private route: ActivatedRoute,\n    private authenticationService: AuthenticationService,\n    private lowerCasePipe: LowerCasePipe,\n    private router: Router,\n    private spinner: NgxSpinnerService,\n    private requestService: RequestService,\n  ) {\n\n  }\n\n  ngOnInit() {\n    // this.route.data.subscribe(data => {\n      // console.log(data.title)\n      // this.currentPageTitle = data.title;\n    // });\n    // this.headerTitleService.setTitle(this.currentPageTitle);\n\n    this.getMocktestList();\n  }\n\n  getMocktestList() {\n    // let requestJson = {};\n    // requestJson = { status: 'all' };\n    this.apiURL = 'get-scheduled-live-test-list';\n    this.spinner.show();\n\n    this.requestService.requestGetCreator(this.apiURL)\n      .subscribe(\n        (response: any) => {\n          this.spinner.hide();\n          if (response.response === 200) {\n            this.responseData = response.result;\n            // console.log(this.responseData);\n          } else {\n            this.messageType = response.messageType;\n            this.message = response.message;\n            this.requestService.messageBox(this.messageType, this.message);\n          }\n        },\n        (error: any) => {\n          this.spinner.hide();\n          // console.log(error);\n          this.requestService.messageBox('error', 'Something went wrong');\n        }\n      );\n  }\n\n  onRoute(root: any) {\n    localStorage.removeItem('editData');\n    localStorage.removeItem('mockTestData');\n\n    let loggedIn: any;\n    loggedIn = this.authenticationService.currentUserValue;\n    loggedIn = this.lowerCasePipe.transform(loggedIn.role);\n\n    this.router.navigate([loggedIn + '/scheduled-mock-test-list']);\n  }\n}\n","    <!-- Main content -->\n    <section class=\"content\">\n      <ngx-spinner\n        bdColor=\"rgba(51,51,51,0.8)\"\n        size=\"medium\"\n        color=\"#fff\"\n        type=\"ball-clip-rotate-multiple\">\n        <p style=\"font-size: 20px; color: white; margin-top: -30px;\">Loading...</p>\n      </ngx-spinner>\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <div class=\"callout callout-info\">\n            <h4>Latest news!</h4>\n\n            <p>Add the fixed class to the body tag to get this layout. The fixed layout is your best option if your sidebar\n              is bigger than your content because it prevents extra unwanted scrolling.</p>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <section class=\"col-lg-6 connectedSortable ui-sortable\">\n\n            <div class=\"box\">\n              <div class=\"box-header with-border\">\n                <h3 class=\"box-title\">Scheduled Mock Test</h3>\n                <div class=\"box-tools pull-right\">\n                  <button type=\"button\" class=\"btn btn-primary btn-sm\" data-toggle=\"tooltip\"\n                          title=\"scheduled mock test list\" (click)=\"onRoute('scheduled')\">\n                    Scheduled Mock Test</button>\n                </div>\n              </div>\n              <div class=\"box-body table-responsive\">\n                <table class=\"table table-hover table-bordered\">\n                  <thead>\n                  <tr style=\"background-color: #f9f9f9;\">\n                    <th>Mock Test</th>\n                    <th>Start Date-Time</th>\n                    <th>End Date-Time</th>\n                    <th>Status</th>\n                  </tr>\n                  </thead>\n                  <tbody>\n                  <tr *ngFor=\"let data of responseData\">\n                    <td>{{ data.test_title }}</td>\n                    <td>{{ data.start_date }} - {{ data.start_time }}</td>\n                    <td>{{ data.end_date }} - {{ data.end_time }}</td>\n                    <td [ngStyle]=\"{'color': (data.status==='pending') ? '#a94442' : (data.status==='active') ? '#28a745' : '#ffc107'}\">\n                      <b>{{ data.status | titlecase }}</b></td>\n                  </tr>\n                  </tbody>\n                </table>\n              </div>\n              <!-- /.box-body -->\n              <div class=\"box-footer\">\n<!--                Footer-->\n              </div>\n              <!-- /.box-footer-->\n            </div>\n        </section>\n\n        <section class=\"col-lg-6 connectedSortable ui-sortable\">\n            <div class=\"box\">\n              <div class=\"box-header with-border\">\n                <h3 class=\"box-title\">Q. & A. Section</h3>\n                <div class=\"box-tools pull-right\">\n<!--                  <button type=\"button\" class=\"btn btn-primary btn-sm\" data-toggle=\"tooltip\"-->\n<!--                          title=\"scheduled mock test list\" (click)=\"onRoute('scheduled')\">-->\n<!--                    Scheduled Mock Test</button>-->\n                </div>\n              </div>\n              <div class=\"box-body table-responsive tbody\">\n                <table class=\"table table-hover table-bordered\">\n                  <tbody>\n                  <tr *ngFor=\"let data of responseData\">\n                    <td>\n                      <div class=\"user-block\">\n                        <img class=\"img-circle img-bordered-sm\" src=\"assets/images/user_no_image.png\" alt=\"User Image\">\n                        <span class=\"username\">\n                          <a href=\"#\">Sarah Ross</a>\n                          <span class=\"description pull-right\">3 days ago</span>\n                        </span>\n                        <span class=\"description\">Sent you a message\n                        Add the fixed class to the body tag to get this layout.\n                          The fixed layout is your best option if your sidebar is bigger\n                          than your content <a href=\"#\" class=\"\" style=\"color: blue\">View</a></span>\n                      </div>\n                    </td>\n                  </tr>\n\n                  </tbody>\n                </table>\n              </div>\n              <!-- /.box-body -->\n              <div class=\"box-footer\">\n<!--                Footer-->\n              </div>\n              <!-- /.box-footer-->\n            </div>\n        </section>\n      </div>\n      <!-- Default box -->\n      <!-- /.box -->\n\n    </section>\n","import { ViewHubComponent } from './../commonn/hub-management/view-hub/view-hub.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdminHomeComponent } from './admin-home/admin-home.component';\nimport { AuthGuard } from '../_guards';\nimport { Role } from '../_model';\nimport { HomeComponent } from '../commonn/home/home.component';\nimport { CreateHubComponent } from '../commonn/hub-management/create-hub/create-hub.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    data: { title: 'Admin' },\n    children: [\n      {\n        path: '', component: AdminHomeComponent,\n        data: {\n          title: 'Dashboard',\n          breadcrumb: 'Dashboard'\n          }\n      },\n      \n      {\n        path: 'home',\n        component: HomeComponent,\n        // canActivate: [AuthGuard],\n        data: {\n          // roles: [Role.Admin],\n          title: 'Dashboard',\n          breadcrumb: 'Dashboard'\n        }\n      },\n      \n    \n    //----------------------------------hub-management-------------------//\n    {\n      path: 'create-hub',\n      component: CreateHubComponent,\n      // canActivate: [AuthGuard],\n      data: {\n        // roles: [Role.Admin],\n        title: 'Create Hub',\n        breadcrumb: 'Create Hub'\n      }\n    },\n    {\n      path: 'view-hub',\n      component: ViewHubComponent,\n      // canActivate: [AuthGuard],\n      data: {\n        // roles: [Role.Admin],\n        title: 'View Hub',\n        breadcrumb: 'View Hub'\n      }\n    },\n   \n\n    \n\n    \n\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\nexports: [RouterModule]\n})\nexport class AdminRoutingModule { }\n","import { NgModule, } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxSpinnerModule } from \"ngx-spinner\";\nimport { AdminRoutingModule } from './admin-routing.module';\nimport { AdminHomeComponent } from './admin-home/admin-home.component';\nimport { CommonnModule } from '../commonn/commonn.module';\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {NgxPaginationModule} from \"ngx-pagination\";\nimport { MaterialDesignModule } from '../material-design/material-design.module';\n\n// import { CreateCompetitionComponent } from '../commonn/create-competition.component';\n\n\n@NgModule({\n  declarations: [\n    AdminHomeComponent,\n    // CreateCompetitionComponent\n  ],\n  imports: [\n    NgxSpinnerModule,\n    CommonModule,\n    AdminRoutingModule,\n    CommonnModule,\n    NgxPaginationModule,\n    FormsModule,\n    MaterialDesignModule,\n  \n    \n  ]\n})\nexport class AdminModule {\n  constructor() {\n    // console.log('admin');\n  }\n}\n","import { CommonnComponent } from './commonn/commonn.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './layout/login/login.component';\nimport { DefaultLayoutComponent } from './containers';\nimport { AuthGuard } from './_guards';\nimport { Role } from './_model';\nimport {RegisterComponent} from \"./layout/register/register.component\";\n// import { AddStudentComponent } from './commonn/student/add-student/add-student.component';\n\n\n// let url: any;\n// let role: any;\n// let user: any;\n// user = JSON.parse(localStorage.getItem('currentUser'));\n// role = user.role;\n// console.log(role);\n// if (role === 'Admin') {\n//   url = 'admin';\n// } else if (role === 'Institute') {\n//   url = 'institute';\n// }\n// console.log('url', url);\n\nconst routes: Routes = [\n  {path: '', redirectTo: '/login', pathMatch: 'full'},\n  { path: 'login', component: LoginComponent , data: { title: 'Login' }},\n  { path: 'register', component: RegisterComponent , data: { title: 'Register' }},\n  {\n    path: '',\n    component: DefaultLayoutComponent,\n    data: { title: 'Home' },\n    children: [\n      {\n        path: 'admin',\n        loadChildren: () => import('./admin/admin.module').then( m => m.AdminModule ),\n        // loadChildren: './admin/admin.module#AminModule',\n        // canActivate: [AuthGuard],\n        data: {\n          // roles: [ Role.Admin ]\n        }\n      },\n      // {\n      //   path: 'institute',\n      //   loadChildren: () => import('./institute/institute.module').then(m => m.InstituteModule),\n      //   // loadChildren: '.institute/institute.module#InstituteModule',\n      //   canActivate: [AuthGuard],\n      //   data: {\n      //     roles: [ Role.Institute ]\n      //   }\n      // },\n      \n      {\n        path: 'competition',\n        loadChildren: () => import('./commonn/commonn.module').then(m => m.CommonnModule),\n        canActivate: [AuthGuard],\n        data: {\n          roles: [ Role.Admin, Role.Institute ]\n        }\n      },\n\n    \n    ]\n  },\n  { path: '**', redirectTo: '/login' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {enableTracing: false})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'web';\n}\n","\n<router-outlet>\n</router-outlet>\n\n","import { MatCheckboxModule } from '@angular/material/checkbox';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n// import { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n// import { NgxSpinnerModule } from \"ngx-spinner\";\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { SidebarComponent } from './layout/sidebar/sidebar.component';\nimport { FooterComponent } from './layout/footer/footer.component';\nimport { HeaderComponent } from './layout/header/header.component';\nimport { DefaultLayoutComponent } from './containers';\nimport { AdminModule } from './admin/admin.module';\n// import { InstituteModule } from './institute/institute.module';\nimport { CommonnModule } from './commonn/commonn.module';\nimport { LoginComponent } from './layout/login/login.component';\nimport { BreadcrumbComponent } from './layout/breadcrumb/breadcrumb.component';\nimport { JwtInterceptor } from './_helpers/jwt.interceptor';\nimport { ErrorInterceptor } from './_helpers/error.interceptor';\nimport { LoadingBarRouterModule } from '@ngx-loading-bar/router';\n// import { LoadingBarService } from '@ngx-loading-bar/core';\nimport { LoadingBarModule } from '@ngx-loading-bar/core';\nimport { RegisterComponent } from './layout/register/register.component';\nimport {NgxPaginationModule} from 'ngx-pagination';;\nimport {MatInputModule} from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { LoaderInterceptor } from './_interceptor/loader.interceptor';\nimport { HttpErrorInterceptor } from './_interceptor/http-error.interceptor';\nimport { LoaderComponent } from './commonn/loader/loader.component';\nimport { NgxSpinnerModule } from \"ngx-spinner\"; \nimport { HttpHeaderInterceptorService } from './_interceptor/http-header.interceptor';\nimport { MainPipe } from './_pipe/main-pipe.module';\nimport { GrdFilterPipe } from './_pipe/grd-filter.pipe';\n\n\n\nconst APP_CONTAINERS = [\n  DefaultLayoutComponent\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ...APP_CONTAINERS,\n    SidebarComponent,\n    HeaderComponent,\n    FooterComponent,\n    DefaultLayoutComponent,\n    LoginComponent,\n    BreadcrumbComponent,\n    RegisterComponent,\n    LoaderComponent,\n    GrdFilterPipe\n  ],\n  imports: [\n    // NgModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    // NoopAnimationsModule,\n    FormsModule,\n    AppRoutingModule,\n    AdminModule,\n    NgxSpinnerModule,\n   // MainPipe,\n    // InstituteModule,\n    CommonnModule,\n    HttpClientModule,\n    LoadingBarRouterModule,\n    LoadingBarModule,\n    ReactiveFormsModule,\n    FormsModule,\n    NgxPaginationModule,\n    MatInputModule,\n    MatIconModule,\n    MatCheckboxModule,\n    MatButtonModule,\n    \n\n  ],\n  exports: [\n    MatInputModule, \n    MatIconModule,\n    MatCheckboxModule,\n    MatButtonModule,\n    GrdFilterPipe\n  ],\n\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n    {provide: HTTP_INTERCEPTORS, useClass: HttpHeaderInterceptorService, multi: true},\n  //  { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n  //  { provide: HTTP_INTERCEPTORS, useClass: LoaderInterceptor, multi: true },\n  //  {provide: HTTP_INTERCEPTORS, useClass: HttpErrorInterceptor, multi: true}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-commonn',\n  templateUrl: './commonn.component.html',\n  styleUrls: ['./commonn.component.css']\n})\nexport class CommonnComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>commonn works!</p>\n","import { LoginComponent } from './../layout/login/login.component';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport {CommonModule, DatePipe, LowerCasePipe, TitleCasePipe} from '@angular/common';\nimport { CommonnRoutingModule } from './commoonn-routing.module';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgxPaginationModule} from 'ngx-pagination';\nimport {TimepickerModule} from 'ngx-bootstrap/timepicker';\nimport {BsDatepickerModule, DatepickerModule} from 'ngx-bootstrap/datepicker';\nimport {MaterialDesignModule} from '../material-design/material-design.module';\nimport {ModalModule} from 'ngx-bootstrap/modal';\nimport {NgxDatatableModule} from \"@swimlane/ngx-datatable\";\nimport { CommonnComponent } from './commonn.component';\nimport { HomeComponent } from './home/home.component';\n\nimport { CreateHubComponent } from './hub-management/create-hub/create-hub.component';\nimport { ViewHubComponent } from './hub-management/view-hub/view-hub.component';\nimport { LoaderComponent } from './loader/loader.component';\n\n\n\n\n\n@NgModule({\n  declarations: [\n    CommonnComponent,\n    HomeComponent,\n    CreateHubComponent,\n    ViewHubComponent,\n  ],\n  imports: [\n    CommonnRoutingModule,\n    CommonModule,\n    NgxSpinnerModule,\n    ReactiveFormsModule,\n    NgxPaginationModule,\n    FormsModule,\n    TimepickerModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    ModalModule.forRoot(),\n    DatepickerModule,\n    MaterialDesignModule,\n    NgxDatatableModule,\n    \n \n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  exports: [\n    NgxSpinnerModule,\n    ReactiveFormsModule,\n    NgxPaginationModule,\n    FormsModule,\n    NgxDatatableModule,\n    \n    \n   \n    \n  ],\n  providers: [TitleCasePipe, LowerCasePipe, DatePipe]\n})\nexport class CommonnModule {}\n","import {  NgModule} from '@angular/core';\nimport { Routes, RouterModule} from '@angular/router';\n// import { CreateCompetitionComponent } from './create-competition.component';\nimport { AuthGuard } from '../_guards';\nimport { Role } from '../_model';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    data: { title: 'Competition' },\n    children: [\n      // {\n      //   path: '', redirectTo: url + '/create-competition'\n      // },\n      // {\n      //   path: 'create-competition',\n      //   component: CreateCompetitionComponent,\n      //   canActivate: [AuthGuard],\n      //   data: {\n      //     roles: [Role.Admin, Role.Institute]\n      //   }\n      // }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CommonnRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n\n","<section class=\"content\">\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"box\">\n          <div class=\"box-header box-danger\">\n            <div class=\"row\">\n                <div class=\"col-lg-3 col-xs-6\">\n                  <div class=\"small-box bg-info\">\n                    <div class=\"inner\">\n                      <p>Number of Hubs</p>\n                      <h3>06</h3>\n                    </div>\n                    <div class=\"icon\">\n                      <i class=\"fa fa-hospital-o\"></i>\n                    </div>\n                    <a href=\"#\" class=\"small-box-footer\">More info <i class=\"fa fa-arrow-circle-right\"></i></a>\n                  </div>\n                </div>\n                <!-- ./col -->\n                <div class=\"col-lg-3 col-xs-6\">\n                  <div class=\"small-box bg-green\">\n                    <div class=\"inner\">\n                      <p>Number of Doctors</p>\n                      <h3>100</h3>\n                    </div>\n                    <div class=\"icon\">\n                      <i class=\"fa fa-user-md\"></i>\n                    </div>\n                    <a href=\"#\" class=\"small-box-footer\">More info <i class=\"fa fa-arrow-circle-right\"></i></a>\n                  </div>\n                </div>\n                <!-- ./col -->\n                <div class=\"col-lg-3 col-xs-6\">\n                  <div class=\"small-box bg-red\">\n                    <div class=\"inner\">\n                      <p>Number of clinics</p>\n                      <h3>20</h3>\n                    </div>\n                    <div class=\"icon\">\n                      <i class=\"fa fa-h-square\"></i>\n                    </div>\n                    <a href=\"#\" class=\"small-box-footer\">More info <i class=\"fa fa-arrow-circle-right\"></i></a>\n                  </div>\n                </div>\n                <!-- ./col -->\n                <div class=\"col-lg-3 col-xs-6\">\n                  <div class=\"small-box bg-yellow\">\n                    <div class=\"inner\">\n                      <p>Total Cases</p>\n                      <h3>500</h3>\n                    </div>\n                    <div class=\"icon\">\n                      <i class=\"fa fa-file-text-o\"></i>\n                    </div>\n                    <a href=\"#\" class=\"small-box-footer\">More info <i class=\"fa fa-arrow-circle-right\"></i></a>\n                  </div>\n                </div>\n                <!-- ./col -->\n              </div>  \n        </div>\n      </div>\n<!--chart-->\n      <div class=\"box box-primary\">\n        <div class=\"box-header\">\n          <h3 class=\"box-title\">Charts</h3>\n          <div class=\"box-tools pull-right\">\n            <button type=\"button\" class=\"btn btn-box-tool\" data-widget=\"collapse\"><i class=\"fa fa-minus\"></i>\n            </button>\n            <button type=\"button\" class=\"btn btn-box-tool\" data-widget=\"remove\"><i class=\"fa fa-times\"></i></button>\n          </div>\n        </div>\n        <div class=\"box-body\">\n          <div class=\"chart\">\n            <canvas id=\"areaChart\" style=\"height: 229px; width: 595px;\" height=\"286\" width=\"743\"></canvas>\n            \n            \n          </div>\n        </div>\n        <!-- /.box-body -->\n      </div>\n      <!-- /chart-->\n      <div class=\"box box-primary\">\n        <div class=\"box-header\">\n          <h3 class=\"box-title\">Notifications</h3>\n\n          <div class=\"box-tools pull-right\">\n            <button type=\"button\" class=\"btn btn-box-tool\" data-widget=\"collapse\"><i class=\"fa fa-minus\"></i>\n            </button>\n            <button type=\"button\" class=\"btn btn-box-tool\" data-widget=\"remove\"><i class=\"fa fa-times\"></i></button>\n          </div>\n        </div>\n        <!-- /.box-header -->\n        <div class=\"box-body\">\n          <ul class=\"products-list product-list-in-box\">\n            <li class=\"item\">\n              <div class=\"product-info\">\n                <a href=\"javascript:void(0)\" class=\"product-title\">Appointements schedules\n                  <span class=\"label label-warning pull-right\"  style=\"padding:4px\">22-June-2021</span></a>\n                <span class=\"product-description\">\n                      All appointments scheduled till Aug 21.\n                    </span>\n              </div>\n            </li>\n            <!-- /.item -->\n            <li class=\"item\">\n              <div class=\"product-info\">\n                <a href=\"javascript:void(0)\" class=\"product-title\">Clinic No. 5 Full\n                  <span class=\"label label-warning pull-right\" style=\"padding:4px\">22-Jan-2021</span></a>\n                <span class=\"product-description\">\n                      Clinic No. 5 full till Aug 21.\n                    </span>\n              </div>\n            </li>\n            <!-- /.item -->\n            <li class=\"item\">\n              <div class=\"product-info\">\n                <a href=\"javascript:void(0)\" class=\"product-title\">10 Hubs are under Maintenance\n                  <span class=\"label label-warning pull-right\" style=\"padding:4px\">22-Jan-2021</span></a>\n                <span class=\"product-description\">\n                     Hub 1 to 10 are under maintenance til further notice.\n                    </span>\n              </div>\n            </li>\n            <!-- /.item -->\n            <li class=\"item\">\n              <div class=\"product-info\">\n                <a href=\"javascript:void(0)\" class=\"product-title\">10 cases are pending\n                  <span class=\"label label-warning pull-right\" style=\"padding:4px\">22-Jan-2021</span></a>\n                <span class=\"product-description\">\n                      10 cases of July are pending.\n                    </span>\n              </div>\n            </li>\n            <!-- /.item -->\n          </ul>\n        </div>\n        <!-- /.box-body -->\n        <div class=\"box-footer text-center\">\n          <a href=\"javascript:void(0)\" class=\"uppercase\">View All Notifications</a>\n        </div>\n        <!-- /.box-footer -->\n      </div>\n \n    </div>\n    </div>\n  </section>\n  \n","import { Component, OnInit } from '@angular/core';\nimport { CreateHubModel } from 'src/app/_models/common-model';\nimport { CoreHttpService } from 'src/app/_services/coreHttpServices/core-http.service';\nimport Swal from 'sweetalert2/dist/sweetalert2.js'; \nimport { NgForm } from '@angular/forms';\nimport { NgxSpinnerService } from \"ngx-spinner\";\n@Component({\n  selector: 'app-create-hub',\n  templateUrl: './create-hub.component.html',\n  styleUrls: ['./create-hub.component.css']\n})\nexport class CreateHubComponent implements OnInit {\npublic addHubDetails: CreateHubModel = new CreateHubModel();\npublic departmentList = [{id: '1', name: 'Radiology Department (X-ray)'},\n{id: '2', name: 'Operation Theatre Complex (OT)'},\n{id: '3', name: 'Medical Department'},\n{id: '4', name: 'Outpatient department (OPD)'}]\n  constructor(private coreHttpService: CoreHttpService,  private SpinnerService: NgxSpinnerService,) { }\n\n  ngOnInit(): void {\n\n  }\n\n  /** Method to get selected deplartment*/\n  getSelectedDepartment(event) {\n      this.addHubDetails.department_name = this.departmentList.find(ele=> ele.id === event).name;\n  }\n  /** Method to create new hub */\n  onSubmit(addHubForm: NgForm) {\n    this.SpinnerService.show();\n    this.coreHttpService.post('admin/add-hub', this.addHubDetails).subscribe(res =>{\n        if(res.response === 200){\n            this.SpinnerService.hide();\n            addHubForm.reset();\n            Swal.fire('Thank you...', `${res.message}`, 'success') \n        }\n    }, error=> {\n        console.log(error)\n        this.SpinnerService.hide();\n    })\n  }\n\n}\n","<section class=\"content\">\n        <ngx-spinner bdColor=\"rgba(51, 51, 51, 0.8)\" size=\"default\" type=\"ball-spin-clockwise\">  \n                <p style=\"color: white\">Please Wait. </p>  \n                </ngx-spinner>\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"box box-danger\">\n                <div class=\"box-header\">\n                    <!-- <button class=\"pull-right\" data-toggle=\"modal\" data-target=\"#myModal\" mat-raised-button\n                        color=\"primary\">Add Class Stream</button> -->\n                </div>\n                <!--/.box-header-->\n                <form #addHubform=\"ngForm\" (ngSubmit)=\"addHubform.form.valid && onSubmit(addHubform)\" novalidate>\n                <div class=\"box-body\">\n                    <div class=\"row\">\n                      \n                            <div class=\"col-md-6\">\n                                <div class=\"form-group\">\n                                    <label for=\"hospitalName\">Hospital Name</label>\n                                    <input type=\"string\" name=\"hosName\" [(ngModel)]=\"addHubDetails.hospital_name\" #hosName=\"ngModel\" class=\"form-control\" id=\"\" placeholder=\"e.g. AIIMs Delhi\" required>\n                                    <div class=\"invalid-feedback\" *ngIf=\"addHubform.submitted && hosName.invalid\" class=\"invalid\">\n                                        <p *ngIf=\"hosName.errors?.required\">Name is required.</p>\n                                      </div>\n                                  </div>\n                            </div>\n                            <div class=\"col-md-3\">\n                                <div class=\"form-group\">\n                                    <label for=\"exampleInputEmail1\">Email address</label>\n                                    <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" name=\"emailAddress\" [(ngModel)]=\"addHubDetails.email\" #emailAddress=\"ngModel\" placeholder=\"abc@gmail.com\" required>\n                                    <div *ngIf=\"addHubform.submitted && emailAddress.invalid\" class=\"invalid\">\n                                        <p *ngIf=\"emailAddress.errors?.required\">Email is required.</p>\n                                    </div>\n                                  </div>\n                            </div>\n                        \n                        <div class=\"col-md-3\">\n                            <div class=\"form-group\">\n                                <label for=\"exampleInputEmail1\">Mobile No.</label>\n                                <input type=\"mobile\" class=\"form-control\" id=\"mobile\" name=\"mobile\" [(ngModel)]=\"addHubDetails.mobile\" #mobile=\"ngModel\" placeholder=\"mobile no.\" required>\n                                <div *ngIf=\"addHubform.submitted && mobile.invalid\" class=\"invalid\">\n                                    <p *ngIf=\"mobile.errors?.required\">Mobile is required.</p>\n                                </div>\n                              </div>\n                        </div> \n                    </div>\n                     <div class=\"row\">\n                      \n                            <div class=\"col-md-3\">\n                                <div class=\"form-group\">\n                                    <label>State</label>\n                                    <select class=\"form-control\" name=\"state\" [(ngModel)]=\"addHubDetails.state_id\" #state=\"ngModel\" required>\n                                        <option>--Select--</option>\n                                        <option [value]=\"'1'\">Delhi</option>\n                                        <option [value]=\"'2'\">Uttar-Pradesh</option>\n                                        <option [value]=\"'3'\">Hariyana</option>\n                                        <option [value]=\"'4'\">Punjab</option>\n                                    </select>\n                                    <div *ngIf=\"addHubform.submitted && state.invalid\" class=\"invalid\">\n                                        <p *ngIf=\"state.errors?.required\">State is required.</p>\n                                    </div>\n                                  </div>\n                            </div>\n                            <div class=\"col-md-3\">\n                                <div class=\"form-group\">\n                                    <label>District</label>\n                                    <select class=\"form-control\" name=\"district\" [(ngModel)]=\"addHubDetails.district_id\" #district=\"ngModel\" required>\n                                        <option>--Select--</option>\n                                        <option [value]=\"'1'\">South Delhi</option>\n                                        <option [value]=\"'2'\">Noida</option>\n                                        <option [value]=\"'3'\">Gurugram</option>\n                                        <option [value]=\"'4'\">Chandigarh</option>\n                                    </select>\n                                   <div *ngIf=\"addHubform.submitted && district.invalid\" class=\"invalid\">\n                                        <p *ngIf=\"district.errors?.required\">District is required.</p>\n                                    </div>\n                                  </div>\n                            </div>\n                        \n                        <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                                <label for=\"exampleInputEmail1\">Address</label>\n                                <input type=\"text\" class=\"form-control\" id=\"address\" placeholder=\"e.g. South Delhi\" name=\"address\" [(ngModel)]=\"addHubDetails.address\" #address=\"ngModel\" required>\n                                <div *ngIf=\"addHubform.submitted && address.invalid\" class=\"invalid\">\n                                    <p *ngIf=\"address.errors?.required\">Address is required.</p>\n                                </div>\n                              </div>\n                        </div>\n          \n                    </div>\n                    <div class=\"row\">\n                       \n                            <div class=\"col-md-3\">\n                                <div class=\"form-group\">\n                                    <label>Department Name</label>\n                                    <select class=\"form-control\" name=\"department_name\" #department_name=\"ngModel\" [(ngModel)]=\"addHubDetails.department_id\" (change)=\"getSelectedDepartment($event.target.value)\" required>\n                                        <option>--Select--</option>\n                                        <option *ngFor=\"let list of departmentList\" [value]=\"list.id\">{{list.name}}</option>        \n                                    </select>\n                                    <div *ngIf=\"addHubform.submitted && department_name.invalid\" class=\"invalid\">\n                                        <p *ngIf=\"department_name.errors?.required\">Department name is required.</p>\n                                    </div>\n                                  </div>\n                            </div>\n                            <div class=\"col-md-3\">\n                                <div class=\"form-group\">\n                                    <label for=\"hodName\">H.O.D Name</label>\n                                    <input type=\"text\" class=\"form-control\" id=\"\" placeholder=\"name of head of department\" name=\"hodname\" [(ngModel)]=\"addHubDetails.hod_name\" #hodname=\"ngModel\" required>\n                                    <div *ngIf=\"addHubform.submitted && hodname.invalid\" class=\"invalid\">\n                                        <p *ngIf=\"hodname.errors?.required\">H.O.D name is required.</p>\n                                    </div>\n                                </div>\n                            </div>\n                        \n                        <div class=\"col-md-3\">\n                            <div class=\"form-group\">\n                                <label for=\"hodMobile\">H.O.D Contact No.</label>\n                                <input type=\"text\" class=\"form-control\" id=\"\" placeholder=\"contact of head of department\" name=\"hodcontact\" #hodcontact=\"ngModel\" [(ngModel)]=\"addHubDetails.hod_contact\" required>\n                                <div *ngIf=\"addHubform.submitted && hodcontact.invalid\" class=\"invalid\">\n                                    <p *ngIf=\"hodcontact.errors?.required\">H.O.D contact is required.</p>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md-3\">\n                            <div class=\"form-group\">\n                                <label for=\"hodMobile\">Password</label>\n                                <input type=\"password\" class=\"form-control\" id=\"\" placeholder=\"Password\" name=\"password\" [(ngModel)]=\"addHubDetails.password\" #password=\"ngModel\" required>\n                               \n                                <div *ngIf=\"addHubform.submitted && password.invalid\" class=\"invalid\">\n                                    <p *ngIf=\"password.errors?.required\">Password is required.</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <button mat-raised-button color=\"primary\" class=\"pull-right\" \n                            style=\"margin-top:23px; margin-bottom: 10px\">Save</button>\n                </div>\n                </form>\n            </div>\n        </div>\n    </div>\n    <!-- /.row -->\n</section>\n","import { Component, OnInit } from '@angular/core';\nimport { CoreHttpService } from 'src/app/_services/coreHttpServices/core-http.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { HubListModel } from 'src/app/_models/common-model';\n\n@Component({\n  selector: 'app-view-hub',\n  templateUrl: './view-hub.component.html',\n  styleUrls: ['./view-hub.component.css']\n})\nexport class ViewHubComponent implements OnInit {\npublic hubList: HubListModel[] = []\n  constructor(private coreHttpService: CoreHttpService,  private spinnerService: NgxSpinnerService,) { }\n\n  ngOnInit(): void {\n      this.spinnerService.show();\n      this.coreHttpService.get(`admin/hub-list`).subscribe(res=>{\n          this.spinnerService.hide();\n          if(res.response===200){\n            this.hubList = res.result;\n          }\n      },error=>{\n          console.log(error)\n          this.spinnerService.hide();\n      })\n  }\n\n}\n","<section class=\"content\">\n        <ngx-spinner bdColor=\"rgba(51, 51, 51, 0.8)\" size=\"default\" type=\"ball-spin-clockwise\">  \n                <p style=\"color: white\">Please Wait. </p>  \n                </ngx-spinner>\n    <!-- <div class=\"row\">\n        <a class=\"btn btn pull-right\" style=\"margin-right: 12px;\" routerLink=\"\">\n            <i class=\"fa fa-download\"></i> Smaple Download\n          </a>\n        <a class=\"btn btn pull-right\" style=\"margin-right: 12px;\" routerLink=\"\">\n          <i class=\"fa fa-upload\"></i> Upload Student Data\n        </a>\n          <a class=\"btn btn pull-right\" style=\"margin-right: 12px;\" routerLink=\"\">\n            <i class=\"fa fa-plus\"></i> Add Student\n          </a>\n      </div> -->\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"box box-danger\">\n                <div class=\"box-header with-border\">\n                    <div class=\"col-md-6\">\n                        <div class=\"has-feedback\">\n                            <input type=\"text\" class=\"form-control input-md margin\"\n                                placeholder=\"e.g. hospital name, location, department\">\n                            <span class=\"glyphicon glyphicon-search form-control-feedback\"></span>\n                        </div>\n                    </div>\n\n                    <div class=\"col-md-6\">\n                        <!-- <div class=\"btn-group pull-right margin\">\n                        <button type=\"button\" class=\"btn btn-default\">copy</button>\n                        <button type=\"button\" class=\"btn btn-default\">csv</button>\n                        <button type=\"button\" class=\"btn btn-default\">print</button>\n                      </div> -->\n                    </div>\n                </div>\n                <!--/.box-header-->\n                <div class=\"box-body\">\n                    <div class=\"table-responsive\">\n                        <table id=\"mytable\" class=\"table table-bordred table-striped\">\n                            <thead>\n                                <tr>\n                                    <th>S.N</th>\n                                    <th>hospital Name</th>\n                                    <th>Email ID</th>\n                                    <th>Mobile No.</th>\n                                    <th>Department Name</th>\n                                    <th>H.O.D Name</th>\n                                    <th>H.O.D Contact No.</th>\n                                    <th>Address</th>\n\n                                </tr>\n                            </thead>\n                            <tbody>\n\n                                <tr *ngFor=\"let list of hubList; let index=index\">\n                                    <td>{{index+1}}</td>\n                                    <td>{{list.hospital_name}}</td>\n                                    <td>{{list.email}}</td>\n                                    <td>{{list.mobile}}</td>\n                                    <td>{{list.department_name}}</td>\n                                    <td>{{list.hod_name}}</td>\n                                    <td>{{list.hod_contact}}</td>\n                                    <td>{{list.address}}</td>\n                                </tr>\n                               \n                            </tbody>\n                        </table>\n                        <div class=\"clearfix\">\n                            <mat-paginator [length]=\"50\" [pageSize]=\"10\" [pageSizeOptions]=\"[5, 10, 25, 100]\">\n                            </mat-paginator>\n                        </div>\n                       \n                    </div>\n                </div>\n                <!--/table-->\n            </div>\n        </div>\n    </div>\n    <!-- /.row -->\n</section>","import { Component, OnInit } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { LoaderService } from 'src/app/_services/loaderService/loader.service';\r\nimport { NgxSpinnerService } from \"ngx-spinner\";  \r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-loader',\r\n  templateUrl: './loader.component.html',\r\n  styleUrls: ['./loader.component.scss']\r\n})\r\nexport class LoaderComponent {\r\n  isLoading: Subject<boolean> = this.loaderService.isLoading;\r\n\r\n\r\n  constructor(private loaderService: LoaderService, private SpinnerService: NgxSpinnerService) {\r\n    this.SpinnerService.show(); \r\n\r\n    setTimeout(() => {\r\n      /** spinner ends after 5 seconds */\r\n      this.SpinnerService.hide();\r\n    }, 5000);\r\n   }\r\n}\r\n","<div *ngIf=\"isLoading | async\" class=\"overlay\">\r\n    <ngx-spinner bdColor=\"rgba(51, 51, 51, 0.8)\" size=\"default\" type=\"ball-spin-clockwise\">  \r\n        <p style=\"color: white\">Please Wait. </p>  \r\n        </ngx-spinner>\r\n</div>\r\n","import { Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-default-layout',\n  templateUrl: './default-layout.component.html',\n  styleUrls: ['./default-layout.component.css']\n})\nexport class DefaultLayoutComponent implements OnInit {\n\n  ngOnInit() {\n\n  }\n}\n","<div class=\"wrapper\">\n  <ngx-loading-bar [height]=\"'4px'\"></ngx-loading-bar>\n  <app-header></app-header>\n  <app-sidebar></app-sidebar>\n    <div class=\"content-wrapper\">\n        <app-breadcrumb></app-breadcrumb>\n      <router-outlet></router-outlet>\n    </div>\n  <app-footer></app-footer>\n</div>\n","export * from './default-layout.component'\n","export * from './default-layout';\n","import { Component, OnInit} from '@angular/core';\nimport { ActivatedRoute, Router, NavigationEnd } from '@angular/router';\n// import { IBreadCrumb } from './breadcrumb.interface';\nimport { IBreadCrumb } from './breadcrumb.interface';\nimport { filter, distinctUntilChanged } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-breadcrumb',\n  templateUrl: './breadcrumb.component.html',\n  styleUrls: ['./breadcrumb.component.css']\n})\nexport class BreadcrumbComponent implements OnInit {\n\n  public breadcrumbs: IBreadCrumb[];\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,) {\n    this.breadcrumbs = this.buildBreadCrumb(this.activatedRoute.root);\n  }\n\n  ngOnInit() {\n    // this.router.events.pipe(\n    //   filter((event: Event) => event instanceof NavigationEnd),\n    //   distinctUntilChanged(),\n    // ).subscribe(() => {\n    //   this.breadcrumbs = this.buildBreadCrumb(this.activatedRoute.root);\n    //   console.log(this.breadcrumbs);\n    // });\n\n    this.router.events.pipe(\n            filter(event => event instanceof NavigationEnd)\n        ).subscribe(() => {\n          this.breadcrumbs = this.buildBreadCrumb(this.activatedRoute.root);\n          // console.log(this.breadcrumbs);\n        });\n  }\n\n   buildBreadCrumb(route: ActivatedRoute, url: string = '', breadcrumbs: IBreadCrumb[] = []): IBreadCrumb[] {\n    // ... implementation of buildBreadCrumb\n    //If no routeConfig is avalailable we are on the root path\n    let label = route.routeConfig && route.routeConfig.data ? route.routeConfig.data.breadcrumb : '';\n    let path = route.routeConfig && route.routeConfig.data ? route.routeConfig.path : '';\n    // console.log(label);\n\n    // If the route is dynamic route such as ':id', remove it\n    const lastRoutePart = path.split('/').pop();\n    const isDynamicRoute = lastRoutePart.startsWith(':');\n    if (isDynamicRoute && !!route.snapshot) {\n      const paramName = lastRoutePart.split(':')[1];\n      path = path.replace(lastRoutePart, route.snapshot.params[paramName]);\n      label = route.snapshot.params[paramName];\n    }\n    // console.log(path, url);\n    //In the routeConfig the complete path is not available,\n    //so we rebuild it each time\n    const nextUrl = path ? `${url}/${path}` : url;\n\n    const breadcrumb: IBreadCrumb = {\n        label: label,\n        url: nextUrl,\n    };\n    // Only adding route with non-empty label\n    const newBreadcrumbs = breadcrumb.label ? [ ...breadcrumbs, breadcrumb ] : [ ...breadcrumbs];\n    if (route.firstChild) {\n        //If we are not on our current path yet,\n        //there will be more children to look after, to build our breadcumb\n        return this.buildBreadCrumb(route.firstChild, nextUrl, newBreadcrumbs);\n    }\n    // console.log(newBreadcrumbs);\n    return newBreadcrumbs;\n  }\n}\n","<section class=\"content-header\">\n  <h1 style=\"height: 22px;\"></h1>\n  <!--    <h1>-->\n  <!--      Fixed Layout-->\n  <!--      <small>Blank example to the fixed layout</small>-->\n  <!--    </h1>-->\n      <!-- <ol class=\"breadcrumb\"> -->\n        <!-- <li><a href=\"#\"><i class=\"fa fa-dashboard\"></i> Home</a></li>\n        <li><a href=\"#\">Layout</a></li>\n        <li class=\"active\">Fixed</li> -->\n      <ol class=\"breadcrumb float-sm-right\" *ngFor=\"let breadcrumb of breadcrumbs\">\n              <li class=\"breadcrumb-item active\"><a href=\"admin/home\">Home</a></li>\n              <li class=\"breadcrumb-item\">\n                  {{ breadcrumb.label }}\n              </li>\n            </ol>\n  </section>\n","import { Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  ngOnInit() {\n  }\n}\n","<footer class=\"main-footer\">\n  <div class=\"text-center\">\n<!--    <b>Version</b> 2.4.18-->\n    <strong>Copyright © 2020-2021 Healthcare</strong> All rights reserved.\n  </div>\n</footer>\n","import { Component, OnInit } from '@angular/core';\nimport {Router, ActivatedRoute, NavigationEnd} from '@angular/router';\nimport { AuthenticationService, HeaderTitleService } from 'src/app/_services';\nimport Swal from 'sweetalert2';\nimport {filter} from \"rxjs/operators\";\nimport {IBreadCrumb} from \"../breadcrumb/breadcrumb.interface\";\n// import 'ng2-sweetalert2';\n\n// import Swal from 'sweetalert2/dist/sweetalert2.js';\n\n// declare var swal: any;\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  currentPageTitle = '';\n  loggedInUser = '';\n  public pageTitle: string;\n  public breadcrumbs: IBreadCrumb[];\n\n  constructor(\n    private authenticationService: AuthenticationService,\n    private headerTitleService: HeaderTitleService,\n    private route: ActivatedRoute, private router: Router\n    ) {\n    this.breadcrumbs = this.buildBreadCrumb(this.route.root);\n  }\n\n  ngOnInit() {\n    /*-------------------set current page title on header----------------------*/\n    this.headerTitleService.title.subscribe(updatedTitle => {\n      this.currentPageTitle = updatedTitle;\n    });\n\n    let loginUser = '';\n\n    let currentUser = this.authenticationService.currentUserValue;\n    if (currentUser && currentUser.token) {\n      this.loggedInUser = currentUser.name;\n    }\n\n    this.router.events.pipe(\n      filter(event => event instanceof NavigationEnd)\n    ).subscribe(() => {\n      this.breadcrumbs = this.buildBreadCrumb(this.route.root);\n      // console.log(this.breadcrumbs);\n    });\n  }\n\n  buildBreadCrumb(route: ActivatedRoute, url: string = '', breadcrumbs: IBreadCrumb[] = []): IBreadCrumb[] {\n    // ... implementation of buildBreadCrumb\n    //If no routeConfig is avalailable we are on the root path\n    let label = route.routeConfig && route.routeConfig.data ? route.routeConfig.data.breadcrumb : '';\n    let path = route.routeConfig && route.routeConfig.data ? route.routeConfig.path : '';\n    // console.log(label);\n\n    // If the route is dynamic route such as ':id', remove it\n    const lastRoutePart = path.split('/').pop();\n    const isDynamicRoute = lastRoutePart.startsWith(':');\n    if (isDynamicRoute && !!route.snapshot) {\n      const paramName = lastRoutePart.split(':')[1];\n      path = path.replace(lastRoutePart, route.snapshot.params[paramName]);\n      label = route.snapshot.params[paramName];\n    }\n    // console.log(path, url);\n    //In the routeConfig the complete path is not available,\n    //so we rebuild it each time\n    const nextUrl = path ? `${url}/${path}` : url;\n\n    const breadcrumb: IBreadCrumb = {\n      label: label,\n      url: nextUrl,\n    };\n    // Only adding route with non-empty label\n    const newBreadcrumbs = breadcrumb.label ? [ ...breadcrumbs, breadcrumb ] : [ ...breadcrumbs];\n    if (route.firstChild) {\n      //If we are not on our current path yet,\n      //there will be more children to look after, to build our breadcumb\n      return this.buildBreadCrumb(route.firstChild, nextUrl, newBreadcrumbs);\n    }\n    // console.log(newBreadcrumbs);\n    return newBreadcrumbs;\n  }\n\n  onLogout() {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"\",\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes'\n    }).then((result) => {\n      if (result.value) {\n        this.authenticationService.logout();\n      }\n    });\n  }\n}\n","<header class=\"main-header\">\n  <!-- Logo -->\n  <a routerLink=\"/admin/home\" class=\"logo\" style=\"height: 56px;\">\n    <!-- mini logo for sidebar mini 50x50 pixels -->\n    <!-- <span class=\"logo-mini\"><b>A</b>LT</span> -->\n<!--    <span class=\"logo-mini\">Study</span>-->\n    <span class=\"logo-mini\">\n      <i class=\"fa fa-stethoscope text-danger\"></i>\n      <!-- <img src=\"assets/images/logo.png\" alt=\"\"> -->\n    </span>\n    <!-- logo for regular state and mobile devices -->\n    <!-- <span class=\"logo-lg\"><b>Admin</b>LTE</span> -->\n    <span class=\"logo-lg text-light\"><b class=\"fa fa-stethoscope\"> Health</b>care</span>\n  </a>\n  <!-- Header Navbar: style can be found in header.less -->\n  <nav class=\"navbar navbar-static-top\" style=\"box-shadow: 0 1px 6px 0 rgba(32,33,36,.28);\">\n    <!-- Sidebar toggle button-->\n    <a href=\"#\" class=\"sidebar-toggle\" data-toggle=\"push-menu\" role=\"button\">\n      <span class=\"sr-only\">Toggle navigation</span>\n      <span class=\"icon-bar\"></span>\n      <span class=\"icon-bar\"></span>\n      <span class=\"icon-bar\"></span>\n    </a>\n\n    <span class=\"header-page-title font-bold\" data-toggle=\"\" role=\"\"\n      style=\"font-size: 16px; font-weight: normal;\">\n        <!-- Dashboard -->\n        {{ breadcrumbs[0]['label'] | titlecase }}\n        <!-- <div class=\"btn-toolbar\" role=\"toolbar\">\n          <div class=\"btn-group\" role=\"group\">\n            <button class=\"btn btn-default\">Home</button>\n          </div>\n          <div class=\"btn-group\" role=\"group\">\n            <button class=\"btn btn-default\">Inbox</button>\n            \n           <span class=\"label label-success\">4</span>\n          </div>\n        </div>-->\n    </span> \n\n    <div class=\"navbar-custom-menu\">\n      <ul class=\"nav navbar-nav\"> \n       <li class=\"dropdown messages-menu\">\n         <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">\n           <i class=\"fa fa-bell\"></i>\n           <span class=\"label label-success\">4</span>\n         </a>\n         <ul class=\"dropdown-menu\">\n           <li class=\"header\">You have 4 messages</li>\n\n           <li class=\"footer\"><a href=\"#\">See All Messages</a></li>\n         </ul>\n       </li>\n        <!-- Notifications: style can be found in dropdown.less\n      <li class=\"dropdown notifications-menu\">-->\n<!--          <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">-->\n<!--            <i class=\"fa fa-bell-o\"></i>-->\n<!--            <span class=\"label label-warning\">10</span>-->\n<!--          </a>-->\n<!--          <ul class=\"dropdown-menu\">-->\n<!--            <li class=\"header\">You have 10 notifications</li>-->\n<!--            <li>-->\n              <!-- inner menu: contains the actual data -->\n<!--              <ul class=\"menu\">-->\n<!--                <li>-->\n<!--                  <a href=\"#\">-->\n<!--                    <i class=\"fa fa-users text-aqua\"></i> 5 new members joined today-->\n<!--                  </a>-->\n<!--                </li>-->\n<!--              </ul>-->\n<!--            </li>-->\n<!--            <li class=\"footer\"><a href=\"#\">View all</a></li>-->\n<!--          </ul>-->\n<!--        </li>-->\n        <!-- Tasks: style can be found in dropdown.less -->\n        <li class=\"dropdown tasks-menu\">\n<!--          <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">-->\n<!--            <i class=\"fa fa-flag-o\"></i>-->\n<!--            <span class=\"label label-danger\">9</span>-->\n<!--          </a>-->\n<!--          <ul class=\"dropdown-menu\">-->\n<!--            <li class=\"header\">You have 9 tasks</li>-->\n<!--            <li>-->\n              <!-- inner menu: contains the actual data -->\n<!--              <ul class=\"menu\">-->\n<!--                <li>&lt;!&ndash; Task item &ndash;&gt;-->\n<!--                  <a href=\"#\">-->\n<!--                    <h3>-->\n<!--                      Design some buttons-->\n<!--                      <small class=\"pull-right\">20%</small>-->\n<!--                    </h3>-->\n<!--                    <div class=\"progress xs\">-->\n<!--                      <div class=\"progress-bar progress-bar-aqua\" style=\"width: 20%\" role=\"progressbar\" aria-valuenow=\"20\" aria-valuemin=\"0\" aria-valuemax=\"100\">-->\n<!--                        <span class=\"sr-only\">20% Complete</span>-->\n<!--                      </div>-->\n<!--                    </div>-->\n<!--                  </a>-->\n<!--                </li>-->\n                <!-- end task item -->\n<!--              </ul>-->\n<!--            </li>-->\n<!--            <li class=\"footer\">-->\n<!--              <a href=\"#\">View all tasks</a>-->\n<!--            </li>-->\n<!--          </ul>-->\n<!--        </li>-->\n        <!-- User Account: style can be found in dropdown.less -->\n        <li class=\"dropdown user user-menu\">\n          <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">\n           <img src=\"assets/dist/img/user2-160x160.jpg\" class=\"user-image\" alt=\"User Image\">\n            <!-- <i class=\"fa fa-user-image\" style=\"font-size: 24px;\"></i> -->\n            <span class=\"hidden-xs\">{{ loggedInUser }}</span>\n          </a>\n          <ul class=\"dropdown-menu\">\n            <!-- User image -->\n<!--            <li class=\"user-header\">-->\n<!--              <img src=\"assets/dist/img/user2-160x160.jpg\" class=\"img-circle\" alt=\"User Image\">-->\n\n<!--              <p>-->\n<!--                Alexander Pierce - Web Developer-->\n<!--                <small>Member since Nov. 2012</small>-->\n<!--              </p>-->\n<!--            </li>-->\n            <!-- Menu Body -->\n<!--            <li class=\"user-body\">-->\n<!--              <div class=\"row\">-->\n<!--                <div class=\"col-xs-4 text-center\">-->\n<!--                  <a href=\"#\">Followers</a>-->\n<!--                </div>-->\n<!--                <div class=\"col-xs-4 text-center\">-->\n<!--                  <a href=\"#\">Sales</a>-->\n<!--                </div>-->\n<!--                <div class=\"col-xs-4 text-center\">-->\n<!--                  <a href=\"#\">Friends</a>-->\n<!--                </div>-->\n<!--              </div>-->\n              <!-- /.row -->\n<!--            </li>-->\n            <!-- Menu Footer-->\n            <li class=\"user-footer\">\n              <div class=\"pull-left\">\n                <a routerLink=\"#\" class=\"btn btn-default btn-flat\">Profile</a>\n              </div>\n              <div class=\"pull-right\">\n                <!-- <a href=\"#\" class=\"btn btn-default btn-flat\">Sign out</a> -->\n                <button (click)=\"onLogout()\" class=\"btn btn-default btn-flat\">Logout</button>\n              </div>\n            </li>\n          </ul>\n        </li>\n        <!-- Control Sidebar Toggle Button -->\n        <!-- <li>\n          <a href=\"#\" data-toggle=\"control-sidebar\"><i class=\"fa fa-gears\"></i></a>\n        </li> -->\n      </ul>\n    </div>\n  </nav>\n</header>\n","import { Component, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { AuthenticationService } from \"src/app/_services\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { CoreHttpService } from \"src/app/_services/coreHttpServices/core-http.service\";\nimport { NgxSpinnerService } from \"ngx-spinner\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.css\"]\n})\nexport class LoginComponent implements OnInit {\n  loginFormGroup: FormGroup;\n  isSubmitted = false;\n\n  returnUrl: string;\n  // isLoading = false;\n  error = \"\";\n  // roleUrl: string;\n  // model: any = {};\n\n  constructor(\n    private SpinnerService: NgxSpinnerService,\n    private _formBuilder: FormBuilder,\n    private coreHttpService: CoreHttpService,\n    private authenticationService: AuthenticationService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.loginFormGroup = this._formBuilder.group({\n      email: [\"\", Validators.required],\n      password: [\"\", Validators.required]\n    });\n  }\n\n  get formControls() {\n    return this.loginFormGroup.controls;\n  }\n\n  onLogin() {\n    this.SpinnerService.show();\n    this.isSubmitted = true;\n    if (this.loginFormGroup.invalid) {\n      return;\n    } else {\n      this.coreHttpService\n        .post(\"admin/login\", this.loginFormGroup.value)\n        .subscribe(\n          data => {\n            //  this.isLoading = false;\n            if (data.response === 200) {\n              this.loginFormGroup.reset(this.loginFormGroup.value);\n              this.SpinnerService.hide();\n              // store user details and jwt token in local storage to keep user logged in between page refreshes\n              localStorage.setItem(\"currentUser\", JSON.stringify(data.result));\n              this.returnUrl =\n                data.result.role === \"Institute\" ? \"/institute\" : \"/admin\";\n              this.router.navigate([this.returnUrl]);\n            } else {\n              this.error = \"Email or Password Doesn't Exist!\";\n            }\n          },\n          error => {\n            this.SpinnerService.hide();\n             this.handleError(error);\n          }\n        );\n    }\n    //   // this.isLoading = true;\n    //   console.log('call');\n    //   this.router.navigate(['/add-student']);\n    // console.log(this.model.email);\n\n    // const data = {email: userData.username.value , password: userData.password.value , mode: 'web', device_id : null};\n  }\n    handleError(errorData) {\n      this.error = errorData;\n    }\n}\n","<section class=\"login_wrapper\">\n        <ngx-spinner bdColor=\"rgba(51, 51, 51, 0.8)\" size=\"default\" type=\"ball-spin-clockwise\">  \n                <p style=\"color: white\">Please Wait. </p>  \n                </ngx-spinner>\n    <div class=\"login_form div1 login-form-1\">\n        <div class=\"row\">\n            <label></label>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-md-5 col-md-offset-1 text-center\">\n                <!--<img class=\"custom-w-h\" src=\"assets/theme/img/letswim_login_logo.png\" width=\"\" alt=\" logo\">-->\n            </div>\n        </div>\n        <div class=\"row\">\n            <p class=\"login-box-msg\"><strong>SIGN IN</strong></p>\n            <!-- <div class=\"col-md-10 col-md-offset-1\">\n                <p class=\"login-box-msg alert alert-danger\"><strong></strong></p>\n            </div>   -->\n        </div>\n      \n        <div class=\"row\">\n            <div class=\"col-md-10 col-md-offset-1 col-xs-10 col-xs-offset-1\" style=\"text-align: center;\">  \n              <form class=\"example-full-width\" [formGroup]=\"loginFormGroup\" (ngSubmit)=\"onLogin()\">\n                <mat-form-field appearance=\"\">\n                  <mat-label>Enter your email</mat-label>\n                  <input matInput placeholder=\"abc@example.com\" formControlName=\"email\" required>\n                  <mat-icon matSuffix>email</mat-icon>\n                  <mat-error *ngIf=\"isSubmitted && formControls.email.errors\">\n                    <div *ngIf=\"formControls.email.errors.required\">Email is required</div>\n                  </mat-error>\n                </mat-form-field>\n              \n                <mat-form-field class=\"example-full-width\">\n                  <mat-label>Enter Password</mat-label>\n                  <input matInput type=\"password\" formControlName=\"password\" placeholder=\"password\" required>\n                  <mat-icon matSuffix>lock</mat-icon>\n                  <mat-error *ngIf=\"isSubmitted && formControls.password.errors\">\n                    <div *ngIf=\"formControls.password.errors.required\">Password is required</div>\n                  </mat-error>\n                </mat-form-field>\n                <section class=\"example-section\" style=\"margin-left: -37px;\">\n                  <mat-checkbox class=\"example\" color=\"primary\">Remember Password</mat-checkbox>\n                </section>\n                <button mat-raised-button color=\"primary\">Login</button>\n              </form>\n            \n              <br>\n              <br>\n              <a href=\"\">I forgot my password</a>\n            </div>\n        </div>\n       \n        <div class=\"col-md-12 col-xs-12 panel-footer login-footer\">\n            © 2021 Eduqik\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {MustMatch} from '../../_helpers/must-match.validator';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  registerForm: FormGroup;\n  submitted = false;\n  isLoading = false;\n  error = '';\n  roleUrl: string;\n\n  // phoneNumber = \"^(\\+\\d{1,3}[- ]?)?\\d{10}$\";\n\n  constructor(private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      emailId: ['', [Validators.required, Validators.email]],\n      mobile: ['', [Validators.required, Validators.pattern(\"^((\\\\+91-?)|0)?[0-9]{10}$\")]],\n      // instituteIcon: ['', Validators.required, requiredFileType('png')],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      confirmPassword: ['', Validators.required],\n    }, {\n      validator: MustMatch('password', 'confirmPassword')\n    });\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.registerForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n      return;\n    }\n\n    console.log(this.registerForm.value);\n\n    // this.authenticationService.login(this.model)\n    //   .subscribe(\n    //     data => {\n    //       this.isLoading = false;\n    //       this.error = '';\n    //       if (data.response !== 401) {\n    //         this.returnUrl = data.result.role === 'Institute' ? '/institute' : '/admin';\n    //         // console.log(data.result.role);\n    //         // console.log(this.returnUrl);\n    //         // return;\n    //         this.router.navigate([this.returnUrl]);\n    //         // console.log(this.router.navigate([this.returnUrl]));\n    //       } else {\n    //         this.error = \"Email or Password Doesn't Exist!\";\n    //         // console.log(this.error);\n    //       }\n    //     },\n    //     error => {\n    //       this.isLoading = false;\n    //       this.handleError(error);\n    //       // console.log('not', error);\n    //     }\n    //   );\n\n    // display form values on success\n    // alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(this.registerForm.value, null, 4));\n  }\n\n  handleError(errorData) {\n    this.error = errorData;\n    this.isLoading = false;\n  }\n\n  onReset() {\n    console.log('call');\n    this.submitted = false;\n    this.registerForm.reset();\n  }\n\n}\n","<section class=\"login_wrapper\">\n  <div class=\"login_form div1 login-form-1\">\n    <!-- <div class=\"row\">\n      <div class=\"col-md-12 col-md-offset-2 text-center\"> -->\n        <!--<img class=\"custom-w-h\" src=\"assets/theme/img/letswim_login_logo.png\" width=\"\" alt=\" logo\">-->\n      <!-- </div>\n    </div> -->\n    <div class=\"row\">\n      <p class=\"login-box-msg\"><strong>REGISTER</strong></p>\n      <div class=\"col-md-10 col-md-offset-1\" *ngIf=\"error\">\n          <p class=\"login-box-msg alert alert-danger\"><strong>{{ error }}</strong></p>\n      </div>  \n  </div>\n    <div class=\"row\">\n        <form style=\"padding: 12px;\" [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"col-md-12\">\n        <div class=\"col-md-6\">\n          <div class=\"form-group\">\n            <label for=\"firstName\">First Name <span class=\"m-t-5\"> *</span></label>\n            <input type=\"text\" formControlName=\"firstName\" id=\"firstName\" class=\"form-control\" \n            [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\" />\n            <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"f.firstName.errors.required\">First Name is required</div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-md-6\">\n          <div class=\"form-group\">\n            <label for=\"lastName\">First Name <span class=\"m-t-5\"> *</span></label>\n            <input type=\"text\" formControlName=\"lastName\" id=\"lastName\" class=\"form-control\" \n            [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\" />\n            <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"f.lastName.errors.required\">First Name is required</div>\n            </div>\n          </div>\n        </div> \n      </div>\n      <div class=\"col-md-12\">\n        <div class=\"col-md-12\">\n          <div class=\"form-group\">\n            <label for=\"emailId\">Email Id<span class=\"m-t-5\"> *</span></label>\n            <input type=\"text\" formControlName=\"emailId\" id=\"emailId\" class=\"form-control\" \n            [ngClass]=\"{ 'is-invalid': submitted && f.emailId.errors }\" />\n            <div *ngIf=\"submitted && f.emailId.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"f.emailId.errors.required\">Email is required</div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md-12\">\n        <div class=\"col-md-12\">\n          <div class=\"form-group\">\n            <label for=\"password\">Password<span class=\"m-t-5\"> *</span></label>\n            <input type=\"text\" formControlName=\"password\" id=\"password\" class=\"form-control\" \n            [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n            <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"f.password.errors.required\">Password is required</div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md-12\">\n        <div class=\"col-md-12\">\n          <div class=\"form-group\">\n            <label for=\"confirmPassword\">Confirm Password<span class=\"m-t-5\"> *</span></label>\n            <input type=\"text\" formControlName=\"confirmPassword\" id=\"confirmPassword\" class=\"form-control\" \n            [ngClass]=\"{ 'is-invalid': submitted && f.confirmPassword.errors }\" />\n            <div *ngIf=\"submitted && f.confirmPassword.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"f.confirmPassword.errors.required\">Confirm password</div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-md-8 col-xs-8 col-md-offset-2 col-xs-offset-2 text-center\">\n          <button type=\"submit\" class=\"btn btn-info btn-block btn-flat\" style=\"margin-top: 20px;\">\n              Register\n              <i *ngIf=\"isLoading\" class=\"fa fa-spinner fa-spin\"></i>\n          </button>\n          You have an account?<a routerLink=\"/login\"> Login</a>\n      </div>\n      </div>\n      </form>\n      </div>\n    \n\n\n\n    <!-- <div class=\"row\">\n      <div class=\"col-md-12\">\n        <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n          <div class=\"form-row\">\n            <div class=\"col-md-6\">\n              <div class=\"form-group\">\n                <label for=\"firstName\">First Name <span class=\"m-t-5\"> *</span></label>\n                <input type=\"text\" formControlName=\"firstName\" id=\"firstName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\" />\n                <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\n                  <div *ngIf=\"f.firstName.errors.required\">First Name is required</div>\n                </div>\n              </div>\n\n              <div class=\"form-group\">\n                <label for=\"email\">Email<span class=\"m-t-5\"> *</span></label>\n                <input type=\"text\" formControlName=\"email\" id=\"email\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\n                <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                  <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                  <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n                </div>\n              </div>\n\n              <div class=\"form-group\">\n                <label for=\"instituteName\">Institute Name<span class=\"m-t-5\"> *</span></label>\n                <input type=\"text\" formControlName=\"instituteName\" id=\"instituteName\" class=\"form-control\"\n                       [ngClass]=\"{ 'is-invalid': submitted && f.instituteName.errors }\" />\n                <div *ngIf=\"submitted && f.instituteName.errors\" class=\"invalid-feedback\">\n                  <div *ngIf=\"f.instituteName.errors.required\">Institute name is required</div>\n                </div>\n              </div>\n\n              <div class=\"form-group\">\n                <label for=\"instituteAddress\">Institute Address<span class=\"m-t-5\"> *</span></label>\n                <textarea formControlName=\"instituteAddress\" id=\"instituteAddress\" class=\"form-control\"\n                          [ngClass]=\"{ 'is-invalid': submitted && f.instituteAddress.errors }\"></textarea>\n                <div *ngIf=\"submitted && f.instituteAddress.errors\" class=\"invalid-feedback\">\n                  <div *ngIf=\"f.instituteAddress.errors.required\">Institute address is required</div>\n                </div>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"instituteInfo\">About Institute</label>\n                <textarea formControlName=\"instituteInfo\" id=\"instituteInfo\" class=\"form-control\"\n                          [ngClass]=\"{ 'is-invalid': submitted && f.instituteInfo.errors }\"></textarea>\n                <div *ngIf=\"submitted && f.instituteInfo.errors\" class=\"invalid-feedback\">\n                  <div *ngIf=\"f.instituteInfo.errors.required\">About institute address is required</div>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-md-6\">\n              <div class=\"form-group\">\n                <label for=\"lastName\">Last Name <span class=\"m-t-5\"> *</span></label>\n                <input type=\"text\" formControlName=\"lastName\" id=\"lastName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\" />\n                <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\n                  <div *ngIf=\"f.lastName.errors.required\">Last Name is required</div>\n                </div>\n              </div>\n\n              <div class=\"form-group\">\n                <label for=\"mobile\">Mobile <span class=\"m-t-5\"> *</span></label>\n                <input type=\"text\" formControlName=\"mobile\" id=\"mobile\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.mobile.errors }\" />\n                <div *ngIf=\"submitted && f.mobile.errors\" class=\"invalid-feedback\">\n                  <div *ngIf=\"f.mobile.errors.required\">Mobile number is required</div>\n                  <div *ngIf=\"f.mobile.errors.pattern\">Please, Enter 10 digit Mobile Number</div>\n                </div>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"password\">Password <span class=\"m-t-5\"> *</span></label>\n                <input type=\"password\" formControlName=\"password\" id=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                  <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                  <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters</div>\n                </div>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"confirmPassword\">Confirm Password <span class=\"m-t-5\"> *</span></label>\n                <input type=\"password\" formControlName=\"confirmPassword\" id=\"confirmPassword\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.confirmPassword.errors }\" />\n                <div *ngIf=\"submitted && f.confirmPassword.errors\" class=\"invalid-feedback\">\n                  <div *ngIf=\"f.confirmPassword.errors.required\">Confirm Password is required</div>\n                  <div *ngIf=\"f.confirmPassword.errors.mustMatch\">Passwords must match</div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <br>\n            <br>\n            <br>\n          </div>\n          <div class=\"row\">\n            <br>\n            <div class=\"text-center\">\n              <button class=\"btn btn-primary mr-1\">Register</button>\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n              <button class=\"btn btn-warning\" type=\"reset\" (click)=\"onReset()\">Cancel</button>\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n              You have an account?<a routerLink=\"/login\"> Login</a>\n            </div>\n            <br>\n          </div>\n        </form>\n      </div>\n    </div> -->\n    <div class=\"col-md-12 col-xs-12 panel-footer padding-md no-margin no-border bg-danger text-center text-white login-footer\"\n    style=\"width: 100%;\">\n    © 2021 Shri Sanatan\n</div>\n  </div>\n</section>\n","import { Component, OnInit} from '@angular/core';\n\ndeclare var $: any;\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n\n  ngOnInit() {\n    $(document).ready(() => {\n      const trees: any = $('[data-widget=\"tree\"]');\n      trees.tree();\n    });\n  }\n}\n","<!-- Left side column. contains the sidebar -->\n<aside class=\"main-sidebar\">\n  <!-- sidebar: style can be found in sidebar.less -->\n  <section class=\"sidebar\">\n    <ul class=\"sidebar-menu\" data-widget=\"tree\">\n      <!-- <li class=\"header\">MAIN NAVIGATION</li> -->\n      <li class=\"treeview\" style=\"height:auto\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{ exact: true }\">\n        <a routerLink=\"/admin/home\">\n          <i class=\"fa fa-dashboard\"></i><span>Dashboard</span>\n        </a>\n      </li>\n\n      <li class=\"treeview\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{ exact: true }\">\n        <a href=\"#\">\n          <i class=\"fa fa-hospital-o\"></i>\n          <span>Hub Management</span>\n          <span class=\"pull-right-container\">\n            <i class=\"fa fa-angle-left pull-right\"></i>\n          </span>\n        </a>\n        <ul class=\"treeview-menu\">\n          <li routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{ exact: true }\">\n            <a routerLink=\"/admin/create-hub\"><i class=\"fa fa-circle-o\"></i>Create Hub</a>\n          </li>\n          <li routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{ exact: true }\">\n            <a routerLink=\"/admin/view-hub\"><i class=\"fa fa-circle-o\"></i>View Hub</a>\n          </li>\n         \n        </ul>\n      </li>\n      \n      <!-- <li class=\"treeview\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{ exact: true }\">\n        <a href=\"#\">\n          <i class=\"fa fa-gear\"></i>\n          <span>Setting</span>\n          <span class=\"pull-right-container\">\n            <i class=\"fa fa-angle-left pull-right\"></i>\n          </span>\n        </a>\n        <ul class=\"treeview-menu\">\n          <li routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{ exact: true }\">\n            <a routerLink=\"/admin/create-class\"><i class=\"fa fa-circle-o\"></i>Create Class</a>\n          </li>\n          <li routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{ exact: true }\">\n            <a routerLink=\"/admin/create-section\"><i class=\"fa fa-circle-o\"></i>Create Section</a>\n          </li>\n          <li routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{ exact: true }\">\n            <a routerLink=\"/admin/assign-role\"><i class=\"fa fa-circle-o\"></i>Assign Role </a>\n          </li>\n          <li routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{ exact: true }\">\n            <a routerLink=\"/admin/year-promotion\"><i class=\"fa fa-circle-o\"></i>Year Promotion </a>\n          </li>\n          <li routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{ exact: true }\">\n            <a routerLink=\"/admin/renew-software\"><i class=\"fa fa-circle-o\"></i>Renew Software </a>\n          </li>\n        </ul>\n      </li> -->\n\n\n    </ul>\n  </section>\n  <!-- /.sidebar -->\n</aside>\n\n<!-- =============================================== -->","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n// import { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatSlideToggle, MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatStepperModule} from '@angular/material/stepper';\n// import { CdkStepperModule } from '@angular/cdk/stepper';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule, } from '@angular/material/checkbox';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatChipInput, MatChipsModule} from '@angular/material/chips';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatPaginator, MatPaginatorModule} from '@angular/material/paginator';\n\n\n\n \n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    // BrowserAnimationsModule,\n    // NoopAnimationsModule,\n    \n    MatProgressSpinnerModule,\n    MatButtonModule,\n    MatStepperModule,\n    FormsModule,\n    MatInputModule,\n    MatSelectModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatSlideToggleModule,\n    MatIconModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatCardModule,\n    MatInputModule,\n    MatCheckboxModule,\n    MatTooltipModule,\n    MatExpansionModule,\n    MatTabsModule,\n    MatChipsModule,\n    MatRadioModule,\n    MatCardModule,\n    MatPaginatorModule\n    \n    \n    \n   \n    \n    \n    \n    \n    \n    \n  ],\n  exports: [\n    // BrowserAnimationsModule,\n    // NoopAnimationsModule,\n    \n    MatTooltipModule,\n    MatProgressSpinnerModule,\n    MatButtonModule,\n    MatStepperModule,\n    FormsModule,\n    MatInputModule,\n    MatSelectModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatSlideToggleModule,\n    MatIconModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatCardModule,\n    MatInputModule,\n    MatCheckboxModule,\n    MatTooltipModule,\n    MatExpansionModule,\n    MatTabsModule,\n    MatChipsModule,\n    MatRadioModule,\n    MatCardModule,\n    MatPaginatorModule\n    \n    \n   \n    \n    \n    \n    \n   \n  ],\n})\nexport class MaterialDesignModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl: 'http://localhost:4200',\n  apiUrl: 'http://aiimsapi.appqik.com/public/api/',\n  apiBaseUrl: 'http://localhost:8000',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}