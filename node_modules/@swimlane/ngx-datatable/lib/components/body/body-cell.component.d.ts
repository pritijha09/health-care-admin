import { ChangeDetectorRef, EventEmitter, ElementRef, ViewContainerRef, OnDestroy, DoCheck } from '@angular/core';
import { TableColumn } from '../../types/table-column.type';
import { SortDirection } from '../../types/sort-direction.type';
import * as ɵngcc0 from '@angular/core';
export declare type TreeStatus = 'collapsed' | 'expanded' | 'loading' | 'disabled';
export declare class DataTableBodyCellComponent implements DoCheck, OnDestroy {
    private cd;
    displayCheck: (row: any, column?: TableColumn, value?: any) => boolean;
    set group(group: any);
    get group(): any;
    set rowHeight(val: number);
    get rowHeight(): number;
    set isSelected(val: boolean);
    get isSelected(): boolean;
    set expanded(val: boolean);
    get expanded(): boolean;
    set rowIndex(val: number);
    get rowIndex(): number;
    set column(column: TableColumn);
    get column(): TableColumn;
    set row(row: any);
    get row(): any;
    set sorts(val: any[]);
    get sorts(): any[];
    set treeStatus(status: TreeStatus);
    get treeStatus(): TreeStatus;
    activate: EventEmitter<any>;
    treeAction: EventEmitter<any>;
    cellTemplate: ViewContainerRef;
    get columnCssClasses(): any;
    get width(): number;
    get minWidth(): number;
    get maxWidth(): number;
    get height(): string | number;
    sanitizedValue: any;
    value: any;
    sortDir: SortDirection;
    isFocused: boolean;
    onCheckboxChangeFn: any;
    activateFn: any;
    cellContext: any;
    private _isSelected;
    private _sorts;
    private _column;
    private _row;
    private _group;
    private _rowHeight;
    private _rowIndex;
    private _expanded;
    private _element;
    private _treeStatus;
    constructor(element: ElementRef, cd: ChangeDetectorRef);
    ngDoCheck(): void;
    ngOnDestroy(): void;
    checkValueUpdates(): void;
    onFocus(): void;
    onBlur(): void;
    onClick(event: MouseEvent): void;
    onDblClick(event: MouseEvent): void;
    onKeyDown(event: KeyboardEvent): void;
    onCheckboxChange(event: any): void;
    calcSortDir(sorts: any[]): any;
    stripHtml(html: string): string;
    onTreeAction(): void;
    calcLeftMargin(column: any, row: any): number;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DataTableBodyCellComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DataTableBodyCellComponent, "datatable-body-cell", never, { "group": "group"; "rowHeight": "rowHeight"; "isSelected": "isSelected"; "expanded": "expanded"; "rowIndex": "rowIndex"; "column": "column"; "row": "row"; "sorts": "sorts"; "treeStatus": "treeStatus"; "displayCheck": "displayCheck"; }, { "activate": "activate"; "treeAction": "treeAction"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYm9keS1jZWxsLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJib2R5LWNlbGwuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdG9yUmVmLCBFdmVudEVtaXR0ZXIsIEVsZW1lbnRSZWYsIFZpZXdDb250YWluZXJSZWYsIE9uRGVzdHJveSwgRG9DaGVjayB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgVGFibGVDb2x1bW4gfSBmcm9tICcuLi8uLi90eXBlcy90YWJsZS1jb2x1bW4udHlwZSc7XG5pbXBvcnQgeyBTb3J0RGlyZWN0aW9uIH0gZnJvbSAnLi4vLi4vdHlwZXMvc29ydC1kaXJlY3Rpb24udHlwZSc7XG5leHBvcnQgZGVjbGFyZSB0eXBlIFRyZWVTdGF0dXMgPSAnY29sbGFwc2VkJyB8ICdleHBhbmRlZCcgfCAnbG9hZGluZycgfCAnZGlzYWJsZWQnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgRGF0YVRhYmxlQm9keUNlbGxDb21wb25lbnQgaW1wbGVtZW50cyBEb0NoZWNrLCBPbkRlc3Ryb3kge1xuICAgIHByaXZhdGUgY2Q7XG4gICAgZGlzcGxheUNoZWNrOiAocm93OiBhbnksIGNvbHVtbj86IFRhYmxlQ29sdW1uLCB2YWx1ZT86IGFueSkgPT4gYm9vbGVhbjtcbiAgICBzZXQgZ3JvdXAoZ3JvdXA6IGFueSk7XG4gICAgZ2V0IGdyb3VwKCk6IGFueTtcbiAgICBzZXQgcm93SGVpZ2h0KHZhbDogbnVtYmVyKTtcbiAgICBnZXQgcm93SGVpZ2h0KCk6IG51bWJlcjtcbiAgICBzZXQgaXNTZWxlY3RlZCh2YWw6IGJvb2xlYW4pO1xuICAgIGdldCBpc1NlbGVjdGVkKCk6IGJvb2xlYW47XG4gICAgc2V0IGV4cGFuZGVkKHZhbDogYm9vbGVhbik7XG4gICAgZ2V0IGV4cGFuZGVkKCk6IGJvb2xlYW47XG4gICAgc2V0IHJvd0luZGV4KHZhbDogbnVtYmVyKTtcbiAgICBnZXQgcm93SW5kZXgoKTogbnVtYmVyO1xuICAgIHNldCBjb2x1bW4oY29sdW1uOiBUYWJsZUNvbHVtbik7XG4gICAgZ2V0IGNvbHVtbigpOiBUYWJsZUNvbHVtbjtcbiAgICBzZXQgcm93KHJvdzogYW55KTtcbiAgICBnZXQgcm93KCk6IGFueTtcbiAgICBzZXQgc29ydHModmFsOiBhbnlbXSk7XG4gICAgZ2V0IHNvcnRzKCk6IGFueVtdO1xuICAgIHNldCB0cmVlU3RhdHVzKHN0YXR1czogVHJlZVN0YXR1cyk7XG4gICAgZ2V0IHRyZWVTdGF0dXMoKTogVHJlZVN0YXR1cztcbiAgICBhY3RpdmF0ZTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgdHJlZUFjdGlvbjogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgY2VsbFRlbXBsYXRlOiBWaWV3Q29udGFpbmVyUmVmO1xuICAgIGdldCBjb2x1bW5Dc3NDbGFzc2VzKCk6IGFueTtcbiAgICBnZXQgd2lkdGgoKTogbnVtYmVyO1xuICAgIGdldCBtaW5XaWR0aCgpOiBudW1iZXI7XG4gICAgZ2V0IG1heFdpZHRoKCk6IG51bWJlcjtcbiAgICBnZXQgaGVpZ2h0KCk6IHN0cmluZyB8IG51bWJlcjtcbiAgICBzYW5pdGl6ZWRWYWx1ZTogYW55O1xuICAgIHZhbHVlOiBhbnk7XG4gICAgc29ydERpcjogU29ydERpcmVjdGlvbjtcbiAgICBpc0ZvY3VzZWQ6IGJvb2xlYW47XG4gICAgb25DaGVja2JveENoYW5nZUZuOiBhbnk7XG4gICAgYWN0aXZhdGVGbjogYW55O1xuICAgIGNlbGxDb250ZXh0OiBhbnk7XG4gICAgcHJpdmF0ZSBfaXNTZWxlY3RlZDtcbiAgICBwcml2YXRlIF9zb3J0cztcbiAgICBwcml2YXRlIF9jb2x1bW47XG4gICAgcHJpdmF0ZSBfcm93O1xuICAgIHByaXZhdGUgX2dyb3VwO1xuICAgIHByaXZhdGUgX3Jvd0hlaWdodDtcbiAgICBwcml2YXRlIF9yb3dJbmRleDtcbiAgICBwcml2YXRlIF9leHBhbmRlZDtcbiAgICBwcml2YXRlIF9lbGVtZW50O1xuICAgIHByaXZhdGUgX3RyZWVTdGF0dXM7XG4gICAgY29uc3RydWN0b3IoZWxlbWVudDogRWxlbWVudFJlZiwgY2Q6IENoYW5nZURldGVjdG9yUmVmKTtcbiAgICBuZ0RvQ2hlY2soKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xuICAgIGNoZWNrVmFsdWVVcGRhdGVzKCk6IHZvaWQ7XG4gICAgb25Gb2N1cygpOiB2b2lkO1xuICAgIG9uQmx1cigpOiB2b2lkO1xuICAgIG9uQ2xpY2soZXZlbnQ6IE1vdXNlRXZlbnQpOiB2b2lkO1xuICAgIG9uRGJsQ2xpY2soZXZlbnQ6IE1vdXNlRXZlbnQpOiB2b2lkO1xuICAgIG9uS2V5RG93bihldmVudDogS2V5Ym9hcmRFdmVudCk6IHZvaWQ7XG4gICAgb25DaGVja2JveENoYW5nZShldmVudDogYW55KTogdm9pZDtcbiAgICBjYWxjU29ydERpcihzb3J0czogYW55W10pOiBhbnk7XG4gICAgc3RyaXBIdG1sKGh0bWw6IHN0cmluZyk6IHN0cmluZztcbiAgICBvblRyZWVBY3Rpb24oKTogdm9pZDtcbiAgICBjYWxjTGVmdE1hcmdpbihjb2x1bW46IGFueSwgcm93OiBhbnkpOiBudW1iZXI7XG59XG4iXX0=