import { EventEmitter, ChangeDetectorRef } from '@angular/core';
import { SortType } from '../../types/sort.type';
import { SelectionType } from '../../types/selection.type';
import { TableColumn } from '../../types/table-column.type';
import { SortDirection } from '../../types/sort-direction.type';
import * as ɵngcc0 from '@angular/core';
export declare class DataTableHeaderCellComponent {
    private cd;
    sortType: SortType;
    sortAscendingIcon: string;
    sortDescendingIcon: string;
    sortUnsetIcon: string;
    isTarget: boolean;
    targetMarkerTemplate: any;
    targetMarkerContext: any;
    _allRowsSelected: boolean;
    set allRowsSelected(value: boolean);
    get allRowsSelected(): boolean;
    selectionType: SelectionType;
    set column(column: TableColumn);
    get column(): TableColumn;
    headerHeight: number;
    set sorts(val: any[]);
    get sorts(): any[];
    sort: EventEmitter<any>;
    select: EventEmitter<any>;
    columnContextmenu: EventEmitter<{
        event: MouseEvent;
        column: any;
    }>;
    get columnCssClasses(): any;
    get name(): string;
    get minWidth(): number;
    get maxWidth(): number;
    get width(): number;
    get isCheckboxable(): boolean;
    sortFn: any;
    sortClass: string;
    sortDir: SortDirection;
    selectFn: any;
    cellContext: any;
    private _column;
    private _sorts;
    constructor(cd: ChangeDetectorRef);
    onContextmenu($event: MouseEvent): void;
    ngOnInit(): void;
    calcSortDir(sorts: any[]): any;
    onSort(): void;
    calcSortClass(sortDir: SortDirection): string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DataTableHeaderCellComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DataTableHeaderCellComponent, "datatable-header-cell", never, { "allRowsSelected": "allRowsSelected"; "column": "column"; "sorts": "sorts"; "sortType": "sortType"; "sortAscendingIcon": "sortAscendingIcon"; "sortDescendingIcon": "sortDescendingIcon"; "sortUnsetIcon": "sortUnsetIcon"; "isTarget": "isTarget"; "targetMarkerTemplate": "targetMarkerTemplate"; "targetMarkerContext": "targetMarkerContext"; "selectionType": "selectionType"; "headerHeight": "headerHeight"; }, { "sort": "sort"; "select": "select"; "columnContextmenu": "columnContextmenu"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVhZGVyLWNlbGwuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImhlYWRlci1jZWxsLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnRFbWl0dGVyLCBDaGFuZ2VEZXRlY3RvclJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgU29ydFR5cGUgfSBmcm9tICcuLi8uLi90eXBlcy9zb3J0LnR5cGUnO1xuaW1wb3J0IHsgU2VsZWN0aW9uVHlwZSB9IGZyb20gJy4uLy4uL3R5cGVzL3NlbGVjdGlvbi50eXBlJztcbmltcG9ydCB7IFRhYmxlQ29sdW1uIH0gZnJvbSAnLi4vLi4vdHlwZXMvdGFibGUtY29sdW1uLnR5cGUnO1xuaW1wb3J0IHsgU29ydERpcmVjdGlvbiB9IGZyb20gJy4uLy4uL3R5cGVzL3NvcnQtZGlyZWN0aW9uLnR5cGUnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgRGF0YVRhYmxlSGVhZGVyQ2VsbENvbXBvbmVudCB7XG4gICAgcHJpdmF0ZSBjZDtcbiAgICBzb3J0VHlwZTogU29ydFR5cGU7XG4gICAgc29ydEFzY2VuZGluZ0ljb246IHN0cmluZztcbiAgICBzb3J0RGVzY2VuZGluZ0ljb246IHN0cmluZztcbiAgICBzb3J0VW5zZXRJY29uOiBzdHJpbmc7XG4gICAgaXNUYXJnZXQ6IGJvb2xlYW47XG4gICAgdGFyZ2V0TWFya2VyVGVtcGxhdGU6IGFueTtcbiAgICB0YXJnZXRNYXJrZXJDb250ZXh0OiBhbnk7XG4gICAgX2FsbFJvd3NTZWxlY3RlZDogYm9vbGVhbjtcbiAgICBzZXQgYWxsUm93c1NlbGVjdGVkKHZhbHVlOiBib29sZWFuKTtcbiAgICBnZXQgYWxsUm93c1NlbGVjdGVkKCk6IGJvb2xlYW47XG4gICAgc2VsZWN0aW9uVHlwZTogU2VsZWN0aW9uVHlwZTtcbiAgICBzZXQgY29sdW1uKGNvbHVtbjogVGFibGVDb2x1bW4pO1xuICAgIGdldCBjb2x1bW4oKTogVGFibGVDb2x1bW47XG4gICAgaGVhZGVySGVpZ2h0OiBudW1iZXI7XG4gICAgc2V0IHNvcnRzKHZhbDogYW55W10pO1xuICAgIGdldCBzb3J0cygpOiBhbnlbXTtcbiAgICBzb3J0OiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBzZWxlY3Q6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIGNvbHVtbkNvbnRleHRtZW51OiBFdmVudEVtaXR0ZXI8e1xuICAgICAgICBldmVudDogTW91c2VFdmVudDtcbiAgICAgICAgY29sdW1uOiBhbnk7XG4gICAgfT47XG4gICAgZ2V0IGNvbHVtbkNzc0NsYXNzZXMoKTogYW55O1xuICAgIGdldCBuYW1lKCk6IHN0cmluZztcbiAgICBnZXQgbWluV2lkdGgoKTogbnVtYmVyO1xuICAgIGdldCBtYXhXaWR0aCgpOiBudW1iZXI7XG4gICAgZ2V0IHdpZHRoKCk6IG51bWJlcjtcbiAgICBnZXQgaXNDaGVja2JveGFibGUoKTogYm9vbGVhbjtcbiAgICBzb3J0Rm46IGFueTtcbiAgICBzb3J0Q2xhc3M6IHN0cmluZztcbiAgICBzb3J0RGlyOiBTb3J0RGlyZWN0aW9uO1xuICAgIHNlbGVjdEZuOiBhbnk7XG4gICAgY2VsbENvbnRleHQ6IGFueTtcbiAgICBwcml2YXRlIF9jb2x1bW47XG4gICAgcHJpdmF0ZSBfc29ydHM7XG4gICAgY29uc3RydWN0b3IoY2Q6IENoYW5nZURldGVjdG9yUmVmKTtcbiAgICBvbkNvbnRleHRtZW51KCRldmVudDogTW91c2VFdmVudCk6IHZvaWQ7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBjYWxjU29ydERpcihzb3J0czogYW55W10pOiBhbnk7XG4gICAgb25Tb3J0KCk6IHZvaWQ7XG4gICAgY2FsY1NvcnRDbGFzcyhzb3J0RGlyOiBTb3J0RGlyZWN0aW9uKTogc3RyaW5nO1xufVxuIl19