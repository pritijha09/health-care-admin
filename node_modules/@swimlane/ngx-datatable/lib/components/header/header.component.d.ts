import { EventEmitter, ChangeDetectorRef, OnDestroy } from '@angular/core';
import { SortType } from '../../types/sort.type';
import { SelectionType } from '../../types/selection.type';
import { DataTableColumnDirective } from '../columns/column.directive';
import * as ɵngcc0 from '@angular/core';
export declare class DataTableHeaderComponent implements OnDestroy {
    private cd;
    sortAscendingIcon: any;
    sortDescendingIcon: any;
    sortUnsetIcon: any;
    scrollbarH: boolean;
    dealsWithGroup: boolean;
    targetMarkerTemplate: any;
    targetMarkerContext: any;
    set innerWidth(val: number);
    get innerWidth(): number;
    sorts: any[];
    sortType: SortType;
    allRowsSelected: boolean;
    selectionType: SelectionType;
    reorderable: boolean;
    dragEventTarget: any;
    set headerHeight(val: any);
    get headerHeight(): any;
    set columns(val: any[]);
    get columns(): any[];
    set offsetX(val: number);
    get offsetX(): number;
    sort: EventEmitter<any>;
    reorder: EventEmitter<any>;
    resize: EventEmitter<any>;
    select: EventEmitter<any>;
    columnContextmenu: EventEmitter<{
        event: MouseEvent;
        column: any;
    }>;
    _columnsByPin: any;
    _columnGroupWidths: any;
    _innerWidth: number;
    _offsetX: number;
    _columns: any[];
    _headerHeight: string;
    _styleByGroup: {
        [prop: string]: {};
    };
    private destroyed;
    constructor(cd: ChangeDetectorRef);
    ngOnDestroy(): void;
    onLongPressStart({ event, model }: {
        event: any;
        model: any;
    }): void;
    onLongPressEnd({ event, model }: {
        event: any;
        model: any;
    }): void;
    get headerWidth(): string;
    trackByGroups(index: number, colGroup: any): any;
    columnTrackingFn(index: number, column: any): any;
    onColumnResized(width: number, column: DataTableColumnDirective): void;
    onColumnReordered({ prevIndex, newIndex, model }: any): void;
    onTargetChanged({ prevIndex, newIndex, initialIndex }: any): void;
    getColumn(index: number): any;
    onSort({ column, prevValue, newValue }: any): void;
    calcNewSorts(column: any, prevValue: number, newValue: number): any[];
    setStylesByGroup(): void;
    calcStylesByGroup(group: string): any;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DataTableHeaderComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DataTableHeaderComponent, "datatable-header", never, { "innerWidth": "innerWidth"; "headerHeight": "headerHeight"; "columns": "columns"; "offsetX": "offsetX"; "sorts": "sorts"; "sortAscendingIcon": "sortAscendingIcon"; "sortDescendingIcon": "sortDescendingIcon"; "sortUnsetIcon": "sortUnsetIcon"; "scrollbarH": "scrollbarH"; "dealsWithGroup": "dealsWithGroup"; "targetMarkerTemplate": "targetMarkerTemplate"; "sortType": "sortType"; "allRowsSelected": "allRowsSelected"; "selectionType": "selectionType"; "reorderable": "reorderable"; }, { "sort": "sort"; "reorder": "reorder"; "resize": "resize"; "select": "select"; "columnContextmenu": "columnContextmenu"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVhZGVyLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJoZWFkZXIuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIsIENoYW5nZURldGVjdG9yUmVmLCBPbkRlc3Ryb3kgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFNvcnRUeXBlIH0gZnJvbSAnLi4vLi4vdHlwZXMvc29ydC50eXBlJztcbmltcG9ydCB7IFNlbGVjdGlvblR5cGUgfSBmcm9tICcuLi8uLi90eXBlcy9zZWxlY3Rpb24udHlwZSc7XG5pbXBvcnQgeyBEYXRhVGFibGVDb2x1bW5EaXJlY3RpdmUgfSBmcm9tICcuLi9jb2x1bW5zL2NvbHVtbi5kaXJlY3RpdmUnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgRGF0YVRhYmxlSGVhZGVyQ29tcG9uZW50IGltcGxlbWVudHMgT25EZXN0cm95IHtcbiAgICBwcml2YXRlIGNkO1xuICAgIHNvcnRBc2NlbmRpbmdJY29uOiBhbnk7XG4gICAgc29ydERlc2NlbmRpbmdJY29uOiBhbnk7XG4gICAgc29ydFVuc2V0SWNvbjogYW55O1xuICAgIHNjcm9sbGJhckg6IGJvb2xlYW47XG4gICAgZGVhbHNXaXRoR3JvdXA6IGJvb2xlYW47XG4gICAgdGFyZ2V0TWFya2VyVGVtcGxhdGU6IGFueTtcbiAgICB0YXJnZXRNYXJrZXJDb250ZXh0OiBhbnk7XG4gICAgc2V0IGlubmVyV2lkdGgodmFsOiBudW1iZXIpO1xuICAgIGdldCBpbm5lcldpZHRoKCk6IG51bWJlcjtcbiAgICBzb3J0czogYW55W107XG4gICAgc29ydFR5cGU6IFNvcnRUeXBlO1xuICAgIGFsbFJvd3NTZWxlY3RlZDogYm9vbGVhbjtcbiAgICBzZWxlY3Rpb25UeXBlOiBTZWxlY3Rpb25UeXBlO1xuICAgIHJlb3JkZXJhYmxlOiBib29sZWFuO1xuICAgIGRyYWdFdmVudFRhcmdldDogYW55O1xuICAgIHNldCBoZWFkZXJIZWlnaHQodmFsOiBhbnkpO1xuICAgIGdldCBoZWFkZXJIZWlnaHQoKTogYW55O1xuICAgIHNldCBjb2x1bW5zKHZhbDogYW55W10pO1xuICAgIGdldCBjb2x1bW5zKCk6IGFueVtdO1xuICAgIHNldCBvZmZzZXRYKHZhbDogbnVtYmVyKTtcbiAgICBnZXQgb2Zmc2V0WCgpOiBudW1iZXI7XG4gICAgc29ydDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgcmVvcmRlcjogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgcmVzaXplOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBzZWxlY3Q6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIGNvbHVtbkNvbnRleHRtZW51OiBFdmVudEVtaXR0ZXI8e1xuICAgICAgICBldmVudDogTW91c2VFdmVudDtcbiAgICAgICAgY29sdW1uOiBhbnk7XG4gICAgfT47XG4gICAgX2NvbHVtbnNCeVBpbjogYW55O1xuICAgIF9jb2x1bW5Hcm91cFdpZHRoczogYW55O1xuICAgIF9pbm5lcldpZHRoOiBudW1iZXI7XG4gICAgX29mZnNldFg6IG51bWJlcjtcbiAgICBfY29sdW1uczogYW55W107XG4gICAgX2hlYWRlckhlaWdodDogc3RyaW5nO1xuICAgIF9zdHlsZUJ5R3JvdXA6IHtcbiAgICAgICAgW3Byb3A6IHN0cmluZ106IHt9O1xuICAgIH07XG4gICAgcHJpdmF0ZSBkZXN0cm95ZWQ7XG4gICAgY29uc3RydWN0b3IoY2Q6IENoYW5nZURldGVjdG9yUmVmKTtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xuICAgIG9uTG9uZ1ByZXNzU3RhcnQoeyBldmVudCwgbW9kZWwgfToge1xuICAgICAgICBldmVudDogYW55O1xuICAgICAgICBtb2RlbDogYW55O1xuICAgIH0pOiB2b2lkO1xuICAgIG9uTG9uZ1ByZXNzRW5kKHsgZXZlbnQsIG1vZGVsIH06IHtcbiAgICAgICAgZXZlbnQ6IGFueTtcbiAgICAgICAgbW9kZWw6IGFueTtcbiAgICB9KTogdm9pZDtcbiAgICBnZXQgaGVhZGVyV2lkdGgoKTogc3RyaW5nO1xuICAgIHRyYWNrQnlHcm91cHMoaW5kZXg6IG51bWJlciwgY29sR3JvdXA6IGFueSk6IGFueTtcbiAgICBjb2x1bW5UcmFja2luZ0ZuKGluZGV4OiBudW1iZXIsIGNvbHVtbjogYW55KTogYW55O1xuICAgIG9uQ29sdW1uUmVzaXplZCh3aWR0aDogbnVtYmVyLCBjb2x1bW46IERhdGFUYWJsZUNvbHVtbkRpcmVjdGl2ZSk6IHZvaWQ7XG4gICAgb25Db2x1bW5SZW9yZGVyZWQoeyBwcmV2SW5kZXgsIG5ld0luZGV4LCBtb2RlbCB9OiBhbnkpOiB2b2lkO1xuICAgIG9uVGFyZ2V0Q2hhbmdlZCh7IHByZXZJbmRleCwgbmV3SW5kZXgsIGluaXRpYWxJbmRleCB9OiBhbnkpOiB2b2lkO1xuICAgIGdldENvbHVtbihpbmRleDogbnVtYmVyKTogYW55O1xuICAgIG9uU29ydCh7IGNvbHVtbiwgcHJldlZhbHVlLCBuZXdWYWx1ZSB9OiBhbnkpOiB2b2lkO1xuICAgIGNhbGNOZXdTb3J0cyhjb2x1bW46IGFueSwgcHJldlZhbHVlOiBudW1iZXIsIG5ld1ZhbHVlOiBudW1iZXIpOiBhbnlbXTtcbiAgICBzZXRTdHlsZXNCeUdyb3VwKCk6IHZvaWQ7XG4gICAgY2FsY1N0eWxlc0J5R3JvdXAoZ3JvdXA6IHN0cmluZyk6IGFueTtcbn1cbiJdfQ==