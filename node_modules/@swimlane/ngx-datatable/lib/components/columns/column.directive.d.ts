import { TemplateRef, OnChanges } from '@angular/core';
import { ColumnChangesService } from '../../services/column-changes.service';
import { TableColumnProp } from '../../types/table-column.type';
import * as ɵngcc0 from '@angular/core';
export declare class DataTableColumnDirective implements OnChanges {
    private columnChangesService;
    name: string;
    prop: TableColumnProp;
    frozenLeft: any;
    frozenRight: any;
    flexGrow: number;
    resizeable: boolean;
    comparator: any;
    pipe: any;
    sortable: boolean;
    draggable: boolean;
    canAutoResize: boolean;
    minWidth: number;
    width: number;
    maxWidth: number;
    checkboxable: boolean;
    headerCheckboxable: boolean;
    headerClass: string | ((data: any) => string | any);
    cellClass: string | ((data: any) => string | any);
    isTreeColumn: boolean;
    treeLevelIndent: number;
    summaryFunc: (cells: any[]) => any;
    summaryTemplate: TemplateRef<any>;
    _cellTemplateInput: TemplateRef<any>;
    _cellTemplateQuery: TemplateRef<any>;
    get cellTemplate(): TemplateRef<any>;
    _headerTemplateInput: TemplateRef<any>;
    _headerTemplateQuery: TemplateRef<any>;
    get headerTemplate(): TemplateRef<any>;
    _treeToggleTemplateInput: TemplateRef<any>;
    _treeToggleTemplateQuery: TemplateRef<any>;
    get treeToggleTemplate(): TemplateRef<any>;
    private isFirstChange;
    constructor(columnChangesService: ColumnChangesService);
    ngOnChanges(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DataTableColumnDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<DataTableColumnDirective, "ngx-datatable-column", never, { "name": "name"; "prop": "prop"; "frozenLeft": "frozenLeft"; "frozenRight": "frozenRight"; "flexGrow": "flexGrow"; "resizeable": "resizeable"; "comparator": "comparator"; "pipe": "pipe"; "sortable": "sortable"; "draggable": "draggable"; "canAutoResize": "canAutoResize"; "minWidth": "minWidth"; "width": "width"; "maxWidth": "maxWidth"; "checkboxable": "checkboxable"; "headerCheckboxable": "headerCheckboxable"; "headerClass": "headerClass"; "cellClass": "cellClass"; "isTreeColumn": "isTreeColumn"; "treeLevelIndent": "treeLevelIndent"; "summaryFunc": "summaryFunc"; "summaryTemplate": "summaryTemplate"; "_cellTemplateInput": "cellTemplate"; "_headerTemplateInput": "headerTemplate"; "_treeToggleTemplateInput": "treeToggleTemplate"; }, {}, ["_cellTemplateQuery", "_headerTemplateQuery", "_treeToggleTemplateQuery"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sdW1uLmRpcmVjdGl2ZS5kLnRzIiwic291cmNlcyI6WyJjb2x1bW4uZGlyZWN0aXZlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUZW1wbGF0ZVJlZiwgT25DaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb2x1bW5DaGFuZ2VzU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL2NvbHVtbi1jaGFuZ2VzLnNlcnZpY2UnO1xuaW1wb3J0IHsgVGFibGVDb2x1bW5Qcm9wIH0gZnJvbSAnLi4vLi4vdHlwZXMvdGFibGUtY29sdW1uLnR5cGUnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgRGF0YVRhYmxlQ29sdW1uRGlyZWN0aXZlIGltcGxlbWVudHMgT25DaGFuZ2VzIHtcbiAgICBwcml2YXRlIGNvbHVtbkNoYW5nZXNTZXJ2aWNlO1xuICAgIG5hbWU6IHN0cmluZztcbiAgICBwcm9wOiBUYWJsZUNvbHVtblByb3A7XG4gICAgZnJvemVuTGVmdDogYW55O1xuICAgIGZyb3plblJpZ2h0OiBhbnk7XG4gICAgZmxleEdyb3c6IG51bWJlcjtcbiAgICByZXNpemVhYmxlOiBib29sZWFuO1xuICAgIGNvbXBhcmF0b3I6IGFueTtcbiAgICBwaXBlOiBhbnk7XG4gICAgc29ydGFibGU6IGJvb2xlYW47XG4gICAgZHJhZ2dhYmxlOiBib29sZWFuO1xuICAgIGNhbkF1dG9SZXNpemU6IGJvb2xlYW47XG4gICAgbWluV2lkdGg6IG51bWJlcjtcbiAgICB3aWR0aDogbnVtYmVyO1xuICAgIG1heFdpZHRoOiBudW1iZXI7XG4gICAgY2hlY2tib3hhYmxlOiBib29sZWFuO1xuICAgIGhlYWRlckNoZWNrYm94YWJsZTogYm9vbGVhbjtcbiAgICBoZWFkZXJDbGFzczogc3RyaW5nIHwgKChkYXRhOiBhbnkpID0+IHN0cmluZyB8IGFueSk7XG4gICAgY2VsbENsYXNzOiBzdHJpbmcgfCAoKGRhdGE6IGFueSkgPT4gc3RyaW5nIHwgYW55KTtcbiAgICBpc1RyZWVDb2x1bW46IGJvb2xlYW47XG4gICAgdHJlZUxldmVsSW5kZW50OiBudW1iZXI7XG4gICAgc3VtbWFyeUZ1bmM6IChjZWxsczogYW55W10pID0+IGFueTtcbiAgICBzdW1tYXJ5VGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgX2NlbGxUZW1wbGF0ZUlucHV0OiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIF9jZWxsVGVtcGxhdGVRdWVyeTogVGVtcGxhdGVSZWY8YW55PjtcbiAgICBnZXQgY2VsbFRlbXBsYXRlKCk6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgX2hlYWRlclRlbXBsYXRlSW5wdXQ6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgX2hlYWRlclRlbXBsYXRlUXVlcnk6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgZ2V0IGhlYWRlclRlbXBsYXRlKCk6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgX3RyZWVUb2dnbGVUZW1wbGF0ZUlucHV0OiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIF90cmVlVG9nZ2xlVGVtcGxhdGVRdWVyeTogVGVtcGxhdGVSZWY8YW55PjtcbiAgICBnZXQgdHJlZVRvZ2dsZVRlbXBsYXRlKCk6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgcHJpdmF0ZSBpc0ZpcnN0Q2hhbmdlO1xuICAgIGNvbnN0cnVjdG9yKGNvbHVtbkNoYW5nZXNTZXJ2aWNlOiBDb2x1bW5DaGFuZ2VzU2VydmljZSk7XG4gICAgbmdPbkNoYW5nZXMoKTogdm9pZDtcbn1cbiJdfQ==